
projekt_mikro.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000051fc  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001c0  08005308  08005308  00006308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080054c8  080054c8  00007064  2**0
                  CONTENTS
  4 .ARM          00000008  080054c8  080054c8  000064c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080054d0  080054d0  00007064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080054d0  080054d0  000064d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080054d4  080054d4  000064d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  080054d8  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000013bc  20000064  0800553c  00007064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001420  0800553c  00007420  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00007064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000d9f9  00000000  00000000  0000708d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000247b  00000000  00000000  00014a86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000cf8  00000000  00000000  00016f08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000a3c  00000000  00000000  00017c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001842d  00000000  00000000  0001863c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000fd57  00000000  00000000  00030a69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b441  00000000  00000000  000407c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000cbc01  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003aec  00000000  00000000  000cbc44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  000cf730  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000064 	.word	0x20000064
 8000128:	00000000 	.word	0x00000000
 800012c:	080052f0 	.word	0x080052f0

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000068 	.word	0x20000068
 8000148:	080052f0 	.word	0x080052f0

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <init_dht11>:
 *  Created on: Jan 6, 2025
 *      Author: kubaw
 */
#include "dht11.h"

void init_dht11(dht11_t *dht, GPIO_TypeDef* port, uint16_t pin, TIM_HandleTypeDef *htim){
 800015c:	b480      	push	{r7}
 800015e:	b085      	sub	sp, #20
 8000160:	af00      	add	r7, sp, #0
 8000162:	60f8      	str	r0, [r7, #12]
 8000164:	60b9      	str	r1, [r7, #8]
 8000166:	603b      	str	r3, [r7, #0]
 8000168:	4613      	mov	r3, r2
 800016a:	80fb      	strh	r3, [r7, #6]
	dht->htim = htim;
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	683a      	ldr	r2, [r7, #0]
 8000170:	609a      	str	r2, [r3, #8]
	dht->port = port;
 8000172:	68fb      	ldr	r3, [r7, #12]
 8000174:	68ba      	ldr	r2, [r7, #8]
 8000176:	601a      	str	r2, [r3, #0]
	dht->pin = pin;
 8000178:	68fb      	ldr	r3, [r7, #12]
 800017a:	88fa      	ldrh	r2, [r7, #6]
 800017c:	809a      	strh	r2, [r3, #4]
	dht->empty = 0;
 800017e:	68fb      	ldr	r3, [r7, #12]
 8000180:	2200      	movs	r2, #0
 8000182:	f8a3 2bc4 	strh.w	r2, [r3, #3012]	@ 0xbc4
	dht->busy = 0;
 8000186:	68fb      	ldr	r3, [r7, #12]
 8000188:	2200      	movs	r2, #0
 800018a:	f8a3 2bc6 	strh.w	r2, [r3, #3014]	@ 0xbc6
	dht->count = 0;
 800018e:	68fb      	ldr	r3, [r7, #12]
 8000190:	2200      	movs	r2, #0
 8000192:	f8a3 2bc8 	strh.w	r2, [r3, #3016]	@ 0xbc8
}
 8000196:	bf00      	nop
 8000198:	3714      	adds	r7, #20
 800019a:	46bd      	mov	sp, r7
 800019c:	bc80      	pop	{r7}
 800019e:	4770      	bx	lr

080001a0 <add_to_dht11_buf>:

void add_to_dht11_buf(dht11_t *dht, uint8_t data[4]) {
 80001a0:	b490      	push	{r4, r7}
 80001a2:	b084      	sub	sp, #16
 80001a4:	af00      	add	r7, sp, #0
 80001a6:	6078      	str	r0, [r7, #4]
 80001a8:	6039      	str	r1, [r7, #0]
	for (uint8_t i = 0; i < 4; i++)
 80001aa:	2300      	movs	r3, #0
 80001ac:	73fb      	strb	r3, [r7, #15]
 80001ae:	e012      	b.n	80001d6 <add_to_dht11_buf+0x36>
		dht->buf[dht->empty][i] = data[i];
 80001b0:	7bfb      	ldrb	r3, [r7, #15]
 80001b2:	683a      	ldr	r2, [r7, #0]
 80001b4:	441a      	add	r2, r3
 80001b6:	687b      	ldr	r3, [r7, #4]
 80001b8:	f8b3 3bc4 	ldrh.w	r3, [r3, #3012]	@ 0xbc4
 80001bc:	461c      	mov	r4, r3
 80001be:	7bfb      	ldrb	r3, [r7, #15]
 80001c0:	7810      	ldrb	r0, [r2, #0]
 80001c2:	6879      	ldr	r1, [r7, #4]
 80001c4:	00a2      	lsls	r2, r4, #2
 80001c6:	440a      	add	r2, r1
 80001c8:	4413      	add	r3, r2
 80001ca:	330c      	adds	r3, #12
 80001cc:	4602      	mov	r2, r0
 80001ce:	701a      	strb	r2, [r3, #0]
	for (uint8_t i = 0; i < 4; i++)
 80001d0:	7bfb      	ldrb	r3, [r7, #15]
 80001d2:	3301      	adds	r3, #1
 80001d4:	73fb      	strb	r3, [r7, #15]
 80001d6:	7bfb      	ldrb	r3, [r7, #15]
 80001d8:	2b03      	cmp	r3, #3
 80001da:	d9e9      	bls.n	80001b0 <add_to_dht11_buf+0x10>
	dht->empty = (dht->empty + 1) % DHT11_BUF_SIZE;
 80001dc:	687b      	ldr	r3, [r7, #4]
 80001de:	f8b3 3bc4 	ldrh.w	r3, [r3, #3012]	@ 0xbc4
 80001e2:	3301      	adds	r3, #1
 80001e4:	4a11      	ldr	r2, [pc, #68]	@ (800022c <add_to_dht11_buf+0x8c>)
 80001e6:	fb82 1203 	smull	r1, r2, r2, r3
 80001ea:	1111      	asrs	r1, r2, #4
 80001ec:	17da      	asrs	r2, r3, #31
 80001ee:	1a8a      	subs	r2, r1, r2
 80001f0:	f240 21ee 	movw	r1, #750	@ 0x2ee
 80001f4:	fb01 f202 	mul.w	r2, r1, r2
 80001f8:	1a9a      	subs	r2, r3, r2
 80001fa:	b292      	uxth	r2, r2
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	f8a3 2bc4 	strh.w	r2, [r3, #3012]	@ 0xbc4
	if (dht->count < DHT11_BUF_SIZE) dht->count++;
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	f8b3 3bc8 	ldrh.w	r3, [r3, #3016]	@ 0xbc8
 8000208:	f240 22ed 	movw	r2, #749	@ 0x2ed
 800020c:	4293      	cmp	r3, r2
 800020e:	d807      	bhi.n	8000220 <add_to_dht11_buf+0x80>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	f8b3 3bc8 	ldrh.w	r3, [r3, #3016]	@ 0xbc8
 8000216:	3301      	adds	r3, #1
 8000218:	b29a      	uxth	r2, r3
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	f8a3 2bc8 	strh.w	r2, [r3, #3016]	@ 0xbc8
}
 8000220:	bf00      	nop
 8000222:	3710      	adds	r7, #16
 8000224:	46bd      	mov	sp, r7
 8000226:	bc90      	pop	{r4, r7}
 8000228:	4770      	bx	lr
 800022a:	bf00      	nop
 800022c:	057619f1 	.word	0x057619f1

08000230 <set_dht11_gpio_mode>:


void set_dht11_gpio_mode(dht11_t *dht, uint8_t mode) {
 8000230:	b580      	push	{r7, lr}
 8000232:	b086      	sub	sp, #24
 8000234:	af00      	add	r7, sp, #0
 8000236:	6078      	str	r0, [r7, #4]
 8000238:	460b      	mov	r3, r1
 800023a:	70fb      	strb	r3, [r7, #3]
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 800023c:	f107 0308 	add.w	r3, r7, #8
 8000240:	2200      	movs	r2, #0
 8000242:	601a      	str	r2, [r3, #0]
 8000244:	605a      	str	r2, [r3, #4]
 8000246:	609a      	str	r2, [r3, #8]
 8000248:	60da      	str	r2, [r3, #12]

	if (mode == OUTPUT) {
 800024a:	78fb      	ldrb	r3, [r7, #3]
 800024c:	2b01      	cmp	r3, #1
 800024e:	d111      	bne.n	8000274 <set_dht11_gpio_mode+0x44>
		GPIO_InitStruct.Pin = dht->pin;
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	889b      	ldrh	r3, [r3, #4]
 8000254:	60bb      	str	r3, [r7, #8]
		GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000256:	2301      	movs	r3, #1
 8000258:	60fb      	str	r3, [r7, #12]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 800025a:	2300      	movs	r3, #0
 800025c:	613b      	str	r3, [r7, #16]
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800025e:	2303      	movs	r3, #3
 8000260:	617b      	str	r3, [r7, #20]
		HAL_GPIO_Init(dht->port, &GPIO_InitStruct);
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	f107 0208 	add.w	r2, r7, #8
 800026a:	4611      	mov	r1, r2
 800026c:	4618      	mov	r0, r3
 800026e:	f001 fbdf 	bl	8001a30 <HAL_GPIO_Init>
		GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
		GPIO_InitStruct.Pull = GPIO_NOPULL;
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
		HAL_GPIO_Init(dht->port, &GPIO_InitStruct);
	}
}
 8000272:	e013      	b.n	800029c <set_dht11_gpio_mode+0x6c>
	} else if (mode == INPUT) {
 8000274:	78fb      	ldrb	r3, [r7, #3]
 8000276:	2b00      	cmp	r3, #0
 8000278:	d110      	bne.n	800029c <set_dht11_gpio_mode+0x6c>
		GPIO_InitStruct.Pin = dht->pin;
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	889b      	ldrh	r3, [r3, #4]
 800027e:	60bb      	str	r3, [r7, #8]
		GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000280:	2300      	movs	r3, #0
 8000282:	60fb      	str	r3, [r7, #12]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000284:	2300      	movs	r3, #0
 8000286:	613b      	str	r3, [r7, #16]
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000288:	2303      	movs	r3, #3
 800028a:	617b      	str	r3, [r7, #20]
		HAL_GPIO_Init(dht->port, &GPIO_InitStruct);
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	f107 0208 	add.w	r2, r7, #8
 8000294:	4611      	mov	r1, r2
 8000296:	4618      	mov	r0, r3
 8000298:	f001 fbca 	bl	8001a30 <HAL_GPIO_Init>
}
 800029c:	bf00      	nop
 800029e:	3718      	adds	r7, #24
 80002a0:	46bd      	mov	sp, r7
 80002a2:	bd80      	pop	{r7, pc}

080002a4 <readDHT11>:

uint8_t readDHT11(dht11_t *dht) {
 80002a4:	b580      	push	{r7, lr}
 80002a6:	b086      	sub	sp, #24
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
	uint8_t data[5] = {0};
 80002ac:	2300      	movs	r3, #0
 80002ae:	60bb      	str	r3, [r7, #8]
 80002b0:	2300      	movs	r3, #0
 80002b2:	733b      	strb	r3, [r7, #12]
	uint16_t high_time;

	//start komunikacji
	set_dht11_gpio_mode(dht, OUTPUT);
 80002b4:	2101      	movs	r1, #1
 80002b6:	6878      	ldr	r0, [r7, #4]
 80002b8:	f7ff ffba 	bl	8000230 <set_dht11_gpio_mode>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80002bc:	b672      	cpsid	i
}
 80002be:	bf00      	nop
	__disable_irq();

	HAL_GPIO_WritePin(dht->port, dht->pin, GPIO_PIN_RESET); // stan niski na 18ms
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	6818      	ldr	r0, [r3, #0]
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	889b      	ldrh	r3, [r3, #4]
 80002c8:	2200      	movs	r2, #0
 80002ca:	4619      	mov	r1, r3
 80002cc:	f001 fd4b 	bl	8001d66 <HAL_GPIO_WritePin>
	HAL_Delay(18);
 80002d0:	2012      	movs	r0, #18
 80002d2:	f001 f9c9 	bl	8001668 <HAL_Delay>
	HAL_GPIO_WritePin(dht->port, dht->pin, GPIO_PIN_SET);
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	6818      	ldr	r0, [r3, #0]
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	889b      	ldrh	r3, [r3, #4]
 80002de:	2201      	movs	r2, #1
 80002e0:	4619      	mov	r1, r3
 80002e2:	f001 fd40 	bl	8001d66 <HAL_GPIO_WritePin>
	set_dht11_gpio_mode(dht, INPUT);
 80002e6:	2100      	movs	r1, #0
 80002e8:	6878      	ldr	r0, [r7, #4]
 80002ea:	f7ff ffa1 	bl	8000230 <set_dht11_gpio_mode>


    // Oczekiwanie na zbocze narastające sygnału (sygnał gotowości czujnika)
	while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_SET);
 80002ee:	bf00      	nop
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	681a      	ldr	r2, [r3, #0]
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	889b      	ldrh	r3, [r3, #4]
 80002f8:	4619      	mov	r1, r3
 80002fa:	4610      	mov	r0, r2
 80002fc:	f001 fd1c 	bl	8001d38 <HAL_GPIO_ReadPin>
 8000300:	4603      	mov	r3, r0
 8000302:	2b01      	cmp	r3, #1
 8000304:	d0f4      	beq.n	80002f0 <readDHT11+0x4c>
    while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_RESET);  // oczekiwanie na zbocze narastające
 8000306:	bf00      	nop
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	681a      	ldr	r2, [r3, #0]
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	889b      	ldrh	r3, [r3, #4]
 8000310:	4619      	mov	r1, r3
 8000312:	4610      	mov	r0, r2
 8000314:	f001 fd10 	bl	8001d38 <HAL_GPIO_ReadPin>
 8000318:	4603      	mov	r3, r0
 800031a:	2b00      	cmp	r3, #0
 800031c:	d0f4      	beq.n	8000308 <readDHT11+0x64>
    while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_SET);    // oczekiwanie na zbocze opadające
 800031e:	bf00      	nop
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	681a      	ldr	r2, [r3, #0]
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	889b      	ldrh	r3, [r3, #4]
 8000328:	4619      	mov	r1, r3
 800032a:	4610      	mov	r0, r2
 800032c:	f001 fd04 	bl	8001d38 <HAL_GPIO_ReadPin>
 8000330:	4603      	mov	r3, r0
 8000332:	2b01      	cmp	r3, #1
 8000334:	d0f4      	beq.n	8000320 <readDHT11+0x7c>

    // start PWM Input
    HAL_TIM_IC_Start(dht->htim, TIM_CHANNEL_1);
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	689b      	ldr	r3, [r3, #8]
 800033a:	2100      	movs	r1, #0
 800033c:	4618      	mov	r0, r3
 800033e:	f002 fb39 	bl	80029b4 <HAL_TIM_IC_Start>
    HAL_TIM_IC_Start(dht->htim, TIM_CHANNEL_2);
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	689b      	ldr	r3, [r3, #8]
 8000346:	2104      	movs	r1, #4
 8000348:	4618      	mov	r0, r3
 800034a:	f002 fb33 	bl	80029b4 <HAL_TIM_IC_Start>

    for (uint8_t i = 0; i < 40; i++) {
 800034e:	2300      	movs	r3, #0
 8000350:	757b      	strb	r3, [r7, #21]
 8000352:	e063      	b.n	800041c <readDHT11+0x178>
    	while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_RESET); // oczekiwanie na zbocze narastajace czyli bit
 8000354:	bf00      	nop
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	681a      	ldr	r2, [r3, #0]
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	889b      	ldrh	r3, [r3, #4]
 800035e:	4619      	mov	r1, r3
 8000360:	4610      	mov	r0, r2
 8000362:	f001 fce9 	bl	8001d38 <HAL_GPIO_ReadPin>
 8000366:	4603      	mov	r3, r0
 8000368:	2b00      	cmp	r3, #0
 800036a:	d0f4      	beq.n	8000356 <readDHT11+0xb2>

    	// Zresetowanie flag przechwytywania
    	__HAL_TIM_CLEAR_FLAG(dht->htim, TIM_FLAG_CC1 | TIM_FLAG_CC2);
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	f06f 0206 	mvn.w	r2, #6
 8000376:	611a      	str	r2, [r3, #16]

    	while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_SET);
 8000378:	bf00      	nop
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	681a      	ldr	r2, [r3, #0]
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	889b      	ldrh	r3, [r3, #4]
 8000382:	4619      	mov	r1, r3
 8000384:	4610      	mov	r0, r2
 8000386:	f001 fcd7 	bl	8001d38 <HAL_GPIO_ReadPin>
 800038a:	4603      	mov	r3, r0
 800038c:	2b01      	cmp	r3, #1
 800038e:	d0f4      	beq.n	800037a <readDHT11+0xd6>

    	uint16_t ccr1 = __HAL_TIM_GET_COMPARE(dht->htim, TIM_CHANNEL_1); // Zbocze narastające
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	689b      	ldr	r3, [r3, #8]
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000398:	827b      	strh	r3, [r7, #18]
    	uint16_t ccr2 = __HAL_TIM_GET_COMPARE(dht->htim, TIM_CHANNEL_2); // Zbocze opadające
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	689b      	ldr	r3, [r3, #8]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80003a2:	823b      	strh	r3, [r7, #16]

    	if (ccr2 >= ccr1) high_time = ccr2 - ccr1;
 80003a4:	8a3a      	ldrh	r2, [r7, #16]
 80003a6:	8a7b      	ldrh	r3, [r7, #18]
 80003a8:	429a      	cmp	r2, r3
 80003aa:	d304      	bcc.n	80003b6 <readDHT11+0x112>
 80003ac:	8a3a      	ldrh	r2, [r7, #16]
 80003ae:	8a7b      	ldrh	r3, [r7, #18]
 80003b0:	1ad3      	subs	r3, r2, r3
 80003b2:	82fb      	strh	r3, [r7, #22]
 80003b4:	e00b      	b.n	80003ce <readDHT11+0x12a>
    	else high_time = (dht->htim->Init.Period - ccr1) + ccr2 + 1; //jesli timer zaczal liczyc od poczatku
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	689b      	ldr	r3, [r3, #8]
 80003ba:	68db      	ldr	r3, [r3, #12]
 80003bc:	b29a      	uxth	r2, r3
 80003be:	8a7b      	ldrh	r3, [r7, #18]
 80003c0:	1ad3      	subs	r3, r2, r3
 80003c2:	b29a      	uxth	r2, r3
 80003c4:	8a3b      	ldrh	r3, [r7, #16]
 80003c6:	4413      	add	r3, r2
 80003c8:	b29b      	uxth	r3, r3
 80003ca:	3301      	adds	r3, #1
 80003cc:	82fb      	strh	r3, [r7, #22]

    	data[i / 8] <<= 1;
 80003ce:	7d7b      	ldrb	r3, [r7, #21]
 80003d0:	08db      	lsrs	r3, r3, #3
 80003d2:	b2da      	uxtb	r2, r3
 80003d4:	4613      	mov	r3, r2
 80003d6:	3318      	adds	r3, #24
 80003d8:	443b      	add	r3, r7
 80003da:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80003de:	4611      	mov	r1, r2
 80003e0:	005b      	lsls	r3, r3, #1
 80003e2:	b2da      	uxtb	r2, r3
 80003e4:	f101 0318 	add.w	r3, r1, #24
 80003e8:	443b      	add	r3, r7
 80003ea:	f803 2c10 	strb.w	r2, [r3, #-16]
    	if (high_time > 50) data[i / 8] |= 1;
 80003ee:	8afb      	ldrh	r3, [r7, #22]
 80003f0:	2b32      	cmp	r3, #50	@ 0x32
 80003f2:	d910      	bls.n	8000416 <readDHT11+0x172>
 80003f4:	7d7b      	ldrb	r3, [r7, #21]
 80003f6:	08db      	lsrs	r3, r3, #3
 80003f8:	b2da      	uxtb	r2, r3
 80003fa:	4613      	mov	r3, r2
 80003fc:	3318      	adds	r3, #24
 80003fe:	443b      	add	r3, r7
 8000400:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8000404:	4611      	mov	r1, r2
 8000406:	f043 0301 	orr.w	r3, r3, #1
 800040a:	b2da      	uxtb	r2, r3
 800040c:	f101 0318 	add.w	r3, r1, #24
 8000410:	443b      	add	r3, r7
 8000412:	f803 2c10 	strb.w	r2, [r3, #-16]
    for (uint8_t i = 0; i < 40; i++) {
 8000416:	7d7b      	ldrb	r3, [r7, #21]
 8000418:	3301      	adds	r3, #1
 800041a:	757b      	strb	r3, [r7, #21]
 800041c:	7d7b      	ldrb	r3, [r7, #21]
 800041e:	2b27      	cmp	r3, #39	@ 0x27
 8000420:	d998      	bls.n	8000354 <readDHT11+0xb0>
  __ASM volatile ("cpsie i" : : : "memory");
 8000422:	b662      	cpsie	i
}
 8000424:	bf00      	nop
    }

    __enable_irq();

    if (data[4] != (data[0] + data[1] + data[2] + data[3])) {
 8000426:	7b3b      	ldrb	r3, [r7, #12]
 8000428:	461a      	mov	r2, r3
 800042a:	7a3b      	ldrb	r3, [r7, #8]
 800042c:	4619      	mov	r1, r3
 800042e:	7a7b      	ldrb	r3, [r7, #9]
 8000430:	440b      	add	r3, r1
 8000432:	7ab9      	ldrb	r1, [r7, #10]
 8000434:	440b      	add	r3, r1
 8000436:	7af9      	ldrb	r1, [r7, #11]
 8000438:	440b      	add	r3, r1
 800043a:	429a      	cmp	r2, r3
 800043c:	d001      	beq.n	8000442 <readDHT11+0x19e>
    	return 1;
 800043e:	2301      	movs	r3, #1
 8000440:	e006      	b.n	8000450 <readDHT11+0x1ac>
    }

    add_to_dht11_buf(dht, data);
 8000442:	f107 0308 	add.w	r3, r7, #8
 8000446:	4619      	mov	r1, r3
 8000448:	6878      	ldr	r0, [r7, #4]
 800044a:	f7ff fea9 	bl	80001a0 <add_to_dht11_buf>
    return 0;
 800044e:	2300      	movs	r3, #0
}
 8000450:	4618      	mov	r0, r3
 8000452:	3718      	adds	r7, #24
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}

08000458 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000458:	b580      	push	{r7, lr}
 800045a:	b088      	sub	sp, #32
 800045c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800045e:	f107 0310 	add.w	r3, r7, #16
 8000462:	2200      	movs	r2, #0
 8000464:	601a      	str	r2, [r3, #0]
 8000466:	605a      	str	r2, [r3, #4]
 8000468:	609a      	str	r2, [r3, #8]
 800046a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800046c:	4b2d      	ldr	r3, [pc, #180]	@ (8000524 <MX_GPIO_Init+0xcc>)
 800046e:	699b      	ldr	r3, [r3, #24]
 8000470:	4a2c      	ldr	r2, [pc, #176]	@ (8000524 <MX_GPIO_Init+0xcc>)
 8000472:	f043 0310 	orr.w	r3, r3, #16
 8000476:	6193      	str	r3, [r2, #24]
 8000478:	4b2a      	ldr	r3, [pc, #168]	@ (8000524 <MX_GPIO_Init+0xcc>)
 800047a:	699b      	ldr	r3, [r3, #24]
 800047c:	f003 0310 	and.w	r3, r3, #16
 8000480:	60fb      	str	r3, [r7, #12]
 8000482:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000484:	4b27      	ldr	r3, [pc, #156]	@ (8000524 <MX_GPIO_Init+0xcc>)
 8000486:	699b      	ldr	r3, [r3, #24]
 8000488:	4a26      	ldr	r2, [pc, #152]	@ (8000524 <MX_GPIO_Init+0xcc>)
 800048a:	f043 0320 	orr.w	r3, r3, #32
 800048e:	6193      	str	r3, [r2, #24]
 8000490:	4b24      	ldr	r3, [pc, #144]	@ (8000524 <MX_GPIO_Init+0xcc>)
 8000492:	699b      	ldr	r3, [r3, #24]
 8000494:	f003 0320 	and.w	r3, r3, #32
 8000498:	60bb      	str	r3, [r7, #8]
 800049a:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800049c:	4b21      	ldr	r3, [pc, #132]	@ (8000524 <MX_GPIO_Init+0xcc>)
 800049e:	699b      	ldr	r3, [r3, #24]
 80004a0:	4a20      	ldr	r2, [pc, #128]	@ (8000524 <MX_GPIO_Init+0xcc>)
 80004a2:	f043 0304 	orr.w	r3, r3, #4
 80004a6:	6193      	str	r3, [r2, #24]
 80004a8:	4b1e      	ldr	r3, [pc, #120]	@ (8000524 <MX_GPIO_Init+0xcc>)
 80004aa:	699b      	ldr	r3, [r3, #24]
 80004ac:	f003 0304 	and.w	r3, r3, #4
 80004b0:	607b      	str	r3, [r7, #4]
 80004b2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80004b4:	4b1b      	ldr	r3, [pc, #108]	@ (8000524 <MX_GPIO_Init+0xcc>)
 80004b6:	699b      	ldr	r3, [r3, #24]
 80004b8:	4a1a      	ldr	r2, [pc, #104]	@ (8000524 <MX_GPIO_Init+0xcc>)
 80004ba:	f043 0308 	orr.w	r3, r3, #8
 80004be:	6193      	str	r3, [r2, #24]
 80004c0:	4b18      	ldr	r3, [pc, #96]	@ (8000524 <MX_GPIO_Init+0xcc>)
 80004c2:	699b      	ldr	r3, [r3, #24]
 80004c4:	f003 0308 	and.w	r3, r3, #8
 80004c8:	603b      	str	r3, [r7, #0]
 80004ca:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 80004cc:	2200      	movs	r2, #0
 80004ce:	2120      	movs	r1, #32
 80004d0:	4815      	ldr	r0, [pc, #84]	@ (8000528 <MX_GPIO_Init+0xd0>)
 80004d2:	f001 fc48 	bl	8001d66 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 80004d6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80004da:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80004dc:	4b13      	ldr	r3, [pc, #76]	@ (800052c <MX_GPIO_Init+0xd4>)
 80004de:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80004e0:	2300      	movs	r3, #0
 80004e2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80004e4:	f107 0310 	add.w	r3, r7, #16
 80004e8:	4619      	mov	r1, r3
 80004ea:	4811      	ldr	r0, [pc, #68]	@ (8000530 <MX_GPIO_Init+0xd8>)
 80004ec:	f001 faa0 	bl	8001a30 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LD2_Pin;
 80004f0:	2320      	movs	r3, #32
 80004f2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004f4:	2301      	movs	r3, #1
 80004f6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80004f8:	2300      	movs	r3, #0
 80004fa:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004fc:	2302      	movs	r3, #2
 80004fe:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8000500:	f107 0310 	add.w	r3, r7, #16
 8000504:	4619      	mov	r1, r3
 8000506:	4808      	ldr	r0, [pc, #32]	@ (8000528 <MX_GPIO_Init+0xd0>)
 8000508:	f001 fa92 	bl	8001a30 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800050c:	2200      	movs	r2, #0
 800050e:	2100      	movs	r1, #0
 8000510:	2028      	movs	r0, #40	@ 0x28
 8000512:	f001 f9a4 	bl	800185e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000516:	2028      	movs	r0, #40	@ 0x28
 8000518:	f001 f9bd 	bl	8001896 <HAL_NVIC_EnableIRQ>

}
 800051c:	bf00      	nop
 800051e:	3720      	adds	r7, #32
 8000520:	46bd      	mov	sp, r7
 8000522:	bd80      	pop	{r7, pc}
 8000524:	40021000 	.word	0x40021000
 8000528:	40010800 	.word	0x40010800
 800052c:	10110000 	.word	0x10110000
 8000530:	40011000 	.word	0x40011000

08000534 <calculate_crc_byte>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

/* === CRC === */
uint16_t calculate_crc_byte(uint16_t crc, uint8_t data) {
 8000534:	b480      	push	{r7}
 8000536:	b085      	sub	sp, #20
 8000538:	af00      	add	r7, sp, #0
 800053a:	4603      	mov	r3, r0
 800053c:	460a      	mov	r2, r1
 800053e:	80fb      	strh	r3, [r7, #6]
 8000540:	4613      	mov	r3, r2
 8000542:	717b      	strb	r3, [r7, #5]
	crc ^= (data << 8);
 8000544:	797b      	ldrb	r3, [r7, #5]
 8000546:	021b      	lsls	r3, r3, #8
 8000548:	b21a      	sxth	r2, r3
 800054a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800054e:	4053      	eors	r3, r2
 8000550:	b21b      	sxth	r3, r3
 8000552:	80fb      	strh	r3, [r7, #6]
	for (uint8_t i = 0; i < 8; i++) {
 8000554:	2300      	movs	r3, #0
 8000556:	73fb      	strb	r3, [r7, #15]
 8000558:	e013      	b.n	8000582 <calculate_crc_byte+0x4e>
		if (crc & 0x8000) crc = (crc << 1) ^ 0x1021;
 800055a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800055e:	2b00      	cmp	r3, #0
 8000560:	da09      	bge.n	8000576 <calculate_crc_byte+0x42>
 8000562:	88fb      	ldrh	r3, [r7, #6]
 8000564:	005b      	lsls	r3, r3, #1
 8000566:	b21b      	sxth	r3, r3
 8000568:	f483 5381 	eor.w	r3, r3, #4128	@ 0x1020
 800056c:	f083 0301 	eor.w	r3, r3, #1
 8000570:	b21b      	sxth	r3, r3
 8000572:	80fb      	strh	r3, [r7, #6]
 8000574:	e002      	b.n	800057c <calculate_crc_byte+0x48>
		else crc <<= 1;
 8000576:	88fb      	ldrh	r3, [r7, #6]
 8000578:	005b      	lsls	r3, r3, #1
 800057a:	80fb      	strh	r3, [r7, #6]
	for (uint8_t i = 0; i < 8; i++) {
 800057c:	7bfb      	ldrb	r3, [r7, #15]
 800057e:	3301      	adds	r3, #1
 8000580:	73fb      	strb	r3, [r7, #15]
 8000582:	7bfb      	ldrb	r3, [r7, #15]
 8000584:	2b07      	cmp	r3, #7
 8000586:	d9e8      	bls.n	800055a <calculate_crc_byte+0x26>
	}
	return crc;
 8000588:	88fb      	ldrh	r3, [r7, #6]
}
 800058a:	4618      	mov	r0, r3
 800058c:	3714      	adds	r7, #20
 800058e:	46bd      	mov	sp, r7
 8000590:	bc80      	pop	{r7}
 8000592:	4770      	bx	lr

08000594 <USART_fsend>:
    }

    return crc;
}

void USART_fsend(char* format, ...) {
 8000594:	b40f      	push	{r0, r1, r2, r3}
 8000596:	b580      	push	{r7, lr}
 8000598:	b0c4      	sub	sp, #272	@ 0x110
 800059a:	af00      	add	r7, sp, #0
	char tmp[256];
	va_list arglist;
	va_start(arglist, format);
 800059c:	f507 728e 	add.w	r2, r7, #284	@ 0x11c
 80005a0:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80005a4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80005a8:	601a      	str	r2, [r3, #0]
	vsprintf(tmp, format, arglist);
 80005aa:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80005ae:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80005b2:	f107 000c 	add.w	r0, r7, #12
 80005b6:	681a      	ldr	r2, [r3, #0]
 80005b8:	f8d7 1118 	ldr.w	r1, [r7, #280]	@ 0x118
 80005bc:	f004 f9ec 	bl	8004998 <vsiprintf>
	va_end(arglist);
	volatile int idx = USART_TX_EMPTY;
 80005c0:	4b44      	ldr	r3, [pc, #272]	@ (80006d4 <USART_fsend+0x140>)
 80005c2:	881b      	ldrh	r3, [r3, #0]
 80005c4:	b29b      	uxth	r3, r3
 80005c6:	461a      	mov	r2, r3
 80005c8:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80005cc:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80005d0:	601a      	str	r2, [r3, #0]
	for (int i = 0; i < strlen(tmp); i++) {
 80005d2:	2300      	movs	r3, #0
 80005d4:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 80005d8:	e025      	b.n	8000626 <USART_fsend+0x92>
		USART_BUF_TX[idx] = tmp[i];
 80005da:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80005de:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 80005e8:	f5a2 7182 	sub.w	r1, r2, #260	@ 0x104
 80005ec:	f8d7 210c 	ldr.w	r2, [r7, #268]	@ 0x10c
 80005f0:	440a      	add	r2, r1
 80005f2:	7811      	ldrb	r1, [r2, #0]
 80005f4:	4a38      	ldr	r2, [pc, #224]	@ (80006d8 <USART_fsend+0x144>)
 80005f6:	54d1      	strb	r1, [r2, r3]
		idx = (idx + 1) % USART_TXBUF_SIZE;
 80005f8:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80005fc:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	3301      	adds	r3, #1
 8000604:	425a      	negs	r2, r3
 8000606:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800060a:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800060e:	bf58      	it	pl
 8000610:	4253      	negpl	r3, r2
 8000612:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 8000616:	f5a2 7286 	sub.w	r2, r2, #268	@ 0x10c
 800061a:	6013      	str	r3, [r2, #0]
	for (int i = 0; i < strlen(tmp); i++) {
 800061c:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8000620:	3301      	adds	r3, #1
 8000622:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 8000626:	f107 030c 	add.w	r3, r7, #12
 800062a:	4618      	mov	r0, r3
 800062c:	f7ff fd8e 	bl	800014c <strlen>
 8000630:	4602      	mov	r2, r0
 8000632:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8000636:	429a      	cmp	r2, r3
 8000638:	d8cf      	bhi.n	80005da <USART_fsend+0x46>
  __ASM volatile ("cpsid i" : : : "memory");
 800063a:	b672      	cpsid	i
}
 800063c:	bf00      	nop
	}

	__disable_irq();
	if (USART_TX_EMPTY == USART_TX_BUSY && __HAL_UART_GET_FLAG(&huart2, UART_FLAG_TXE) == SET) {
 800063e:	4b25      	ldr	r3, [pc, #148]	@ (80006d4 <USART_fsend+0x140>)
 8000640:	881b      	ldrh	r3, [r3, #0]
 8000642:	b29a      	uxth	r2, r3
 8000644:	4b25      	ldr	r3, [pc, #148]	@ (80006dc <USART_fsend+0x148>)
 8000646:	881b      	ldrh	r3, [r3, #0]
 8000648:	b29b      	uxth	r3, r3
 800064a:	429a      	cmp	r2, r3
 800064c:	d130      	bne.n	80006b0 <USART_fsend+0x11c>
 800064e:	4b24      	ldr	r3, [pc, #144]	@ (80006e0 <USART_fsend+0x14c>)
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000658:	2b80      	cmp	r3, #128	@ 0x80
 800065a:	d129      	bne.n	80006b0 <USART_fsend+0x11c>
		USART_TX_EMPTY = idx;
 800065c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000660:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	b29a      	uxth	r2, r3
 8000668:	4b1a      	ldr	r3, [pc, #104]	@ (80006d4 <USART_fsend+0x140>)
 800066a:	801a      	strh	r2, [r3, #0]
		uint8_t tmp = USART_BUF_TX[USART_TX_BUSY];
 800066c:	4b1b      	ldr	r3, [pc, #108]	@ (80006dc <USART_fsend+0x148>)
 800066e:	881b      	ldrh	r3, [r3, #0]
 8000670:	b29b      	uxth	r3, r3
 8000672:	461a      	mov	r2, r3
 8000674:	4b18      	ldr	r3, [pc, #96]	@ (80006d8 <USART_fsend+0x144>)
 8000676:	5c9a      	ldrb	r2, [r3, r2]
 8000678:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800067c:	f2a3 130d 	subw	r3, r3, #269	@ 0x10d
 8000680:	701a      	strb	r2, [r3, #0]
		USART_TX_BUSY++;
 8000682:	4b16      	ldr	r3, [pc, #88]	@ (80006dc <USART_fsend+0x148>)
 8000684:	881b      	ldrh	r3, [r3, #0]
 8000686:	b29b      	uxth	r3, r3
 8000688:	3301      	adds	r3, #1
 800068a:	b29a      	uxth	r2, r3
 800068c:	4b13      	ldr	r3, [pc, #76]	@ (80006dc <USART_fsend+0x148>)
 800068e:	801a      	strh	r2, [r3, #0]
		if (USART_TX_BUSY >= USART_TXBUF_SIZE) USART_TX_BUSY = 0;
 8000690:	4b12      	ldr	r3, [pc, #72]	@ (80006dc <USART_fsend+0x148>)
 8000692:	881b      	ldrh	r3, [r3, #0]
 8000694:	b29b      	uxth	r3, r3
 8000696:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800069a:	d302      	bcc.n	80006a2 <USART_fsend+0x10e>
 800069c:	4b0f      	ldr	r3, [pc, #60]	@ (80006dc <USART_fsend+0x148>)
 800069e:	2200      	movs	r2, #0
 80006a0:	801a      	strh	r2, [r3, #0]
		HAL_UART_Transmit_IT(&huart2, &tmp, 1);
 80006a2:	1cfb      	adds	r3, r7, #3
 80006a4:	2201      	movs	r2, #1
 80006a6:	4619      	mov	r1, r3
 80006a8:	480d      	ldr	r0, [pc, #52]	@ (80006e0 <USART_fsend+0x14c>)
 80006aa:	f003 fb75 	bl	8003d98 <HAL_UART_Transmit_IT>
	if (USART_TX_EMPTY == USART_TX_BUSY && __HAL_UART_GET_FLAG(&huart2, UART_FLAG_TXE) == SET) {
 80006ae:	e007      	b.n	80006c0 <USART_fsend+0x12c>
	}
	else USART_TX_EMPTY = idx;
 80006b0:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80006b4:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	b29a      	uxth	r2, r3
 80006bc:	4b05      	ldr	r3, [pc, #20]	@ (80006d4 <USART_fsend+0x140>)
 80006be:	801a      	strh	r2, [r3, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 80006c0:	b662      	cpsie	i
}
 80006c2:	bf00      	nop
	__enable_irq();
}
 80006c4:	bf00      	nop
 80006c6:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 80006ca:	46bd      	mov	sp, r7
 80006cc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80006d0:	b004      	add	sp, #16
 80006d2:	4770      	bx	lr
 80006d4:	20000504 	.word	0x20000504
 80006d8:	20000104 	.word	0x20000104
 80006dc:	20000506 	.word	0x20000506
 80006e0:	2000128c 	.word	0x2000128c

080006e4 <HAL_UART_RxCpltCallback>:

/* === USART CALLBACK RECEIVE === */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 80006e4:	b580      	push	{r7, lr}
 80006e6:	b082      	sub	sp, #8
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]
	if (huart == &huart2) {
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	4a10      	ldr	r2, [pc, #64]	@ (8000730 <HAL_UART_RxCpltCallback+0x4c>)
 80006f0:	4293      	cmp	r3, r2
 80006f2:	d119      	bne.n	8000728 <HAL_UART_RxCpltCallback+0x44>
		USART_RX_EMPTY++;
 80006f4:	4b0f      	ldr	r3, [pc, #60]	@ (8000734 <HAL_UART_RxCpltCallback+0x50>)
 80006f6:	881b      	ldrh	r3, [r3, #0]
 80006f8:	b29b      	uxth	r3, r3
 80006fa:	3301      	adds	r3, #1
 80006fc:	b29a      	uxth	r2, r3
 80006fe:	4b0d      	ldr	r3, [pc, #52]	@ (8000734 <HAL_UART_RxCpltCallback+0x50>)
 8000700:	801a      	strh	r2, [r3, #0]
		if (USART_RX_EMPTY >= USART_RXBUF_SIZE) USART_RX_EMPTY = 0;
 8000702:	4b0c      	ldr	r3, [pc, #48]	@ (8000734 <HAL_UART_RxCpltCallback+0x50>)
 8000704:	881b      	ldrh	r3, [r3, #0]
 8000706:	b29b      	uxth	r3, r3
 8000708:	2b7f      	cmp	r3, #127	@ 0x7f
 800070a:	d902      	bls.n	8000712 <HAL_UART_RxCpltCallback+0x2e>
 800070c:	4b09      	ldr	r3, [pc, #36]	@ (8000734 <HAL_UART_RxCpltCallback+0x50>)
 800070e:	2200      	movs	r2, #0
 8000710:	801a      	strh	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart2, &USART_BUF_RX[USART_RX_EMPTY], 1);
 8000712:	4b08      	ldr	r3, [pc, #32]	@ (8000734 <HAL_UART_RxCpltCallback+0x50>)
 8000714:	881b      	ldrh	r3, [r3, #0]
 8000716:	b29b      	uxth	r3, r3
 8000718:	461a      	mov	r2, r3
 800071a:	4b07      	ldr	r3, [pc, #28]	@ (8000738 <HAL_UART_RxCpltCallback+0x54>)
 800071c:	4413      	add	r3, r2
 800071e:	2201      	movs	r2, #1
 8000720:	4619      	mov	r1, r3
 8000722:	4803      	ldr	r0, [pc, #12]	@ (8000730 <HAL_UART_RxCpltCallback+0x4c>)
 8000724:	f003 fb6d 	bl	8003e02 <HAL_UART_Receive_IT>
	}
}
 8000728:	bf00      	nop
 800072a:	3708      	adds	r7, #8
 800072c:	46bd      	mov	sp, r7
 800072e:	bd80      	pop	{r7, pc}
 8000730:	2000128c 	.word	0x2000128c
 8000734:	20000100 	.word	0x20000100
 8000738:	20000080 	.word	0x20000080

0800073c <HAL_UART_TxCpltCallback>:

/* === USART TRANSMIT CALLBACK === */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 800073c:	b580      	push	{r7, lr}
 800073e:	b084      	sub	sp, #16
 8000740:	af00      	add	r7, sp, #0
 8000742:	6078      	str	r0, [r7, #4]
    if (huart == &huart2) {
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	4a16      	ldr	r2, [pc, #88]	@ (80007a0 <HAL_UART_TxCpltCallback+0x64>)
 8000748:	4293      	cmp	r3, r2
 800074a:	d125      	bne.n	8000798 <HAL_UART_TxCpltCallback+0x5c>
        // sprawdzenie, czy są dane do wysłania
        if (USART_TX_EMPTY != USART_TX_BUSY) {
 800074c:	4b15      	ldr	r3, [pc, #84]	@ (80007a4 <HAL_UART_TxCpltCallback+0x68>)
 800074e:	881b      	ldrh	r3, [r3, #0]
 8000750:	b29a      	uxth	r2, r3
 8000752:	4b15      	ldr	r3, [pc, #84]	@ (80007a8 <HAL_UART_TxCpltCallback+0x6c>)
 8000754:	881b      	ldrh	r3, [r3, #0]
 8000756:	b29b      	uxth	r3, r3
 8000758:	429a      	cmp	r2, r3
 800075a:	d01d      	beq.n	8000798 <HAL_UART_TxCpltCallback+0x5c>
        	uint8_t tmp = USART_BUF_TX[USART_TX_BUSY];
 800075c:	4b12      	ldr	r3, [pc, #72]	@ (80007a8 <HAL_UART_TxCpltCallback+0x6c>)
 800075e:	881b      	ldrh	r3, [r3, #0]
 8000760:	b29b      	uxth	r3, r3
 8000762:	461a      	mov	r2, r3
 8000764:	4b11      	ldr	r3, [pc, #68]	@ (80007ac <HAL_UART_TxCpltCallback+0x70>)
 8000766:	5c9b      	ldrb	r3, [r3, r2]
 8000768:	73fb      	strb	r3, [r7, #15]
        	USART_TX_BUSY++;
 800076a:	4b0f      	ldr	r3, [pc, #60]	@ (80007a8 <HAL_UART_TxCpltCallback+0x6c>)
 800076c:	881b      	ldrh	r3, [r3, #0]
 800076e:	b29b      	uxth	r3, r3
 8000770:	3301      	adds	r3, #1
 8000772:	b29a      	uxth	r2, r3
 8000774:	4b0c      	ldr	r3, [pc, #48]	@ (80007a8 <HAL_UART_TxCpltCallback+0x6c>)
 8000776:	801a      	strh	r2, [r3, #0]
        	if (USART_TX_BUSY >= USART_TXBUF_SIZE) USART_TX_BUSY = 0;
 8000778:	4b0b      	ldr	r3, [pc, #44]	@ (80007a8 <HAL_UART_TxCpltCallback+0x6c>)
 800077a:	881b      	ldrh	r3, [r3, #0]
 800077c:	b29b      	uxth	r3, r3
 800077e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8000782:	d302      	bcc.n	800078a <HAL_UART_TxCpltCallback+0x4e>
 8000784:	4b08      	ldr	r3, [pc, #32]	@ (80007a8 <HAL_UART_TxCpltCallback+0x6c>)
 8000786:	2200      	movs	r2, #0
 8000788:	801a      	strh	r2, [r3, #0]
            HAL_UART_Transmit_IT(&huart2, &tmp, 1); // bajt wysłany, można wysłać następny
 800078a:	f107 030f 	add.w	r3, r7, #15
 800078e:	2201      	movs	r2, #1
 8000790:	4619      	mov	r1, r3
 8000792:	4803      	ldr	r0, [pc, #12]	@ (80007a0 <HAL_UART_TxCpltCallback+0x64>)
 8000794:	f003 fb00 	bl	8003d98 <HAL_UART_Transmit_IT>
        }
    }
}
 8000798:	bf00      	nop
 800079a:	3710      	adds	r7, #16
 800079c:	46bd      	mov	sp, r7
 800079e:	bd80      	pop	{r7, pc}
 80007a0:	2000128c 	.word	0x2000128c
 80007a4:	20000504 	.word	0x20000504
 80007a8:	20000506 	.word	0x20000506
 80007ac:	20000104 	.word	0x20000104

080007b0 <USART_getchar>:

int16_t USART_getchar(){
 80007b0:	b480      	push	{r7}
 80007b2:	b083      	sub	sp, #12
 80007b4:	af00      	add	r7, sp, #0
	int16_t tmp;
	if (USART_RX_EMPTY != USART_RX_BUSY) {
 80007b6:	4b14      	ldr	r3, [pc, #80]	@ (8000808 <USART_getchar+0x58>)
 80007b8:	881b      	ldrh	r3, [r3, #0]
 80007ba:	b29a      	uxth	r2, r3
 80007bc:	4b13      	ldr	r3, [pc, #76]	@ (800080c <USART_getchar+0x5c>)
 80007be:	881b      	ldrh	r3, [r3, #0]
 80007c0:	b29b      	uxth	r3, r3
 80007c2:	429a      	cmp	r2, r3
 80007c4:	d018      	beq.n	80007f8 <USART_getchar+0x48>
		 tmp = USART_BUF_RX[USART_RX_BUSY];
 80007c6:	4b11      	ldr	r3, [pc, #68]	@ (800080c <USART_getchar+0x5c>)
 80007c8:	881b      	ldrh	r3, [r3, #0]
 80007ca:	b29b      	uxth	r3, r3
 80007cc:	461a      	mov	r2, r3
 80007ce:	4b10      	ldr	r3, [pc, #64]	@ (8000810 <USART_getchar+0x60>)
 80007d0:	5c9b      	ldrb	r3, [r3, r2]
 80007d2:	80fb      	strh	r3, [r7, #6]
		 USART_RX_BUSY++;
 80007d4:	4b0d      	ldr	r3, [pc, #52]	@ (800080c <USART_getchar+0x5c>)
 80007d6:	881b      	ldrh	r3, [r3, #0]
 80007d8:	b29b      	uxth	r3, r3
 80007da:	3301      	adds	r3, #1
 80007dc:	b29a      	uxth	r2, r3
 80007de:	4b0b      	ldr	r3, [pc, #44]	@ (800080c <USART_getchar+0x5c>)
 80007e0:	801a      	strh	r2, [r3, #0]
		 if (USART_RX_BUSY >= USART_RXBUF_SIZE) USART_RX_BUSY = 0;
 80007e2:	4b0a      	ldr	r3, [pc, #40]	@ (800080c <USART_getchar+0x5c>)
 80007e4:	881b      	ldrh	r3, [r3, #0]
 80007e6:	b29b      	uxth	r3, r3
 80007e8:	2b7f      	cmp	r3, #127	@ 0x7f
 80007ea:	d902      	bls.n	80007f2 <USART_getchar+0x42>
 80007ec:	4b07      	ldr	r3, [pc, #28]	@ (800080c <USART_getchar+0x5c>)
 80007ee:	2200      	movs	r2, #0
 80007f0:	801a      	strh	r2, [r3, #0]
		 return tmp;
 80007f2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80007f6:	e001      	b.n	80007fc <USART_getchar+0x4c>
	} else return -1;
 80007f8:	f04f 33ff 	mov.w	r3, #4294967295

}
 80007fc:	4618      	mov	r0, r3
 80007fe:	370c      	adds	r7, #12
 8000800:	46bd      	mov	sp, r7
 8000802:	bc80      	pop	{r7}
 8000804:	4770      	bx	lr
 8000806:	bf00      	nop
 8000808:	20000100 	.word	0x20000100
 800080c:	20000102 	.word	0x20000102
 8000810:	20000080 	.word	0x20000080

08000814 <validate_and_atoi>:

uint16_t validate_and_atoi(const char *str, size_t length) {
 8000814:	b480      	push	{r7}
 8000816:	b085      	sub	sp, #20
 8000818:	af00      	add	r7, sp, #0
 800081a:	6078      	str	r0, [r7, #4]
 800081c:	6039      	str	r1, [r7, #0]
    uint16_t result = 0;
 800081e:	2300      	movs	r3, #0
 8000820:	81fb      	strh	r3, [r7, #14]

    // sprawdzanie czy kazdy znak to cyfra
    for (size_t i = 0; i < length; i++) {
 8000822:	2300      	movs	r3, #0
 8000824:	60bb      	str	r3, [r7, #8]
 8000826:	e01e      	b.n	8000866 <validate_and_atoi+0x52>
        if (str[i] < '0' || str[i] > '9') {
 8000828:	687a      	ldr	r2, [r7, #4]
 800082a:	68bb      	ldr	r3, [r7, #8]
 800082c:	4413      	add	r3, r2
 800082e:	781b      	ldrb	r3, [r3, #0]
 8000830:	2b2f      	cmp	r3, #47	@ 0x2f
 8000832:	d905      	bls.n	8000840 <validate_and_atoi+0x2c>
 8000834:	687a      	ldr	r2, [r7, #4]
 8000836:	68bb      	ldr	r3, [r7, #8]
 8000838:	4413      	add	r3, r2
 800083a:	781b      	ldrb	r3, [r3, #0]
 800083c:	2b39      	cmp	r3, #57	@ 0x39
 800083e:	d901      	bls.n	8000844 <validate_and_atoi+0x30>
            //USART_fsend("invalid char '%c' during atoi\n", str[i]);
            return 0; // kod bledu
 8000840:	2300      	movs	r3, #0
 8000842:	e015      	b.n	8000870 <validate_and_atoi+0x5c>
        }
        result = (result * 10) + (str[i] - '0');
 8000844:	89fb      	ldrh	r3, [r7, #14]
 8000846:	461a      	mov	r2, r3
 8000848:	0092      	lsls	r2, r2, #2
 800084a:	4413      	add	r3, r2
 800084c:	005b      	lsls	r3, r3, #1
 800084e:	b29b      	uxth	r3, r3
 8000850:	6879      	ldr	r1, [r7, #4]
 8000852:	68ba      	ldr	r2, [r7, #8]
 8000854:	440a      	add	r2, r1
 8000856:	7812      	ldrb	r2, [r2, #0]
 8000858:	4413      	add	r3, r2
 800085a:	b29b      	uxth	r3, r3
 800085c:	3b30      	subs	r3, #48	@ 0x30
 800085e:	81fb      	strh	r3, [r7, #14]
    for (size_t i = 0; i < length; i++) {
 8000860:	68bb      	ldr	r3, [r7, #8]
 8000862:	3301      	adds	r3, #1
 8000864:	60bb      	str	r3, [r7, #8]
 8000866:	68ba      	ldr	r2, [r7, #8]
 8000868:	683b      	ldr	r3, [r7, #0]
 800086a:	429a      	cmp	r2, r3
 800086c:	d3dc      	bcc.n	8000828 <validate_and_atoi+0x14>
    }

    return result;
 800086e:	89fb      	ldrh	r3, [r7, #14]
}
 8000870:	4618      	mov	r0, r3
 8000872:	3714      	adds	r7, #20
 8000874:	46bd      	mov	sp, r7
 8000876:	bc80      	pop	{r7}
 8000878:	4770      	bx	lr
	...

0800087c <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 800087c:	b480      	push	{r7}
 800087e:	b083      	sub	sp, #12
 8000880:	af00      	add	r7, sp, #0
 8000882:	6078      	str	r0, [r7, #4]
    if (htim->Instance == TIM4) {
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	4a0a      	ldr	r2, [pc, #40]	@ (80008b4 <HAL_TIM_PeriodElapsedCallback+0x38>)
 800088a:	4293      	cmp	r3, r2
 800088c:	d10d      	bne.n	80008aa <HAL_TIM_PeriodElapsedCallback+0x2e>
    	__HAL_TIM_SET_AUTORELOAD(&htim4, measurement_interval - 1);
 800088e:	4b0a      	ldr	r3, [pc, #40]	@ (80008b8 <HAL_TIM_PeriodElapsedCallback+0x3c>)
 8000890:	681a      	ldr	r2, [r3, #0]
 8000892:	4b0a      	ldr	r3, [pc, #40]	@ (80008bc <HAL_TIM_PeriodElapsedCallback+0x40>)
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	3a01      	subs	r2, #1
 8000898:	62da      	str	r2, [r3, #44]	@ 0x2c
 800089a:	4b07      	ldr	r3, [pc, #28]	@ (80008b8 <HAL_TIM_PeriodElapsedCallback+0x3c>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	3b01      	subs	r3, #1
 80008a0:	4a06      	ldr	r2, [pc, #24]	@ (80008bc <HAL_TIM_PeriodElapsedCallback+0x40>)
 80008a2:	60d3      	str	r3, [r2, #12]
        // tutaj funkcja do czytania
    	DHT11_READ_FLAG = 1;
 80008a4:	4b06      	ldr	r3, [pc, #24]	@ (80008c0 <HAL_TIM_PeriodElapsedCallback+0x44>)
 80008a6:	2201      	movs	r2, #1
 80008a8:	701a      	strb	r2, [r3, #0]
    }
}
 80008aa:	bf00      	nop
 80008ac:	370c      	adds	r7, #12
 80008ae:	46bd      	mov	sp, r7
 80008b0:	bc80      	pop	{r7}
 80008b2:	4770      	bx	lr
 80008b4:	40000800 	.word	0x40000800
 80008b8:	20000000 	.word	0x20000000
 80008bc:	20001244 	.word	0x20001244
 80008c0:	20000508 	.word	0x20000508

080008c4 <set_interval>:

void set_interval(uint32_t interval) {
 80008c4:	b580      	push	{r7, lr}
 80008c6:	b082      	sub	sp, #8
 80008c8:	af00      	add	r7, sp, #0
 80008ca:	6078      	str	r0, [r7, #4]
	measurement_interval = interval; // Przypisz nowy interwał
 80008cc:	4a0c      	ldr	r2, [pc, #48]	@ (8000900 <set_interval+0x3c>)
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	6013      	str	r3, [r2, #0]
	__HAL_TIM_SET_AUTORELOAD(&htim4, interval - 1);  // Ustawiamy okres
 80008d2:	4b0c      	ldr	r3, [pc, #48]	@ (8000904 <set_interval+0x40>)
 80008d4:	681b      	ldr	r3, [r3, #0]
 80008d6:	687a      	ldr	r2, [r7, #4]
 80008d8:	3a01      	subs	r2, #1
 80008da:	62da      	str	r2, [r3, #44]	@ 0x2c
 80008dc:	687b      	ldr	r3, [r7, #4]
 80008de:	3b01      	subs	r3, #1
 80008e0:	4a08      	ldr	r2, [pc, #32]	@ (8000904 <set_interval+0x40>)
 80008e2:	60d3      	str	r3, [r2, #12]
	HAL_TIM_Base_Stop_IT(&htim4);
 80008e4:	4807      	ldr	r0, [pc, #28]	@ (8000904 <set_interval+0x40>)
 80008e6:	f001 ff2b 	bl	8002740 <HAL_TIM_Base_Stop_IT>
	HAL_TIM_Base_Start_IT(&htim4);
 80008ea:	4806      	ldr	r0, [pc, #24]	@ (8000904 <set_interval+0x40>)
 80008ec:	f001 fed6 	bl	800269c <HAL_TIM_Base_Start_IT>

	USART_fsend("INTERVAL_OK");
 80008f0:	4805      	ldr	r0, [pc, #20]	@ (8000908 <set_interval+0x44>)
 80008f2:	f7ff fe4f 	bl	8000594 <USART_fsend>
}
 80008f6:	bf00      	nop
 80008f8:	3708      	adds	r7, #8
 80008fa:	46bd      	mov	sp, r7
 80008fc:	bd80      	pop	{r7, pc}
 80008fe:	bf00      	nop
 8000900:	20000000 	.word	0x20000000
 8000904:	20001244 	.word	0x20001244
 8000908:	08005308 	.word	0x08005308

0800090c <process_frame>:


void process_frame() {
 800090c:	b580      	push	{r7, lr}
 800090e:	b086      	sub	sp, #24
 8000910:	af00      	add	r7, sp, #0


	if (frame.length_int < 5 || frame.length_int > 256) {
 8000912:	4b49      	ldr	r3, [pc, #292]	@ (8000a38 <process_frame+0x12c>)
 8000914:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000918:	2b04      	cmp	r3, #4
 800091a:	f240 8083 	bls.w	8000a24 <process_frame+0x118>
 800091e:	4b46      	ldr	r3, [pc, #280]	@ (8000a38 <process_frame+0x12c>)
 8000920:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000924:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8000928:	d87c      	bhi.n	8000a24 <process_frame+0x118>
		//err01();
		return;
	}

	uint8_t length = frame.length_int - frame.masked_counter; // dla odkodowanej ramki dlugosc musi byc pomniejszona o ilosc zamaskowanych znakow
 800092a:	4b43      	ldr	r3, [pc, #268]	@ (8000a38 <process_frame+0x12c>)
 800092c:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000930:	b2da      	uxtb	r2, r3
 8000932:	4b41      	ldr	r3, [pc, #260]	@ (8000a38 <process_frame+0x12c>)
 8000934:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 8000938:	b2db      	uxtb	r3, r3
 800093a:	1ad3      	subs	r3, r2, r3
 800093c:	75bb      	strb	r3, [r7, #22]

	if (strncmp((char *)frame.data, "READ", 4) == 0) {
 800093e:	2204      	movs	r2, #4
 8000940:	493e      	ldr	r1, [pc, #248]	@ (8000a3c <process_frame+0x130>)
 8000942:	483f      	ldr	r0, [pc, #252]	@ (8000a40 <process_frame+0x134>)
 8000944:	f004 f83a 	bl	80049bc <strncmp>
 8000948:	4603      	mov	r3, r0
 800094a:	2b00      	cmp	r3, #0
 800094c:	d120      	bne.n	8000990 <process_frame+0x84>
		if (length != 7) {
 800094e:	7dbb      	ldrb	r3, [r7, #22]
 8000950:	2b07      	cmp	r3, #7
 8000952:	d003      	beq.n	800095c <process_frame+0x50>
			USART_fsend("wrong parameter");
 8000954:	483b      	ldr	r0, [pc, #236]	@ (8000a44 <process_frame+0x138>)
 8000956:	f7ff fe1d 	bl	8000594 <USART_fsend>
			//err03();
			return;
 800095a:	e06a      	b.n	8000a32 <process_frame+0x126>
		}

		char parameter_str[4] = {frame.data[4], frame.data[5], frame.data[6]};
 800095c:	2300      	movs	r3, #0
 800095e:	603b      	str	r3, [r7, #0]
 8000960:	4b35      	ldr	r3, [pc, #212]	@ (8000a38 <process_frame+0x12c>)
 8000962:	7b9b      	ldrb	r3, [r3, #14]
 8000964:	703b      	strb	r3, [r7, #0]
 8000966:	4b34      	ldr	r3, [pc, #208]	@ (8000a38 <process_frame+0x12c>)
 8000968:	7bdb      	ldrb	r3, [r3, #15]
 800096a:	707b      	strb	r3, [r7, #1]
 800096c:	4b32      	ldr	r3, [pc, #200]	@ (8000a38 <process_frame+0x12c>)
 800096e:	7c1b      	ldrb	r3, [r3, #16]
 8000970:	70bb      	strb	r3, [r7, #2]
		uint16_t parameter = validate_and_atoi(parameter_str, 3);
 8000972:	463b      	mov	r3, r7
 8000974:	2103      	movs	r1, #3
 8000976:	4618      	mov	r0, r3
 8000978:	f7ff ff4c 	bl	8000814 <validate_and_atoi>
 800097c:	4603      	mov	r3, r0
 800097e:	80fb      	strh	r3, [r7, #6]

		if (parameter < 1 || parameter > 750) {
 8000980:	88fb      	ldrh	r3, [r7, #6]
 8000982:	2b00      	cmp	r3, #0
 8000984:	d050      	beq.n	8000a28 <process_frame+0x11c>
 8000986:	88fb      	ldrh	r3, [r7, #6]
 8000988:	f240 22ee 	movw	r2, #750	@ 0x2ee
 800098c:	4293      	cmp	r3, r2
 800098e:	e050      	b.n	8000a32 <process_frame+0x126>
//			USART_fsend("%d\n", parameter);
//			read(length);
//			return;
//		}
	}
	else if (strncmp((char *)frame.data, "COUNT_DATA", 10) == 0) {
 8000990:	220a      	movs	r2, #10
 8000992:	492d      	ldr	r1, [pc, #180]	@ (8000a48 <process_frame+0x13c>)
 8000994:	482a      	ldr	r0, [pc, #168]	@ (8000a40 <process_frame+0x134>)
 8000996:	f004 f811 	bl	80049bc <strncmp>
 800099a:	4603      	mov	r3, r0
 800099c:	2b00      	cmp	r3, #0
 800099e:	d102      	bne.n	80009a6 <process_frame+0x9a>
		if (length != 10) {
 80009a0:	7dbb      	ldrb	r3, [r7, #22]
 80009a2:	2b0a      	cmp	r3, #10
 80009a4:	e045      	b.n	8000a32 <process_frame+0x126>
//			count_data();
//			return;
//		}
	}

	else if (strncmp((char *)frame.data, "SET_INTERVAL", 12) == 0) {
 80009a6:	220c      	movs	r2, #12
 80009a8:	4928      	ldr	r1, [pc, #160]	@ (8000a4c <process_frame+0x140>)
 80009aa:	4825      	ldr	r0, [pc, #148]	@ (8000a40 <process_frame+0x134>)
 80009ac:	f004 f806 	bl	80049bc <strncmp>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d129      	bne.n	8000a0a <process_frame+0xfe>
		if (length < 17 || length > 22) {
 80009b6:	7dbb      	ldrb	r3, [r7, #22]
 80009b8:	2b10      	cmp	r3, #16
 80009ba:	d937      	bls.n	8000a2c <process_frame+0x120>
 80009bc:	7dbb      	ldrb	r3, [r7, #22]
 80009be:	2b16      	cmp	r3, #22
 80009c0:	d834      	bhi.n	8000a2c <process_frame+0x120>
			//err02();
			return;
		}

	    // Wskaźnik na część danych po "SET_INTERVAL "
	    char *numberStr = (char *)&frame.data[12];
 80009c2:	4b23      	ldr	r3, [pc, #140]	@ (8000a50 <process_frame+0x144>)
 80009c4:	613b      	str	r3, [r7, #16]
	    uint8_t numberLength = length - 12;
 80009c6:	7dbb      	ldrb	r3, [r7, #22]
 80009c8:	3b0c      	subs	r3, #12
 80009ca:	73fb      	strb	r3, [r7, #15]

	    // Walidacja - upewnij się, że wszystkie znaki są cyframi
	    for (uint8_t i = 0; i < numberLength; i++) {
 80009cc:	2300      	movs	r3, #0
 80009ce:	75fb      	strb	r3, [r7, #23]
 80009d0:	e00e      	b.n	80009f0 <process_frame+0xe4>
	        if (!isdigit((unsigned char)numberStr[i])) {
 80009d2:	7dfb      	ldrb	r3, [r7, #23]
 80009d4:	693a      	ldr	r2, [r7, #16]
 80009d6:	4413      	add	r3, r2
 80009d8:	781b      	ldrb	r3, [r3, #0]
 80009da:	3301      	adds	r3, #1
 80009dc:	4a1d      	ldr	r2, [pc, #116]	@ (8000a54 <process_frame+0x148>)
 80009de:	4413      	add	r3, r2
 80009e0:	781b      	ldrb	r3, [r3, #0]
 80009e2:	f003 0304 	and.w	r3, r3, #4
 80009e6:	2b00      	cmp	r3, #0
 80009e8:	d022      	beq.n	8000a30 <process_frame+0x124>
	    for (uint8_t i = 0; i < numberLength; i++) {
 80009ea:	7dfb      	ldrb	r3, [r7, #23]
 80009ec:	3301      	adds	r3, #1
 80009ee:	75fb      	strb	r3, [r7, #23]
 80009f0:	7dfa      	ldrb	r2, [r7, #23]
 80009f2:	7bfb      	ldrb	r3, [r7, #15]
 80009f4:	429a      	cmp	r2, r3
 80009f6:	d3ec      	bcc.n	80009d2 <process_frame+0xc6>
	            //err03();
	            return;
	        }
	    }

	    int interval = atoi(numberStr);
 80009f8:	6938      	ldr	r0, [r7, #16]
 80009fa:	f003 ff2f 	bl	800485c <atoi>
 80009fe:	60b8      	str	r0, [r7, #8]

	    if (interval < 2000 || interval > UINT32_MAX) {
//	    	err03();
//	    	return
	    }
	    set_interval(interval);
 8000a00:	68bb      	ldr	r3, [r7, #8]
 8000a02:	4618      	mov	r0, r3
 8000a04:	f7ff ff5e 	bl	80008c4 <set_interval>
	    return;
 8000a08:	e013      	b.n	8000a32 <process_frame+0x126>

	}

	else if (strncmp((char *)frame.data, "GET_INTERVAL", 12) == 0) {
 8000a0a:	220c      	movs	r2, #12
 8000a0c:	4912      	ldr	r1, [pc, #72]	@ (8000a58 <process_frame+0x14c>)
 8000a0e:	480c      	ldr	r0, [pc, #48]	@ (8000a40 <process_frame+0x134>)
 8000a10:	f003 ffd4 	bl	80049bc <strncmp>
 8000a14:	4603      	mov	r3, r0
 8000a16:	2b00      	cmp	r3, #0
 8000a18:	d10b      	bne.n	8000a32 <process_frame+0x126>
		if (frame.length_int != 12) {
 8000a1a:	4b07      	ldr	r3, [pc, #28]	@ (8000a38 <process_frame+0x12c>)
 8000a1c:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000a20:	2b0c      	cmp	r3, #12
 8000a22:	e006      	b.n	8000a32 <process_frame+0x126>
		return;
 8000a24:	bf00      	nop
 8000a26:	e004      	b.n	8000a32 <process_frame+0x126>
			return;
 8000a28:	bf00      	nop
 8000a2a:	e002      	b.n	8000a32 <process_frame+0x126>
			return;
 8000a2c:	bf00      	nop
 8000a2e:	e000      	b.n	8000a32 <process_frame+0x126>
	            return;
 8000a30:	bf00      	nop
//		else {
//			get_interval();
//			return
//		}
	}
}
 8000a32:	3718      	adds	r7, #24
 8000a34:	46bd      	mov	sp, r7
 8000a36:	bd80      	pop	{r7, pc}
 8000a38:	2000050c 	.word	0x2000050c
 8000a3c:	08005314 	.word	0x08005314
 8000a40:	20000516 	.word	0x20000516
 8000a44:	0800531c 	.word	0x0800531c
 8000a48:	0800532c 	.word	0x0800532c
 8000a4c:	08005338 	.word	0x08005338
 8000a50:	20000522 	.word	0x20000522
 8000a54:	08005392 	.word	0x08005392
 8000a58:	08005348 	.word	0x08005348

08000a5c <reset_frame>:

void reset_frame() {
 8000a5c:	b580      	push	{r7, lr}
 8000a5e:	af00      	add	r7, sp, #0
	memset(&frame, 0, sizeof(Frame));
 8000a60:	f44f 7290 	mov.w	r2, #288	@ 0x120
 8000a64:	2100      	movs	r1, #0
 8000a66:	4807      	ldr	r0, [pc, #28]	@ (8000a84 <reset_frame+0x28>)
 8000a68:	f003 ffa0 	bl	80049ac <memset>
	frame.state = IDLE;
 8000a6c:	4b05      	ldr	r3, [pc, #20]	@ (8000a84 <reset_frame+0x28>)
 8000a6e:	2200      	movs	r2, #0
 8000a70:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
	frame.crc_calculated = 0xFFFF;
 8000a74:	4b03      	ldr	r3, [pc, #12]	@ (8000a84 <reset_frame+0x28>)
 8000a76:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000a7a:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110
}
 8000a7e:	bf00      	nop
 8000a80:	bd80      	pop	{r7, pc}
 8000a82:	bf00      	nop
 8000a84:	2000050c 	.word	0x2000050c

08000a88 <get_frame>:

void get_frame(uint8_t ch) {
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b082      	sub	sp, #8
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	4603      	mov	r3, r0
 8000a90:	71fb      	strb	r3, [r7, #7]

	if (ch == FRAME_START) {
 8000a92:	79fb      	ldrb	r3, [r7, #7]
 8000a94:	2b3a      	cmp	r3, #58	@ 0x3a
 8000a96:	d106      	bne.n	8000aa6 <get_frame+0x1e>
		reset_frame();
 8000a98:	f7ff ffe0 	bl	8000a5c <reset_frame>
		frame.state = FIND_SENDER;
 8000a9c:	4baf      	ldr	r3, [pc, #700]	@ (8000d5c <get_frame+0x2d4>)
 8000a9e:	2201      	movs	r2, #1
 8000aa0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000aa4:	e220      	b.n	8000ee8 <get_frame+0x460>
	}
	if (ch == '\0') {
 8000aa6:	79fb      	ldrb	r3, [r7, #7]
 8000aa8:	2b00      	cmp	r3, #0
 8000aaa:	d104      	bne.n	8000ab6 <get_frame+0x2e>
		frame.state = IDLE;
 8000aac:	4bab      	ldr	r3, [pc, #684]	@ (8000d5c <get_frame+0x2d4>)
 8000aae:	2200      	movs	r2, #0
 8000ab0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000ab4:	e218      	b.n	8000ee8 <get_frame+0x460>
	}

	switch (frame.state) {
 8000ab6:	4ba9      	ldr	r3, [pc, #676]	@ (8000d5c <get_frame+0x2d4>)
 8000ab8:	f893 311e 	ldrb.w	r3, [r3, #286]	@ 0x11e
 8000abc:	2b07      	cmp	r3, #7
 8000abe:	f200 8213 	bhi.w	8000ee8 <get_frame+0x460>
 8000ac2:	a201      	add	r2, pc, #4	@ (adr r2, 8000ac8 <get_frame+0x40>)
 8000ac4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ac8:	08000ee9 	.word	0x08000ee9
 8000acc:	08000ae9 	.word	0x08000ae9
 8000ad0:	08000b6f 	.word	0x08000b6f
 8000ad4:	08000bf7 	.word	0x08000bf7
 8000ad8:	08000c75 	.word	0x08000c75
 8000adc:	08000e4b 	.word	0x08000e4b
 8000ae0:	08000ec9 	.word	0x08000ec9
 8000ae4:	08000d39 	.word	0x08000d39
	case IDLE: {
		return;
	}

	case FIND_SENDER: {
		if (ch >= 'A' && ch <= 'Z') {
 8000ae8:	79fb      	ldrb	r3, [r7, #7]
 8000aea:	2b40      	cmp	r3, #64	@ 0x40
 8000aec:	d93a      	bls.n	8000b64 <get_frame+0xdc>
 8000aee:	79fb      	ldrb	r3, [r7, #7]
 8000af0:	2b5a      	cmp	r3, #90	@ 0x5a
 8000af2:	d837      	bhi.n	8000b64 <get_frame+0xdc>
			frame.sender[frame.sender_id] = ch;
 8000af4:	4b99      	ldr	r3, [pc, #612]	@ (8000d5c <get_frame+0x2d4>)
 8000af6:	f893 3112 	ldrb.w	r3, [r3, #274]	@ 0x112
 8000afa:	4619      	mov	r1, r3
 8000afc:	4a97      	ldr	r2, [pc, #604]	@ (8000d5c <get_frame+0x2d4>)
 8000afe:	79fb      	ldrb	r3, [r7, #7]
 8000b00:	5453      	strb	r3, [r2, r1]
			frame.crc_calculated = calculate_crc_byte(frame.crc_calculated, ch);
 8000b02:	4b96      	ldr	r3, [pc, #600]	@ (8000d5c <get_frame+0x2d4>)
 8000b04:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000b08:	79fa      	ldrb	r2, [r7, #7]
 8000b0a:	4611      	mov	r1, r2
 8000b0c:	4618      	mov	r0, r3
 8000b0e:	f7ff fd11 	bl	8000534 <calculate_crc_byte>
 8000b12:	4603      	mov	r3, r0
 8000b14:	461a      	mov	r2, r3
 8000b16:	4b91      	ldr	r3, [pc, #580]	@ (8000d5c <get_frame+0x2d4>)
 8000b18:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110
			if (frame.sender_id == 1) {
 8000b1c:	4b8f      	ldr	r3, [pc, #572]	@ (8000d5c <get_frame+0x2d4>)
 8000b1e:	f893 3112 	ldrb.w	r3, [r3, #274]	@ 0x112
 8000b22:	2b01      	cmp	r3, #1
 8000b24:	d114      	bne.n	8000b50 <get_frame+0xc8>
				frame.sender[2] = '\0';
 8000b26:	4b8d      	ldr	r3, [pc, #564]	@ (8000d5c <get_frame+0x2d4>)
 8000b28:	2200      	movs	r2, #0
 8000b2a:	709a      	strb	r2, [r3, #2]
				if (strncmp((char *)frame.sender, SENDER, 2) == 0){
 8000b2c:	2202      	movs	r2, #2
 8000b2e:	498c      	ldr	r1, [pc, #560]	@ (8000d60 <get_frame+0x2d8>)
 8000b30:	488a      	ldr	r0, [pc, #552]	@ (8000d5c <get_frame+0x2d4>)
 8000b32:	f003 ff43 	bl	80049bc <strncmp>
 8000b36:	4603      	mov	r3, r0
 8000b38:	2b00      	cmp	r3, #0
 8000b3a:	d104      	bne.n	8000b46 <get_frame+0xbe>
					//USART_fsend("sender ok");
					frame.state = FIND_RECEIVER;
 8000b3c:	4b87      	ldr	r3, [pc, #540]	@ (8000d5c <get_frame+0x2d4>)
 8000b3e:	2202      	movs	r2, #2
 8000b40:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000b44:	e1d0      	b.n	8000ee8 <get_frame+0x460>
				}
				else {
					frame.state = IDLE;
 8000b46:	4b85      	ldr	r3, [pc, #532]	@ (8000d5c <get_frame+0x2d4>)
 8000b48:	2200      	movs	r2, #0
 8000b4a:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000b4e:	e1cb      	b.n	8000ee8 <get_frame+0x460>
				}
			}
			else frame.sender_id++;
 8000b50:	4b82      	ldr	r3, [pc, #520]	@ (8000d5c <get_frame+0x2d4>)
 8000b52:	f893 3112 	ldrb.w	r3, [r3, #274]	@ 0x112
 8000b56:	3301      	adds	r3, #1
 8000b58:	b2da      	uxtb	r2, r3
 8000b5a:	4b80      	ldr	r3, [pc, #512]	@ (8000d5c <get_frame+0x2d4>)
 8000b5c:	f883 2112 	strb.w	r2, [r3, #274]	@ 0x112
			if (frame.sender_id == 1) {
 8000b60:	bf00      	nop
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = IDLE;
		return;
 8000b62:	e1c1      	b.n	8000ee8 <get_frame+0x460>
		else frame.state = IDLE;
 8000b64:	4b7d      	ldr	r3, [pc, #500]	@ (8000d5c <get_frame+0x2d4>)
 8000b66:	2200      	movs	r2, #0
 8000b68:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000b6c:	e1bc      	b.n	8000ee8 <get_frame+0x460>
	}

	case FIND_RECEIVER: {
		if (ch >= 'A' && ch <= 'Z') {
 8000b6e:	79fb      	ldrb	r3, [r7, #7]
 8000b70:	2b40      	cmp	r3, #64	@ 0x40
 8000b72:	d93b      	bls.n	8000bec <get_frame+0x164>
 8000b74:	79fb      	ldrb	r3, [r7, #7]
 8000b76:	2b5a      	cmp	r3, #90	@ 0x5a
 8000b78:	d838      	bhi.n	8000bec <get_frame+0x164>
			frame.receiver[frame.receiver_id] = ch;
 8000b7a:	4b78      	ldr	r3, [pc, #480]	@ (8000d5c <get_frame+0x2d4>)
 8000b7c:	f893 3113 	ldrb.w	r3, [r3, #275]	@ 0x113
 8000b80:	461a      	mov	r2, r3
 8000b82:	4b76      	ldr	r3, [pc, #472]	@ (8000d5c <get_frame+0x2d4>)
 8000b84:	4413      	add	r3, r2
 8000b86:	79fa      	ldrb	r2, [r7, #7]
 8000b88:	70da      	strb	r2, [r3, #3]
			frame.crc_calculated = calculate_crc_byte(frame.crc_calculated, ch);
 8000b8a:	4b74      	ldr	r3, [pc, #464]	@ (8000d5c <get_frame+0x2d4>)
 8000b8c:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000b90:	79fa      	ldrb	r2, [r7, #7]
 8000b92:	4611      	mov	r1, r2
 8000b94:	4618      	mov	r0, r3
 8000b96:	f7ff fccd 	bl	8000534 <calculate_crc_byte>
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	461a      	mov	r2, r3
 8000b9e:	4b6f      	ldr	r3, [pc, #444]	@ (8000d5c <get_frame+0x2d4>)
 8000ba0:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110
			if (frame.receiver_id == 1) {
 8000ba4:	4b6d      	ldr	r3, [pc, #436]	@ (8000d5c <get_frame+0x2d4>)
 8000ba6:	f893 3113 	ldrb.w	r3, [r3, #275]	@ 0x113
 8000baa:	2b01      	cmp	r3, #1
 8000bac:	d114      	bne.n	8000bd8 <get_frame+0x150>
				frame.receiver[2] = '\0';
 8000bae:	4b6b      	ldr	r3, [pc, #428]	@ (8000d5c <get_frame+0x2d4>)
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	715a      	strb	r2, [r3, #5]
				if (strncmp((char *)frame.receiver, RECEIVER, 2) == 0) {
 8000bb4:	2202      	movs	r2, #2
 8000bb6:	496b      	ldr	r1, [pc, #428]	@ (8000d64 <get_frame+0x2dc>)
 8000bb8:	486b      	ldr	r0, [pc, #428]	@ (8000d68 <get_frame+0x2e0>)
 8000bba:	f003 feff 	bl	80049bc <strncmp>
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	2b00      	cmp	r3, #0
 8000bc2:	d104      	bne.n	8000bce <get_frame+0x146>
					//USART_fsend("receiver ok");
					frame.state = FIND_LENGTH;
 8000bc4:	4b65      	ldr	r3, [pc, #404]	@ (8000d5c <get_frame+0x2d4>)
 8000bc6:	2203      	movs	r2, #3
 8000bc8:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000bcc:	e18c      	b.n	8000ee8 <get_frame+0x460>
				}
				else {
					frame.state = IDLE;
 8000bce:	4b63      	ldr	r3, [pc, #396]	@ (8000d5c <get_frame+0x2d4>)
 8000bd0:	2200      	movs	r2, #0
 8000bd2:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000bd6:	e187      	b.n	8000ee8 <get_frame+0x460>
				}
			}
			else frame.receiver_id++;
 8000bd8:	4b60      	ldr	r3, [pc, #384]	@ (8000d5c <get_frame+0x2d4>)
 8000bda:	f893 3113 	ldrb.w	r3, [r3, #275]	@ 0x113
 8000bde:	3301      	adds	r3, #1
 8000be0:	b2da      	uxtb	r2, r3
 8000be2:	4b5e      	ldr	r3, [pc, #376]	@ (8000d5c <get_frame+0x2d4>)
 8000be4:	f883 2113 	strb.w	r2, [r3, #275]	@ 0x113
			if (frame.receiver_id == 1) {
 8000be8:	bf00      	nop
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = IDLE;
		return;
 8000bea:	e17d      	b.n	8000ee8 <get_frame+0x460>
		else frame.state = IDLE;
 8000bec:	4b5b      	ldr	r3, [pc, #364]	@ (8000d5c <get_frame+0x2d4>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000bf4:	e178      	b.n	8000ee8 <get_frame+0x460>
	}

	case FIND_LENGTH: {
		if (ch >= '0' && ch <= '9') {
 8000bf6:	79fb      	ldrb	r3, [r7, #7]
 8000bf8:	2b2f      	cmp	r3, #47	@ 0x2f
 8000bfa:	d936      	bls.n	8000c6a <get_frame+0x1e2>
 8000bfc:	79fb      	ldrb	r3, [r7, #7]
 8000bfe:	2b39      	cmp	r3, #57	@ 0x39
 8000c00:	d833      	bhi.n	8000c6a <get_frame+0x1e2>
			frame.length[frame.length_id] = ch;
 8000c02:	4b56      	ldr	r3, [pc, #344]	@ (8000d5c <get_frame+0x2d4>)
 8000c04:	f893 3114 	ldrb.w	r3, [r3, #276]	@ 0x114
 8000c08:	461a      	mov	r2, r3
 8000c0a:	4b54      	ldr	r3, [pc, #336]	@ (8000d5c <get_frame+0x2d4>)
 8000c0c:	4413      	add	r3, r2
 8000c0e:	79fa      	ldrb	r2, [r7, #7]
 8000c10:	719a      	strb	r2, [r3, #6]
			frame.crc_calculated = calculate_crc_byte(frame.crc_calculated, ch);
 8000c12:	4b52      	ldr	r3, [pc, #328]	@ (8000d5c <get_frame+0x2d4>)
 8000c14:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000c18:	79fa      	ldrb	r2, [r7, #7]
 8000c1a:	4611      	mov	r1, r2
 8000c1c:	4618      	mov	r0, r3
 8000c1e:	f7ff fc89 	bl	8000534 <calculate_crc_byte>
 8000c22:	4603      	mov	r3, r0
 8000c24:	461a      	mov	r2, r3
 8000c26:	4b4d      	ldr	r3, [pc, #308]	@ (8000d5c <get_frame+0x2d4>)
 8000c28:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110
			if (frame.length_id == 2) {
 8000c2c:	4b4b      	ldr	r3, [pc, #300]	@ (8000d5c <get_frame+0x2d4>)
 8000c2e:	f893 3114 	ldrb.w	r3, [r3, #276]	@ 0x114
 8000c32:	2b02      	cmp	r3, #2
 8000c34:	d10f      	bne.n	8000c56 <get_frame+0x1ce>
				frame.length[3] = '\0';
 8000c36:	4b49      	ldr	r3, [pc, #292]	@ (8000d5c <get_frame+0x2d4>)
 8000c38:	2200      	movs	r2, #0
 8000c3a:	725a      	strb	r2, [r3, #9]
				frame.length_int = atoi((char *)frame.length);
 8000c3c:	484b      	ldr	r0, [pc, #300]	@ (8000d6c <get_frame+0x2e4>)
 8000c3e:	f003 fe0d 	bl	800485c <atoi>
 8000c42:	4603      	mov	r3, r0
 8000c44:	b29a      	uxth	r2, r3
 8000c46:	4b45      	ldr	r3, [pc, #276]	@ (8000d5c <get_frame+0x2d4>)
 8000c48:	f8a3 211a 	strh.w	r2, [r3, #282]	@ 0x11a
				//USART_fsend("length ok");
				frame.state = FIND_DATA;
 8000c4c:	4b43      	ldr	r3, [pc, #268]	@ (8000d5c <get_frame+0x2d4>)
 8000c4e:	2204      	movs	r2, #4
 8000c50:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
				return;
 8000c54:	e148      	b.n	8000ee8 <get_frame+0x460>
			}
			else frame.length_id++;
 8000c56:	4b41      	ldr	r3, [pc, #260]	@ (8000d5c <get_frame+0x2d4>)
 8000c58:	f893 3114 	ldrb.w	r3, [r3, #276]	@ 0x114
 8000c5c:	3301      	adds	r3, #1
 8000c5e:	b2da      	uxtb	r2, r3
 8000c60:	4b3e      	ldr	r3, [pc, #248]	@ (8000d5c <get_frame+0x2d4>)
 8000c62:	f883 2114 	strb.w	r2, [r3, #276]	@ 0x114
			if (frame.length_id == 2) {
 8000c66:	bf00      	nop
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = IDLE;
		return;
 8000c68:	e13e      	b.n	8000ee8 <get_frame+0x460>
		else frame.state = IDLE;
 8000c6a:	4b3c      	ldr	r3, [pc, #240]	@ (8000d5c <get_frame+0x2d4>)
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000c72:	e139      	b.n	8000ee8 <get_frame+0x460>
	}

	case FIND_DATA: {

		if (frame.data_id + frame.masked_counter < frame.length_int) {
 8000c74:	4b39      	ldr	r3, [pc, #228]	@ (8000d5c <get_frame+0x2d4>)
 8000c76:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000c7a:	461a      	mov	r2, r3
 8000c7c:	4b37      	ldr	r3, [pc, #220]	@ (8000d5c <get_frame+0x2d4>)
 8000c7e:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 8000c82:	4413      	add	r3, r2
 8000c84:	4a35      	ldr	r2, [pc, #212]	@ (8000d5c <get_frame+0x2d4>)
 8000c86:	f8b2 211a 	ldrh.w	r2, [r2, #282]	@ 0x11a
 8000c8a:	4293      	cmp	r3, r2
 8000c8c:	da4f      	bge.n	8000d2e <get_frame+0x2a6>

			if (ch == FRAME_START || ch == FRAME_END) {
 8000c8e:	79fb      	ldrb	r3, [r7, #7]
 8000c90:	2b3a      	cmp	r3, #58	@ 0x3a
 8000c92:	d002      	beq.n	8000c9a <get_frame+0x212>
 8000c94:	79fb      	ldrb	r3, [r7, #7]
 8000c96:	2b3b      	cmp	r3, #59	@ 0x3b
 8000c98:	d104      	bne.n	8000ca4 <get_frame+0x21c>
				frame.state = IDLE;
 8000c9a:	4b30      	ldr	r3, [pc, #192]	@ (8000d5c <get_frame+0x2d4>)
 8000c9c:	2200      	movs	r2, #0
 8000c9e:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
				return;
 8000ca2:	e121      	b.n	8000ee8 <get_frame+0x460>
			}

			frame.crc_calculated = calculate_crc_byte(frame.crc_calculated, ch);
 8000ca4:	4b2d      	ldr	r3, [pc, #180]	@ (8000d5c <get_frame+0x2d4>)
 8000ca6:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000caa:	79fa      	ldrb	r2, [r7, #7]
 8000cac:	4611      	mov	r1, r2
 8000cae:	4618      	mov	r0, r3
 8000cb0:	f7ff fc40 	bl	8000534 <calculate_crc_byte>
 8000cb4:	4603      	mov	r3, r0
 8000cb6:	461a      	mov	r2, r3
 8000cb8:	4b28      	ldr	r3, [pc, #160]	@ (8000d5c <get_frame+0x2d4>)
 8000cba:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110

			if (ch == MASK) {
 8000cbe:	79fb      	ldrb	r3, [r7, #7]
 8000cc0:	2b2f      	cmp	r3, #47	@ 0x2f
 8000cc2:	d10c      	bne.n	8000cde <get_frame+0x256>
				frame.masked_counter++;
 8000cc4:	4b25      	ldr	r3, [pc, #148]	@ (8000d5c <get_frame+0x2d4>)
 8000cc6:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 8000cca:	3301      	adds	r3, #1
 8000ccc:	b29a      	uxth	r2, r3
 8000cce:	4b23      	ldr	r3, [pc, #140]	@ (8000d5c <get_frame+0x2d4>)
 8000cd0:	f8a3 211c 	strh.w	r2, [r3, #284]	@ 0x11c
				frame.state = FIND_MASKED;
 8000cd4:	4b21      	ldr	r3, [pc, #132]	@ (8000d5c <get_frame+0x2d4>)
 8000cd6:	2207      	movs	r2, #7
 8000cd8:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
				return;
 8000cdc:	e104      	b.n	8000ee8 <get_frame+0x460>
			}

			frame.data[frame.data_id++] = ch;
 8000cde:	4b1f      	ldr	r3, [pc, #124]	@ (8000d5c <get_frame+0x2d4>)
 8000ce0:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000ce4:	1c5a      	adds	r2, r3, #1
 8000ce6:	b291      	uxth	r1, r2
 8000ce8:	4a1c      	ldr	r2, [pc, #112]	@ (8000d5c <get_frame+0x2d4>)
 8000cea:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 8000cee:	461a      	mov	r2, r3
 8000cf0:	4b1a      	ldr	r3, [pc, #104]	@ (8000d5c <get_frame+0x2d4>)
 8000cf2:	4413      	add	r3, r2
 8000cf4:	79fa      	ldrb	r2, [r7, #7]
 8000cf6:	729a      	strb	r2, [r3, #10]

			if (frame.data_id + frame.masked_counter == frame.length_int) {
 8000cf8:	4b18      	ldr	r3, [pc, #96]	@ (8000d5c <get_frame+0x2d4>)
 8000cfa:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000cfe:	461a      	mov	r2, r3
 8000d00:	4b16      	ldr	r3, [pc, #88]	@ (8000d5c <get_frame+0x2d4>)
 8000d02:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 8000d06:	4413      	add	r3, r2
 8000d08:	4a14      	ldr	r2, [pc, #80]	@ (8000d5c <get_frame+0x2d4>)
 8000d0a:	f8b2 211a 	ldrh.w	r2, [r2, #282]	@ 0x11a
 8000d0e:	4293      	cmp	r3, r2
 8000d10:	f040 80e9 	bne.w	8000ee6 <get_frame+0x45e>
				frame.data[frame.data_id] = '\0';
 8000d14:	4b11      	ldr	r3, [pc, #68]	@ (8000d5c <get_frame+0x2d4>)
 8000d16:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000d1a:	461a      	mov	r2, r3
 8000d1c:	4b0f      	ldr	r3, [pc, #60]	@ (8000d5c <get_frame+0x2d4>)
 8000d1e:	4413      	add	r3, r2
 8000d20:	2200      	movs	r2, #0
 8000d22:	729a      	strb	r2, [r3, #10]
				//USART_fsend("data ok");
				frame.state = FIND_CRC;
 8000d24:	4b0d      	ldr	r3, [pc, #52]	@ (8000d5c <get_frame+0x2d4>)
 8000d26:	2205      	movs	r2, #5
 8000d28:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			}

			return;
 8000d2c:	e0db      	b.n	8000ee6 <get_frame+0x45e>
		}


		else {
			frame.state = IDLE;
 8000d2e:	4b0b      	ldr	r3, [pc, #44]	@ (8000d5c <get_frame+0x2d4>)
 8000d30:	2200      	movs	r2, #0
 8000d32:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			return;
 8000d36:	e0d7      	b.n	8000ee8 <get_frame+0x460>
		}
	}

	case FIND_MASKED: {

		if (frame.data_id + frame.masked_counter >= frame.length_int) {
 8000d38:	4b08      	ldr	r3, [pc, #32]	@ (8000d5c <get_frame+0x2d4>)
 8000d3a:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000d3e:	461a      	mov	r2, r3
 8000d40:	4b06      	ldr	r3, [pc, #24]	@ (8000d5c <get_frame+0x2d4>)
 8000d42:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 8000d46:	4413      	add	r3, r2
 8000d48:	4a04      	ldr	r2, [pc, #16]	@ (8000d5c <get_frame+0x2d4>)
 8000d4a:	f8b2 211a 	ldrh.w	r2, [r2, #282]	@ 0x11a
 8000d4e:	4293      	cmp	r3, r2
 8000d50:	db0e      	blt.n	8000d70 <get_frame+0x2e8>
			frame.state = IDLE;
 8000d52:	4b02      	ldr	r3, [pc, #8]	@ (8000d5c <get_frame+0x2d4>)
 8000d54:	2200      	movs	r2, #0
 8000d56:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			return;
 8000d5a:	e0c5      	b.n	8000ee8 <get_frame+0x460>
 8000d5c:	2000050c 	.word	0x2000050c
 8000d60:	08005358 	.word	0x08005358
 8000d64:	0800535c 	.word	0x0800535c
 8000d68:	2000050f 	.word	0x2000050f
 8000d6c:	20000512 	.word	0x20000512
		}

		switch(ch) {
 8000d70:	79fb      	ldrb	r3, [r7, #7]
 8000d72:	2b2f      	cmp	r3, #47	@ 0x2f
 8000d74:	d029      	beq.n	8000dca <get_frame+0x342>
 8000d76:	2b2f      	cmp	r3, #47	@ 0x2f
 8000d78:	dc39      	bgt.n	8000dee <get_frame+0x366>
 8000d7a:	2b2c      	cmp	r3, #44	@ 0x2c
 8000d7c:	d013      	beq.n	8000da6 <get_frame+0x31e>
 8000d7e:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d80:	d135      	bne.n	8000dee <get_frame+0x366>
		case MASKED_START: {
			frame.data[frame.data_id++] = FRAME_START;
 8000d82:	4b5b      	ldr	r3, [pc, #364]	@ (8000ef0 <get_frame+0x468>)
 8000d84:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000d88:	1c5a      	adds	r2, r3, #1
 8000d8a:	b291      	uxth	r1, r2
 8000d8c:	4a58      	ldr	r2, [pc, #352]	@ (8000ef0 <get_frame+0x468>)
 8000d8e:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 8000d92:	461a      	mov	r2, r3
 8000d94:	4b56      	ldr	r3, [pc, #344]	@ (8000ef0 <get_frame+0x468>)
 8000d96:	4413      	add	r3, r2
 8000d98:	223a      	movs	r2, #58	@ 0x3a
 8000d9a:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_DATA;
 8000d9c:	4b54      	ldr	r3, [pc, #336]	@ (8000ef0 <get_frame+0x468>)
 8000d9e:	2204      	movs	r2, #4
 8000da0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			break;
 8000da4:	e028      	b.n	8000df8 <get_frame+0x370>
		}
		case MASKED_END: {
			frame.data[frame.data_id++] = FRAME_END;
 8000da6:	4b52      	ldr	r3, [pc, #328]	@ (8000ef0 <get_frame+0x468>)
 8000da8:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000dac:	1c5a      	adds	r2, r3, #1
 8000dae:	b291      	uxth	r1, r2
 8000db0:	4a4f      	ldr	r2, [pc, #316]	@ (8000ef0 <get_frame+0x468>)
 8000db2:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 8000db6:	461a      	mov	r2, r3
 8000db8:	4b4d      	ldr	r3, [pc, #308]	@ (8000ef0 <get_frame+0x468>)
 8000dba:	4413      	add	r3, r2
 8000dbc:	223b      	movs	r2, #59	@ 0x3b
 8000dbe:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_DATA;
 8000dc0:	4b4b      	ldr	r3, [pc, #300]	@ (8000ef0 <get_frame+0x468>)
 8000dc2:	2204      	movs	r2, #4
 8000dc4:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			break;
 8000dc8:	e016      	b.n	8000df8 <get_frame+0x370>
		}
		case MASK: {
			frame.data[frame.data_id++] = MASK;
 8000dca:	4b49      	ldr	r3, [pc, #292]	@ (8000ef0 <get_frame+0x468>)
 8000dcc:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000dd0:	1c5a      	adds	r2, r3, #1
 8000dd2:	b291      	uxth	r1, r2
 8000dd4:	4a46      	ldr	r2, [pc, #280]	@ (8000ef0 <get_frame+0x468>)
 8000dd6:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 8000dda:	461a      	mov	r2, r3
 8000ddc:	4b44      	ldr	r3, [pc, #272]	@ (8000ef0 <get_frame+0x468>)
 8000dde:	4413      	add	r3, r2
 8000de0:	222f      	movs	r2, #47	@ 0x2f
 8000de2:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_DATA;
 8000de4:	4b42      	ldr	r3, [pc, #264]	@ (8000ef0 <get_frame+0x468>)
 8000de6:	2204      	movs	r2, #4
 8000de8:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			break;
 8000dec:	e004      	b.n	8000df8 <get_frame+0x370>
		}
		default: { // błąd, powrót do początku
			frame.state = IDLE;
 8000dee:	4b40      	ldr	r3, [pc, #256]	@ (8000ef0 <get_frame+0x468>)
 8000df0:	2200      	movs	r2, #0
 8000df2:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			return;
 8000df6:	e077      	b.n	8000ee8 <get_frame+0x460>
		}
		}

		frame.crc_calculated = calculate_crc_byte(frame.crc_calculated, ch);
 8000df8:	4b3d      	ldr	r3, [pc, #244]	@ (8000ef0 <get_frame+0x468>)
 8000dfa:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000dfe:	79fa      	ldrb	r2, [r7, #7]
 8000e00:	4611      	mov	r1, r2
 8000e02:	4618      	mov	r0, r3
 8000e04:	f7ff fb96 	bl	8000534 <calculate_crc_byte>
 8000e08:	4603      	mov	r3, r0
 8000e0a:	461a      	mov	r2, r3
 8000e0c:	4b38      	ldr	r3, [pc, #224]	@ (8000ef0 <get_frame+0x468>)
 8000e0e:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110

		if (frame.data_id < frame.length_int - 1) {
 8000e12:	4b37      	ldr	r3, [pc, #220]	@ (8000ef0 <get_frame+0x468>)
 8000e14:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000e18:	461a      	mov	r2, r3
 8000e1a:	4b35      	ldr	r3, [pc, #212]	@ (8000ef0 <get_frame+0x468>)
 8000e1c:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000e20:	3b01      	subs	r3, #1
 8000e22:	429a      	cmp	r2, r3
 8000e24:	da04      	bge.n	8000e30 <get_frame+0x3a8>
			frame.state = FIND_DATA;
 8000e26:	4b32      	ldr	r3, [pc, #200]	@ (8000ef0 <get_frame+0x468>)
 8000e28:	2204      	movs	r2, #4
 8000e2a:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		} else {
			frame.data[frame.data_id] = '\0';
			frame.state = FIND_CRC;
		}

		return;
 8000e2e:	e05b      	b.n	8000ee8 <get_frame+0x460>
			frame.data[frame.data_id] = '\0';
 8000e30:	4b2f      	ldr	r3, [pc, #188]	@ (8000ef0 <get_frame+0x468>)
 8000e32:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000e36:	461a      	mov	r2, r3
 8000e38:	4b2d      	ldr	r3, [pc, #180]	@ (8000ef0 <get_frame+0x468>)
 8000e3a:	4413      	add	r3, r2
 8000e3c:	2200      	movs	r2, #0
 8000e3e:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_CRC;
 8000e40:	4b2b      	ldr	r3, [pc, #172]	@ (8000ef0 <get_frame+0x468>)
 8000e42:	2205      	movs	r2, #5
 8000e44:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000e48:	e04e      	b.n	8000ee8 <get_frame+0x460>
	}

	case FIND_CRC: {
		if ((ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'F')) {
 8000e4a:	79fb      	ldrb	r3, [r7, #7]
 8000e4c:	2b2f      	cmp	r3, #47	@ 0x2f
 8000e4e:	d902      	bls.n	8000e56 <get_frame+0x3ce>
 8000e50:	79fb      	ldrb	r3, [r7, #7]
 8000e52:	2b39      	cmp	r3, #57	@ 0x39
 8000e54:	d905      	bls.n	8000e62 <get_frame+0x3da>
 8000e56:	79fb      	ldrb	r3, [r7, #7]
 8000e58:	2b40      	cmp	r3, #64	@ 0x40
 8000e5a:	d92f      	bls.n	8000ebc <get_frame+0x434>
 8000e5c:	79fb      	ldrb	r3, [r7, #7]
 8000e5e:	2b46      	cmp	r3, #70	@ 0x46
 8000e60:	d82c      	bhi.n	8000ebc <get_frame+0x434>
			frame.crc_frame[frame.crc_id++] = ch;
 8000e62:	4b23      	ldr	r3, [pc, #140]	@ (8000ef0 <get_frame+0x468>)
 8000e64:	f893 3118 	ldrb.w	r3, [r3, #280]	@ 0x118
 8000e68:	1c5a      	adds	r2, r3, #1
 8000e6a:	b2d1      	uxtb	r1, r2
 8000e6c:	4a20      	ldr	r2, [pc, #128]	@ (8000ef0 <get_frame+0x468>)
 8000e6e:	f882 1118 	strb.w	r1, [r2, #280]	@ 0x118
 8000e72:	461a      	mov	r2, r3
 8000e74:	4b1e      	ldr	r3, [pc, #120]	@ (8000ef0 <get_frame+0x468>)
 8000e76:	4413      	add	r3, r2
 8000e78:	79fa      	ldrb	r2, [r7, #7]
 8000e7a:	f883 210b 	strb.w	r2, [r3, #267]	@ 0x10b
			if (frame.crc_id == 4) {
 8000e7e:	4b1c      	ldr	r3, [pc, #112]	@ (8000ef0 <get_frame+0x468>)
 8000e80:	f893 3118 	ldrb.w	r3, [r3, #280]	@ 0x118
 8000e84:	2b04      	cmp	r3, #4
 8000e86:	d11e      	bne.n	8000ec6 <get_frame+0x43e>
				frame.crc_frame[4] = '\0';
 8000e88:	4b19      	ldr	r3, [pc, #100]	@ (8000ef0 <get_frame+0x468>)
 8000e8a:	2200      	movs	r2, #0
 8000e8c:	f883 210f 	strb.w	r2, [r3, #271]	@ 0x10f
				if ((uint16_t)strtol((char *)frame.crc_frame, NULL, 16) == frame.crc_calculated) {
 8000e90:	2210      	movs	r2, #16
 8000e92:	2100      	movs	r1, #0
 8000e94:	4817      	ldr	r0, [pc, #92]	@ (8000ef4 <get_frame+0x46c>)
 8000e96:	f003 fd5f 	bl	8004958 <strtol>
 8000e9a:	4603      	mov	r3, r0
 8000e9c:	b29a      	uxth	r2, r3
 8000e9e:	4b14      	ldr	r3, [pc, #80]	@ (8000ef0 <get_frame+0x468>)
 8000ea0:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000ea4:	429a      	cmp	r2, r3
 8000ea6:	d104      	bne.n	8000eb2 <get_frame+0x42a>
					//USART_fsend("crc ok");
					frame.state = FIND_END;
 8000ea8:	4b11      	ldr	r3, [pc, #68]	@ (8000ef0 <get_frame+0x468>)
 8000eaa:	2206      	movs	r2, #6
 8000eac:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000eb0:	e01a      	b.n	8000ee8 <get_frame+0x460>
				}
				else {
					//USART_fsend("crc blad");
					frame.state = IDLE;
 8000eb2:	4b0f      	ldr	r3, [pc, #60]	@ (8000ef0 <get_frame+0x468>)
 8000eb4:	2200      	movs	r2, #0
 8000eb6:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000eba:	e015      	b.n	8000ee8 <get_frame+0x460>
				}
			}
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = IDLE;
 8000ebc:	4b0c      	ldr	r3, [pc, #48]	@ (8000ef0 <get_frame+0x468>)
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000ec4:	e010      	b.n	8000ee8 <get_frame+0x460>
 8000ec6:	e00f      	b.n	8000ee8 <get_frame+0x460>
	}

	case FIND_END: {
		if (ch == FRAME_END) {
 8000ec8:	79fb      	ldrb	r3, [r7, #7]
 8000eca:	2b3b      	cmp	r3, #59	@ 0x3b
 8000ecc:	d106      	bne.n	8000edc <get_frame+0x454>
			frame.complete = true;
 8000ece:	4b08      	ldr	r3, [pc, #32]	@ (8000ef0 <get_frame+0x468>)
 8000ed0:	2201      	movs	r2, #1
 8000ed2:	f883 211f 	strb.w	r2, [r3, #287]	@ 0x11f
			//USART_fsend("ramka ok");
			process_frame();
 8000ed6:	f7ff fd19 	bl	800090c <process_frame>
			return;
 8000eda:	e005      	b.n	8000ee8 <get_frame+0x460>
		}
		//else if (ch == FRAME_START) frame.state = FIND_START;
		else frame.state = IDLE;
 8000edc:	4b04      	ldr	r3, [pc, #16]	@ (8000ef0 <get_frame+0x468>)
 8000ede:	2200      	movs	r2, #0
 8000ee0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000ee4:	e000      	b.n	8000ee8 <get_frame+0x460>
			return;
 8000ee6:	bf00      	nop
	}
	}
}
 8000ee8:	3708      	adds	r7, #8
 8000eea:	46bd      	mov	sp, r7
 8000eec:	bd80      	pop	{r7, pc}
 8000eee:	bf00      	nop
 8000ef0:	2000050c 	.word	0x2000050c
 8000ef4:	20000617 	.word	0x20000617

08000ef8 <handle_char>:

void handle_char() {
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b082      	sub	sp, #8
 8000efc:	af00      	add	r7, sp, #0

//	is_handling = 1;

	int16_t ch;
	if ((ch = USART_getchar()) >= 0) {
 8000efe:	f7ff fc57 	bl	80007b0 <USART_getchar>
 8000f02:	4603      	mov	r3, r0
 8000f04:	80fb      	strh	r3, [r7, #6]
 8000f06:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	db04      	blt.n	8000f18 <handle_char+0x20>
		//USART_fsend("  |%c|  ", ch);
		get_frame((uint8_t)ch);
 8000f0e:	88fb      	ldrh	r3, [r7, #6]
 8000f10:	b2db      	uxtb	r3, r3
 8000f12:	4618      	mov	r0, r3
 8000f14:	f7ff fdb8 	bl	8000a88 <get_frame>
	}

//	is_handling = 0;
}
 8000f18:	bf00      	nop
 8000f1a:	3708      	adds	r7, #8
 8000f1c:	46bd      	mov	sp, r7
 8000f1e:	bd80      	pop	{r7, pc}

08000f20 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000f24:	f000 fb3e 	bl	80015a4 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f28:	f000 f848 	bl	8000fbc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000f2c:	f7ff fa94 	bl	8000458 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000f30:	f000 faa2 	bl	8001478 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 8000f34:	f000 f946 	bl	80011c4 <MX_TIM2_Init>
  MX_TIM4_Init();
 8000f38:	f000 f9e4 	bl	8001304 <MX_TIM4_Init>
  /* USER CODE BEGIN 2 */
  init_dht11(pDHT, GPIOA, GPIO_PIN_0, &htim2);
 8000f3c:	4b17      	ldr	r3, [pc, #92]	@ (8000f9c <main+0x7c>)
 8000f3e:	6818      	ldr	r0, [r3, #0]
 8000f40:	4b17      	ldr	r3, [pc, #92]	@ (8000fa0 <main+0x80>)
 8000f42:	2201      	movs	r2, #1
 8000f44:	4917      	ldr	r1, [pc, #92]	@ (8000fa4 <main+0x84>)
 8000f46:	f7ff f909 	bl	800015c <init_dht11>
  HAL_UART_Receive_IT(&huart2, &USART_BUF_RX[USART_RX_EMPTY], 1);
 8000f4a:	4b17      	ldr	r3, [pc, #92]	@ (8000fa8 <main+0x88>)
 8000f4c:	881b      	ldrh	r3, [r3, #0]
 8000f4e:	b29b      	uxth	r3, r3
 8000f50:	461a      	mov	r2, r3
 8000f52:	4b16      	ldr	r3, [pc, #88]	@ (8000fac <main+0x8c>)
 8000f54:	4413      	add	r3, r2
 8000f56:	2201      	movs	r2, #1
 8000f58:	4619      	mov	r1, r3
 8000f5a:	4815      	ldr	r0, [pc, #84]	@ (8000fb0 <main+0x90>)
 8000f5c:	f002 ff51 	bl	8003e02 <HAL_UART_Receive_IT>

  // Rozpocznij przechwytywanie na timerze
  HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);
 8000f60:	2100      	movs	r1, #0
 8000f62:	480f      	ldr	r0, [pc, #60]	@ (8000fa0 <main+0x80>)
 8000f64:	f001 fde6 	bl	8002b34 <HAL_TIM_IC_Start_IT>
  HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_2);
 8000f68:	2104      	movs	r1, #4
 8000f6a:	480d      	ldr	r0, [pc, #52]	@ (8000fa0 <main+0x80>)
 8000f6c:	f001 fde2 	bl	8002b34 <HAL_TIM_IC_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if (DHT11_READ_FLAG) {
 8000f70:	4b10      	ldr	r3, [pc, #64]	@ (8000fb4 <main+0x94>)
 8000f72:	781b      	ldrb	r3, [r3, #0]
 8000f74:	b2db      	uxtb	r3, r3
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d004      	beq.n	8000f84 <main+0x64>
		  readDHT11(pDHT);
 8000f7a:	4b08      	ldr	r3, [pc, #32]	@ (8000f9c <main+0x7c>)
 8000f7c:	681b      	ldr	r3, [r3, #0]
 8000f7e:	4618      	mov	r0, r3
 8000f80:	f7ff f990 	bl	80002a4 <readDHT11>
	  }
	  // jeśli bufor nie jest pusty
	  if (USART_RX_EMPTY != USART_RX_BUSY) {
 8000f84:	4b08      	ldr	r3, [pc, #32]	@ (8000fa8 <main+0x88>)
 8000f86:	881b      	ldrh	r3, [r3, #0]
 8000f88:	b29a      	uxth	r2, r3
 8000f8a:	4b0b      	ldr	r3, [pc, #44]	@ (8000fb8 <main+0x98>)
 8000f8c:	881b      	ldrh	r3, [r3, #0]
 8000f8e:	b29b      	uxth	r3, r3
 8000f90:	429a      	cmp	r2, r3
 8000f92:	d0ed      	beq.n	8000f70 <main+0x50>
		  handle_char();
 8000f94:	f7ff ffb0 	bl	8000ef8 <handle_char>
	  if (DHT11_READ_FLAG) {
 8000f98:	e7ea      	b.n	8000f70 <main+0x50>
 8000f9a:	bf00      	nop
 8000f9c:	20000004 	.word	0x20000004
 8000fa0:	200011fc 	.word	0x200011fc
 8000fa4:	40010800 	.word	0x40010800
 8000fa8:	20000100 	.word	0x20000100
 8000fac:	20000080 	.word	0x20000080
 8000fb0:	2000128c 	.word	0x2000128c
 8000fb4:	20000508 	.word	0x20000508
 8000fb8:	20000102 	.word	0x20000102

08000fbc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b090      	sub	sp, #64	@ 0x40
 8000fc0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000fc2:	f107 0318 	add.w	r3, r7, #24
 8000fc6:	2228      	movs	r2, #40	@ 0x28
 8000fc8:	2100      	movs	r1, #0
 8000fca:	4618      	mov	r0, r3
 8000fcc:	f003 fcee 	bl	80049ac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000fd0:	1d3b      	adds	r3, r7, #4
 8000fd2:	2200      	movs	r2, #0
 8000fd4:	601a      	str	r2, [r3, #0]
 8000fd6:	605a      	str	r2, [r3, #4]
 8000fd8:	609a      	str	r2, [r3, #8]
 8000fda:	60da      	str	r2, [r3, #12]
 8000fdc:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000fde:	2302      	movs	r3, #2
 8000fe0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000fe2:	2301      	movs	r3, #1
 8000fe4:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000fe6:	2310      	movs	r3, #16
 8000fe8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000fea:	2302      	movs	r3, #2
 8000fec:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000fee:	2300      	movs	r3, #0
 8000ff0:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000ff2:	f44f 1360 	mov.w	r3, #3670016	@ 0x380000
 8000ff6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ff8:	f107 0318 	add.w	r3, r7, #24
 8000ffc:	4618      	mov	r0, r3
 8000ffe:	f000 feed 	bl	8001ddc <HAL_RCC_OscConfig>
 8001002:	4603      	mov	r3, r0
 8001004:	2b00      	cmp	r3, #0
 8001006:	d001      	beq.n	800100c <SystemClock_Config+0x50>
  {
    Error_Handler();
 8001008:	f000 f81a 	bl	8001040 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800100c:	230f      	movs	r3, #15
 800100e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001010:	2302      	movs	r3, #2
 8001012:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001014:	2300      	movs	r3, #0
 8001016:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001018:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800101c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800101e:	2300      	movs	r3, #0
 8001020:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001022:	1d3b      	adds	r3, r7, #4
 8001024:	2102      	movs	r1, #2
 8001026:	4618      	mov	r0, r3
 8001028:	f001 f95a 	bl	80022e0 <HAL_RCC_ClockConfig>
 800102c:	4603      	mov	r3, r0
 800102e:	2b00      	cmp	r3, #0
 8001030:	d001      	beq.n	8001036 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8001032:	f000 f805 	bl	8001040 <Error_Handler>
  }
}
 8001036:	bf00      	nop
 8001038:	3740      	adds	r7, #64	@ 0x40
 800103a:	46bd      	mov	sp, r7
 800103c:	bd80      	pop	{r7, pc}
	...

08001040 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001040:	b580      	push	{r7, lr}
 8001042:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	USART_fsend("problem");
 8001044:	4803      	ldr	r0, [pc, #12]	@ (8001054 <Error_Handler+0x14>)
 8001046:	f7ff faa5 	bl	8000594 <USART_fsend>
  __ASM volatile ("cpsid i" : : : "memory");
 800104a:	b672      	cpsid	i
}
 800104c:	bf00      	nop
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800104e:	bf00      	nop
 8001050:	e7fd      	b.n	800104e <Error_Handler+0xe>
 8001052:	bf00      	nop
 8001054:	08005360 	.word	0x08005360

08001058 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001058:	b480      	push	{r7}
 800105a:	b085      	sub	sp, #20
 800105c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800105e:	4b15      	ldr	r3, [pc, #84]	@ (80010b4 <HAL_MspInit+0x5c>)
 8001060:	699b      	ldr	r3, [r3, #24]
 8001062:	4a14      	ldr	r2, [pc, #80]	@ (80010b4 <HAL_MspInit+0x5c>)
 8001064:	f043 0301 	orr.w	r3, r3, #1
 8001068:	6193      	str	r3, [r2, #24]
 800106a:	4b12      	ldr	r3, [pc, #72]	@ (80010b4 <HAL_MspInit+0x5c>)
 800106c:	699b      	ldr	r3, [r3, #24]
 800106e:	f003 0301 	and.w	r3, r3, #1
 8001072:	60bb      	str	r3, [r7, #8]
 8001074:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001076:	4b0f      	ldr	r3, [pc, #60]	@ (80010b4 <HAL_MspInit+0x5c>)
 8001078:	69db      	ldr	r3, [r3, #28]
 800107a:	4a0e      	ldr	r2, [pc, #56]	@ (80010b4 <HAL_MspInit+0x5c>)
 800107c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001080:	61d3      	str	r3, [r2, #28]
 8001082:	4b0c      	ldr	r3, [pc, #48]	@ (80010b4 <HAL_MspInit+0x5c>)
 8001084:	69db      	ldr	r3, [r3, #28]
 8001086:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800108a:	607b      	str	r3, [r7, #4]
 800108c:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800108e:	4b0a      	ldr	r3, [pc, #40]	@ (80010b8 <HAL_MspInit+0x60>)
 8001090:	685b      	ldr	r3, [r3, #4]
 8001092:	60fb      	str	r3, [r7, #12]
 8001094:	68fb      	ldr	r3, [r7, #12]
 8001096:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 800109a:	60fb      	str	r3, [r7, #12]
 800109c:	68fb      	ldr	r3, [r7, #12]
 800109e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80010a2:	60fb      	str	r3, [r7, #12]
 80010a4:	4a04      	ldr	r2, [pc, #16]	@ (80010b8 <HAL_MspInit+0x60>)
 80010a6:	68fb      	ldr	r3, [r7, #12]
 80010a8:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80010aa:	bf00      	nop
 80010ac:	3714      	adds	r7, #20
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bc80      	pop	{r7}
 80010b2:	4770      	bx	lr
 80010b4:	40021000 	.word	0x40021000
 80010b8:	40010000 	.word	0x40010000

080010bc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80010bc:	b480      	push	{r7}
 80010be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80010c0:	bf00      	nop
 80010c2:	e7fd      	b.n	80010c0 <NMI_Handler+0x4>

080010c4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80010c4:	b480      	push	{r7}
 80010c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80010c8:	bf00      	nop
 80010ca:	e7fd      	b.n	80010c8 <HardFault_Handler+0x4>

080010cc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80010cc:	b480      	push	{r7}
 80010ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80010d0:	bf00      	nop
 80010d2:	e7fd      	b.n	80010d0 <MemManage_Handler+0x4>

080010d4 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80010d4:	b480      	push	{r7}
 80010d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80010d8:	bf00      	nop
 80010da:	e7fd      	b.n	80010d8 <BusFault_Handler+0x4>

080010dc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80010dc:	b480      	push	{r7}
 80010de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80010e0:	bf00      	nop
 80010e2:	e7fd      	b.n	80010e0 <UsageFault_Handler+0x4>

080010e4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80010e4:	b480      	push	{r7}
 80010e6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80010e8:	bf00      	nop
 80010ea:	46bd      	mov	sp, r7
 80010ec:	bc80      	pop	{r7}
 80010ee:	4770      	bx	lr

080010f0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80010f0:	b480      	push	{r7}
 80010f2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80010f4:	bf00      	nop
 80010f6:	46bd      	mov	sp, r7
 80010f8:	bc80      	pop	{r7}
 80010fa:	4770      	bx	lr

080010fc <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80010fc:	b480      	push	{r7}
 80010fe:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001100:	bf00      	nop
 8001102:	46bd      	mov	sp, r7
 8001104:	bc80      	pop	{r7}
 8001106:	4770      	bx	lr

08001108 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001108:	b580      	push	{r7, lr}
 800110a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800110c:	f000 fa90 	bl	8001630 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001110:	bf00      	nop
 8001112:	bd80      	pop	{r7, pc}

08001114 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001114:	b580      	push	{r7, lr}
 8001116:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001118:	4802      	ldr	r0, [pc, #8]	@ (8001124 <TIM4_IRQHandler+0x10>)
 800111a:	f001 fe17 	bl	8002d4c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 800111e:	bf00      	nop
 8001120:	bd80      	pop	{r7, pc}
 8001122:	bf00      	nop
 8001124:	20001244 	.word	0x20001244

08001128 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001128:	b580      	push	{r7, lr}
 800112a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 800112c:	4802      	ldr	r0, [pc, #8]	@ (8001138 <USART2_IRQHandler+0x10>)
 800112e:	f002 fe8d 	bl	8003e4c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8001132:	bf00      	nop
 8001134:	bd80      	pop	{r7, pc}
 8001136:	bf00      	nop
 8001138:	2000128c 	.word	0x2000128c

0800113c <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 800113c:	b580      	push	{r7, lr}
 800113e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8001140:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8001144:	f000 fe28 	bl	8001d98 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8001148:	bf00      	nop
 800114a:	bd80      	pop	{r7, pc}

0800114c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800114c:	b580      	push	{r7, lr}
 800114e:	b086      	sub	sp, #24
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001154:	4a14      	ldr	r2, [pc, #80]	@ (80011a8 <_sbrk+0x5c>)
 8001156:	4b15      	ldr	r3, [pc, #84]	@ (80011ac <_sbrk+0x60>)
 8001158:	1ad3      	subs	r3, r2, r3
 800115a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800115c:	697b      	ldr	r3, [r7, #20]
 800115e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001160:	4b13      	ldr	r3, [pc, #76]	@ (80011b0 <_sbrk+0x64>)
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	2b00      	cmp	r3, #0
 8001166:	d102      	bne.n	800116e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001168:	4b11      	ldr	r3, [pc, #68]	@ (80011b0 <_sbrk+0x64>)
 800116a:	4a12      	ldr	r2, [pc, #72]	@ (80011b4 <_sbrk+0x68>)
 800116c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800116e:	4b10      	ldr	r3, [pc, #64]	@ (80011b0 <_sbrk+0x64>)
 8001170:	681a      	ldr	r2, [r3, #0]
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	4413      	add	r3, r2
 8001176:	693a      	ldr	r2, [r7, #16]
 8001178:	429a      	cmp	r2, r3
 800117a:	d207      	bcs.n	800118c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800117c:	f003 fc30 	bl	80049e0 <__errno>
 8001180:	4603      	mov	r3, r0
 8001182:	220c      	movs	r2, #12
 8001184:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001186:	f04f 33ff 	mov.w	r3, #4294967295
 800118a:	e009      	b.n	80011a0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800118c:	4b08      	ldr	r3, [pc, #32]	@ (80011b0 <_sbrk+0x64>)
 800118e:	681b      	ldr	r3, [r3, #0]
 8001190:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001192:	4b07      	ldr	r3, [pc, #28]	@ (80011b0 <_sbrk+0x64>)
 8001194:	681a      	ldr	r2, [r3, #0]
 8001196:	687b      	ldr	r3, [r7, #4]
 8001198:	4413      	add	r3, r2
 800119a:	4a05      	ldr	r2, [pc, #20]	@ (80011b0 <_sbrk+0x64>)
 800119c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800119e:	68fb      	ldr	r3, [r7, #12]
}
 80011a0:	4618      	mov	r0, r3
 80011a2:	3718      	adds	r7, #24
 80011a4:	46bd      	mov	sp, r7
 80011a6:	bd80      	pop	{r7, pc}
 80011a8:	20005000 	.word	0x20005000
 80011ac:	00000400 	.word	0x00000400
 80011b0:	200011f8 	.word	0x200011f8
 80011b4:	20001420 	.word	0x20001420

080011b8 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80011b8:	b480      	push	{r7}
 80011ba:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80011bc:	bf00      	nop
 80011be:	46bd      	mov	sp, r7
 80011c0:	bc80      	pop	{r7}
 80011c2:	4770      	bx	lr

080011c4 <MX_TIM2_Init>:
TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim4;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 80011c4:	b580      	push	{r7, lr}
 80011c6:	b090      	sub	sp, #64	@ 0x40
 80011c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80011ca:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80011ce:	2200      	movs	r2, #0
 80011d0:	601a      	str	r2, [r3, #0]
 80011d2:	605a      	str	r2, [r3, #4]
 80011d4:	609a      	str	r2, [r3, #8]
 80011d6:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80011d8:	f107 031c 	add.w	r3, r7, #28
 80011dc:	2200      	movs	r2, #0
 80011de:	601a      	str	r2, [r3, #0]
 80011e0:	605a      	str	r2, [r3, #4]
 80011e2:	609a      	str	r2, [r3, #8]
 80011e4:	60da      	str	r2, [r3, #12]
 80011e6:	611a      	str	r2, [r3, #16]
  TIM_IC_InitTypeDef sConfigIC = {0};
 80011e8:	f107 030c 	add.w	r3, r7, #12
 80011ec:	2200      	movs	r2, #0
 80011ee:	601a      	str	r2, [r3, #0]
 80011f0:	605a      	str	r2, [r3, #4]
 80011f2:	609a      	str	r2, [r3, #8]
 80011f4:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011f6:	1d3b      	adds	r3, r7, #4
 80011f8:	2200      	movs	r2, #0
 80011fa:	601a      	str	r2, [r3, #0]
 80011fc:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  HAL_TIM_PWM_Stop(&htim2, TIM_CHANNEL_1);
 80011fe:	2100      	movs	r1, #0
 8001200:	483f      	ldr	r0, [pc, #252]	@ (8001300 <MX_TIM2_Init+0x13c>)
 8001202:	f001 fb1b 	bl	800283c <HAL_TIM_PWM_Stop>

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001206:	4b3e      	ldr	r3, [pc, #248]	@ (8001300 <MX_TIM2_Init+0x13c>)
 8001208:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800120c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 63;
 800120e:	4b3c      	ldr	r3, [pc, #240]	@ (8001300 <MX_TIM2_Init+0x13c>)
 8001210:	223f      	movs	r2, #63	@ 0x3f
 8001212:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001214:	4b3a      	ldr	r3, [pc, #232]	@ (8001300 <MX_TIM2_Init+0x13c>)
 8001216:	2200      	movs	r2, #0
 8001218:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 800121a:	4b39      	ldr	r3, [pc, #228]	@ (8001300 <MX_TIM2_Init+0x13c>)
 800121c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001220:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001222:	4b37      	ldr	r3, [pc, #220]	@ (8001300 <MX_TIM2_Init+0x13c>)
 8001224:	2200      	movs	r2, #0
 8001226:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001228:	4b35      	ldr	r3, [pc, #212]	@ (8001300 <MX_TIM2_Init+0x13c>)
 800122a:	2200      	movs	r2, #0
 800122c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800122e:	4834      	ldr	r0, [pc, #208]	@ (8001300 <MX_TIM2_Init+0x13c>)
 8001230:	f001 f9e4 	bl	80025fc <HAL_TIM_Base_Init>
 8001234:	4603      	mov	r3, r0
 8001236:	2b00      	cmp	r3, #0
 8001238:	d001      	beq.n	800123e <MX_TIM2_Init+0x7a>
  {
    Error_Handler();
 800123a:	f7ff ff01 	bl	8001040 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800123e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001242:	633b      	str	r3, [r7, #48]	@ 0x30
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001244:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001248:	4619      	mov	r1, r3
 800124a:	482d      	ldr	r0, [pc, #180]	@ (8001300 <MX_TIM2_Init+0x13c>)
 800124c:	f001 ff66 	bl	800311c <HAL_TIM_ConfigClockSource>
 8001250:	4603      	mov	r3, r0
 8001252:	2b00      	cmp	r3, #0
 8001254:	d001      	beq.n	800125a <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 8001256:	f7ff fef3 	bl	8001040 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 800125a:	4829      	ldr	r0, [pc, #164]	@ (8001300 <MX_TIM2_Init+0x13c>)
 800125c:	f001 fb52 	bl	8002904 <HAL_TIM_IC_Init>
 8001260:	4603      	mov	r3, r0
 8001262:	2b00      	cmp	r3, #0
 8001264:	d001      	beq.n	800126a <MX_TIM2_Init+0xa6>
  {
    Error_Handler();
 8001266:	f7ff feeb 	bl	8001040 <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_RESET;
 800126a:	2304      	movs	r3, #4
 800126c:	61fb      	str	r3, [r7, #28]
  sSlaveConfig.InputTrigger = TIM_TS_TI1FP1;
 800126e:	2350      	movs	r3, #80	@ 0x50
 8001270:	623b      	str	r3, [r7, #32]
  sSlaveConfig.TriggerPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8001272:	2300      	movs	r3, #0
 8001274:	627b      	str	r3, [r7, #36]	@ 0x24
  sSlaveConfig.TriggerPrescaler = TIM_ICPSC_DIV1;
 8001276:	2300      	movs	r3, #0
 8001278:	62bb      	str	r3, [r7, #40]	@ 0x28
  sSlaveConfig.TriggerFilter = 0;
 800127a:	2300      	movs	r3, #0
 800127c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 800127e:	f107 031c 	add.w	r3, r7, #28
 8001282:	4619      	mov	r1, r3
 8001284:	481e      	ldr	r0, [pc, #120]	@ (8001300 <MX_TIM2_Init+0x13c>)
 8001286:	f002 f810 	bl	80032aa <HAL_TIM_SlaveConfigSynchro>
 800128a:	4603      	mov	r3, r0
 800128c:	2b00      	cmp	r3, #0
 800128e:	d001      	beq.n	8001294 <MX_TIM2_Init+0xd0>
  {
    Error_Handler();
 8001290:	f7ff fed6 	bl	8001040 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8001294:	2300      	movs	r3, #0
 8001296:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8001298:	2301      	movs	r3, #1
 800129a:	613b      	str	r3, [r7, #16]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 800129c:	2300      	movs	r3, #0
 800129e:	617b      	str	r3, [r7, #20]
  sConfigIC.ICFilter = 0;
 80012a0:	2300      	movs	r3, #0
 80012a2:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 80012a4:	f107 030c 	add.w	r3, r7, #12
 80012a8:	2200      	movs	r2, #0
 80012aa:	4619      	mov	r1, r3
 80012ac:	4814      	ldr	r0, [pc, #80]	@ (8001300 <MX_TIM2_Init+0x13c>)
 80012ae:	f001 fe99 	bl	8002fe4 <HAL_TIM_IC_ConfigChannel>
 80012b2:	4603      	mov	r3, r0
 80012b4:	2b00      	cmp	r3, #0
 80012b6:	d001      	beq.n	80012bc <MX_TIM2_Init+0xf8>
  {
    Error_Handler();
 80012b8:	f7ff fec2 	bl	8001040 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_FALLING;
 80012bc:	2302      	movs	r3, #2
 80012be:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 80012c0:	2302      	movs	r3, #2
 80012c2:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 80012c4:	f107 030c 	add.w	r3, r7, #12
 80012c8:	2204      	movs	r2, #4
 80012ca:	4619      	mov	r1, r3
 80012cc:	480c      	ldr	r0, [pc, #48]	@ (8001300 <MX_TIM2_Init+0x13c>)
 80012ce:	f001 fe89 	bl	8002fe4 <HAL_TIM_IC_ConfigChannel>
 80012d2:	4603      	mov	r3, r0
 80012d4:	2b00      	cmp	r3, #0
 80012d6:	d001      	beq.n	80012dc <MX_TIM2_Init+0x118>
  {
    Error_Handler();
 80012d8:	f7ff feb2 	bl	8001040 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80012dc:	2300      	movs	r3, #0
 80012de:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80012e0:	2300      	movs	r3, #0
 80012e2:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80012e4:	1d3b      	adds	r3, r7, #4
 80012e6:	4619      	mov	r1, r3
 80012e8:	4805      	ldr	r0, [pc, #20]	@ (8001300 <MX_TIM2_Init+0x13c>)
 80012ea:	f002 fc95 	bl	8003c18 <HAL_TIMEx_MasterConfigSynchronization>
 80012ee:	4603      	mov	r3, r0
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d001      	beq.n	80012f8 <MX_TIM2_Init+0x134>
  {
    Error_Handler();
 80012f4:	f7ff fea4 	bl	8001040 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80012f8:	bf00      	nop
 80012fa:	3740      	adds	r7, #64	@ 0x40
 80012fc:	46bd      	mov	sp, r7
 80012fe:	bd80      	pop	{r7, pc}
 8001300:	200011fc 	.word	0x200011fc

08001304 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 8001304:	b580      	push	{r7, lr}
 8001306:	b08a      	sub	sp, #40	@ 0x28
 8001308:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800130a:	f107 0320 	add.w	r3, r7, #32
 800130e:	2200      	movs	r2, #0
 8001310:	601a      	str	r2, [r3, #0]
 8001312:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001314:	1d3b      	adds	r3, r7, #4
 8001316:	2200      	movs	r2, #0
 8001318:	601a      	str	r2, [r3, #0]
 800131a:	605a      	str	r2, [r3, #4]
 800131c:	609a      	str	r2, [r3, #8]
 800131e:	60da      	str	r2, [r3, #12]
 8001320:	611a      	str	r2, [r3, #16]
 8001322:	615a      	str	r2, [r3, #20]
 8001324:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001326:	4b21      	ldr	r3, [pc, #132]	@ (80013ac <MX_TIM4_Init+0xa8>)
 8001328:	4a21      	ldr	r2, [pc, #132]	@ (80013b0 <MX_TIM4_Init+0xac>)
 800132a:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 63999;
 800132c:	4b1f      	ldr	r3, [pc, #124]	@ (80013ac <MX_TIM4_Init+0xa8>)
 800132e:	f64f 12ff 	movw	r2, #63999	@ 0xf9ff
 8001332:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001334:	4b1d      	ldr	r3, [pc, #116]	@ (80013ac <MX_TIM4_Init+0xa8>)
 8001336:	2200      	movs	r2, #0
 8001338:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 5000;
 800133a:	4b1c      	ldr	r3, [pc, #112]	@ (80013ac <MX_TIM4_Init+0xa8>)
 800133c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001340:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001342:	4b1a      	ldr	r3, [pc, #104]	@ (80013ac <MX_TIM4_Init+0xa8>)
 8001344:	2200      	movs	r2, #0
 8001346:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001348:	4b18      	ldr	r3, [pc, #96]	@ (80013ac <MX_TIM4_Init+0xa8>)
 800134a:	2200      	movs	r2, #0
 800134c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_OC_Init(&htim4) != HAL_OK)
 800134e:	4817      	ldr	r0, [pc, #92]	@ (80013ac <MX_TIM4_Init+0xa8>)
 8001350:	f001 fa24 	bl	800279c <HAL_TIM_OC_Init>
 8001354:	4603      	mov	r3, r0
 8001356:	2b00      	cmp	r3, #0
 8001358:	d001      	beq.n	800135e <MX_TIM4_Init+0x5a>
  {
    Error_Handler();
 800135a:	f7ff fe71 	bl	8001040 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800135e:	2300      	movs	r3, #0
 8001360:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001362:	2300      	movs	r3, #0
 8001364:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001366:	f107 0320 	add.w	r3, r7, #32
 800136a:	4619      	mov	r1, r3
 800136c:	480f      	ldr	r0, [pc, #60]	@ (80013ac <MX_TIM4_Init+0xa8>)
 800136e:	f002 fc53 	bl	8003c18 <HAL_TIMEx_MasterConfigSynchronization>
 8001372:	4603      	mov	r3, r0
 8001374:	2b00      	cmp	r3, #0
 8001376:	d001      	beq.n	800137c <MX_TIM4_Init+0x78>
  {
    Error_Handler();
 8001378:	f7ff fe62 	bl	8001040 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TIMING;
 800137c:	2300      	movs	r3, #0
 800137e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001380:	2300      	movs	r3, #0
 8001382:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001384:	2300      	movs	r3, #0
 8001386:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001388:	2300      	movs	r3, #0
 800138a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_OC_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800138c:	1d3b      	adds	r3, r7, #4
 800138e:	2200      	movs	r2, #0
 8001390:	4619      	mov	r1, r3
 8001392:	4806      	ldr	r0, [pc, #24]	@ (80013ac <MX_TIM4_Init+0xa8>)
 8001394:	f001 fdca 	bl	8002f2c <HAL_TIM_OC_ConfigChannel>
 8001398:	4603      	mov	r3, r0
 800139a:	2b00      	cmp	r3, #0
 800139c:	d001      	beq.n	80013a2 <MX_TIM4_Init+0x9e>
  {
    Error_Handler();
 800139e:	f7ff fe4f 	bl	8001040 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80013a2:	bf00      	nop
 80013a4:	3728      	adds	r7, #40	@ 0x28
 80013a6:	46bd      	mov	sp, r7
 80013a8:	bd80      	pop	{r7, pc}
 80013aa:	bf00      	nop
 80013ac:	20001244 	.word	0x20001244
 80013b0:	40000800 	.word	0x40000800

080013b4 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80013b4:	b580      	push	{r7, lr}
 80013b6:	b088      	sub	sp, #32
 80013b8:	af00      	add	r7, sp, #0
 80013ba:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013bc:	f107 0310 	add.w	r3, r7, #16
 80013c0:	2200      	movs	r2, #0
 80013c2:	601a      	str	r2, [r3, #0]
 80013c4:	605a      	str	r2, [r3, #4]
 80013c6:	609a      	str	r2, [r3, #8]
 80013c8:	60da      	str	r2, [r3, #12]
  if(tim_baseHandle->Instance==TIM2)
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80013d2:	d123      	bne.n	800141c <HAL_TIM_Base_MspInit+0x68>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80013d4:	4b13      	ldr	r3, [pc, #76]	@ (8001424 <HAL_TIM_Base_MspInit+0x70>)
 80013d6:	69db      	ldr	r3, [r3, #28]
 80013d8:	4a12      	ldr	r2, [pc, #72]	@ (8001424 <HAL_TIM_Base_MspInit+0x70>)
 80013da:	f043 0301 	orr.w	r3, r3, #1
 80013de:	61d3      	str	r3, [r2, #28]
 80013e0:	4b10      	ldr	r3, [pc, #64]	@ (8001424 <HAL_TIM_Base_MspInit+0x70>)
 80013e2:	69db      	ldr	r3, [r3, #28]
 80013e4:	f003 0301 	and.w	r3, r3, #1
 80013e8:	60fb      	str	r3, [r7, #12]
 80013ea:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80013ec:	4b0d      	ldr	r3, [pc, #52]	@ (8001424 <HAL_TIM_Base_MspInit+0x70>)
 80013ee:	699b      	ldr	r3, [r3, #24]
 80013f0:	4a0c      	ldr	r2, [pc, #48]	@ (8001424 <HAL_TIM_Base_MspInit+0x70>)
 80013f2:	f043 0304 	orr.w	r3, r3, #4
 80013f6:	6193      	str	r3, [r2, #24]
 80013f8:	4b0a      	ldr	r3, [pc, #40]	@ (8001424 <HAL_TIM_Base_MspInit+0x70>)
 80013fa:	699b      	ldr	r3, [r3, #24]
 80013fc:	f003 0304 	and.w	r3, r3, #4
 8001400:	60bb      	str	r3, [r7, #8]
 8001402:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001404:	2301      	movs	r3, #1
 8001406:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001408:	2300      	movs	r3, #0
 800140a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800140c:	2300      	movs	r3, #0
 800140e:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001410:	f107 0310 	add.w	r3, r7, #16
 8001414:	4619      	mov	r1, r3
 8001416:	4804      	ldr	r0, [pc, #16]	@ (8001428 <HAL_TIM_Base_MspInit+0x74>)
 8001418:	f000 fb0a 	bl	8001a30 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 800141c:	bf00      	nop
 800141e:	3720      	adds	r7, #32
 8001420:	46bd      	mov	sp, r7
 8001422:	bd80      	pop	{r7, pc}
 8001424:	40021000 	.word	0x40021000
 8001428:	40010800 	.word	0x40010800

0800142c <HAL_TIM_OC_MspInit>:

void HAL_TIM_OC_MspInit(TIM_HandleTypeDef* tim_ocHandle)
{
 800142c:	b580      	push	{r7, lr}
 800142e:	b084      	sub	sp, #16
 8001430:	af00      	add	r7, sp, #0
 8001432:	6078      	str	r0, [r7, #4]

  if(tim_ocHandle->Instance==TIM4)
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	4a0d      	ldr	r2, [pc, #52]	@ (8001470 <HAL_TIM_OC_MspInit+0x44>)
 800143a:	4293      	cmp	r3, r2
 800143c:	d113      	bne.n	8001466 <HAL_TIM_OC_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* TIM4 clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 800143e:	4b0d      	ldr	r3, [pc, #52]	@ (8001474 <HAL_TIM_OC_MspInit+0x48>)
 8001440:	69db      	ldr	r3, [r3, #28]
 8001442:	4a0c      	ldr	r2, [pc, #48]	@ (8001474 <HAL_TIM_OC_MspInit+0x48>)
 8001444:	f043 0304 	orr.w	r3, r3, #4
 8001448:	61d3      	str	r3, [r2, #28]
 800144a:	4b0a      	ldr	r3, [pc, #40]	@ (8001474 <HAL_TIM_OC_MspInit+0x48>)
 800144c:	69db      	ldr	r3, [r3, #28]
 800144e:	f003 0304 	and.w	r3, r3, #4
 8001452:	60fb      	str	r3, [r7, #12]
 8001454:	68fb      	ldr	r3, [r7, #12]

    /* TIM4 interrupt Init */
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001456:	2200      	movs	r2, #0
 8001458:	2100      	movs	r1, #0
 800145a:	201e      	movs	r0, #30
 800145c:	f000 f9ff 	bl	800185e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001460:	201e      	movs	r0, #30
 8001462:	f000 fa18 	bl	8001896 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 8001466:	bf00      	nop
 8001468:	3710      	adds	r7, #16
 800146a:	46bd      	mov	sp, r7
 800146c:	bd80      	pop	{r7, pc}
 800146e:	bf00      	nop
 8001470:	40000800 	.word	0x40000800
 8001474:	40021000 	.word	0x40021000

08001478 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8001478:	b580      	push	{r7, lr}
 800147a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800147c:	4b11      	ldr	r3, [pc, #68]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 800147e:	4a12      	ldr	r2, [pc, #72]	@ (80014c8 <MX_USART2_UART_Init+0x50>)
 8001480:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001482:	4b10      	ldr	r3, [pc, #64]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 8001484:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001488:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800148a:	4b0e      	ldr	r3, [pc, #56]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 800148c:	2200      	movs	r2, #0
 800148e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001490:	4b0c      	ldr	r3, [pc, #48]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 8001492:	2200      	movs	r2, #0
 8001494:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001496:	4b0b      	ldr	r3, [pc, #44]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 8001498:	2200      	movs	r2, #0
 800149a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800149c:	4b09      	ldr	r3, [pc, #36]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 800149e:	220c      	movs	r2, #12
 80014a0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80014a2:	4b08      	ldr	r3, [pc, #32]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 80014a4:	2200      	movs	r2, #0
 80014a6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80014a8:	4b06      	ldr	r3, [pc, #24]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 80014aa:	2200      	movs	r2, #0
 80014ac:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80014ae:	4805      	ldr	r0, [pc, #20]	@ (80014c4 <MX_USART2_UART_Init+0x4c>)
 80014b0:	f002 fc22 	bl	8003cf8 <HAL_UART_Init>
 80014b4:	4603      	mov	r3, r0
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	d001      	beq.n	80014be <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80014ba:	f7ff fdc1 	bl	8001040 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80014be:	bf00      	nop
 80014c0:	bd80      	pop	{r7, pc}
 80014c2:	bf00      	nop
 80014c4:	2000128c 	.word	0x2000128c
 80014c8:	40004400 	.word	0x40004400

080014cc <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80014cc:	b580      	push	{r7, lr}
 80014ce:	b088      	sub	sp, #32
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014d4:	f107 0310 	add.w	r3, r7, #16
 80014d8:	2200      	movs	r2, #0
 80014da:	601a      	str	r2, [r3, #0]
 80014dc:	605a      	str	r2, [r3, #4]
 80014de:	609a      	str	r2, [r3, #8]
 80014e0:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART2)
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	681b      	ldr	r3, [r3, #0]
 80014e6:	4a19      	ldr	r2, [pc, #100]	@ (800154c <HAL_UART_MspInit+0x80>)
 80014e8:	4293      	cmp	r3, r2
 80014ea:	d12b      	bne.n	8001544 <HAL_UART_MspInit+0x78>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80014ec:	4b18      	ldr	r3, [pc, #96]	@ (8001550 <HAL_UART_MspInit+0x84>)
 80014ee:	69db      	ldr	r3, [r3, #28]
 80014f0:	4a17      	ldr	r2, [pc, #92]	@ (8001550 <HAL_UART_MspInit+0x84>)
 80014f2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80014f6:	61d3      	str	r3, [r2, #28]
 80014f8:	4b15      	ldr	r3, [pc, #84]	@ (8001550 <HAL_UART_MspInit+0x84>)
 80014fa:	69db      	ldr	r3, [r3, #28]
 80014fc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001500:	60fb      	str	r3, [r7, #12]
 8001502:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001504:	4b12      	ldr	r3, [pc, #72]	@ (8001550 <HAL_UART_MspInit+0x84>)
 8001506:	699b      	ldr	r3, [r3, #24]
 8001508:	4a11      	ldr	r2, [pc, #68]	@ (8001550 <HAL_UART_MspInit+0x84>)
 800150a:	f043 0304 	orr.w	r3, r3, #4
 800150e:	6193      	str	r3, [r2, #24]
 8001510:	4b0f      	ldr	r3, [pc, #60]	@ (8001550 <HAL_UART_MspInit+0x84>)
 8001512:	699b      	ldr	r3, [r3, #24]
 8001514:	f003 0304 	and.w	r3, r3, #4
 8001518:	60bb      	str	r3, [r7, #8]
 800151a:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800151c:	230c      	movs	r3, #12
 800151e:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001520:	2302      	movs	r3, #2
 8001522:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001524:	2302      	movs	r3, #2
 8001526:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001528:	f107 0310 	add.w	r3, r7, #16
 800152c:	4619      	mov	r1, r3
 800152e:	4809      	ldr	r0, [pc, #36]	@ (8001554 <HAL_UART_MspInit+0x88>)
 8001530:	f000 fa7e 	bl	8001a30 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001534:	2200      	movs	r2, #0
 8001536:	2100      	movs	r1, #0
 8001538:	2026      	movs	r0, #38	@ 0x26
 800153a:	f000 f990 	bl	800185e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 800153e:	2026      	movs	r0, #38	@ 0x26
 8001540:	f000 f9a9 	bl	8001896 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8001544:	bf00      	nop
 8001546:	3720      	adds	r7, #32
 8001548:	46bd      	mov	sp, r7
 800154a:	bd80      	pop	{r7, pc}
 800154c:	40004400 	.word	0x40004400
 8001550:	40021000 	.word	0x40021000
 8001554:	40010800 	.word	0x40010800

08001558 <Reset_Handler>:
 8001558:	f7ff fe2e 	bl	80011b8 <SystemInit>
 800155c:	480b      	ldr	r0, [pc, #44]	@ (800158c <LoopFillZerobss+0xe>)
 800155e:	490c      	ldr	r1, [pc, #48]	@ (8001590 <LoopFillZerobss+0x12>)
 8001560:	4a0c      	ldr	r2, [pc, #48]	@ (8001594 <LoopFillZerobss+0x16>)
 8001562:	2300      	movs	r3, #0
 8001564:	e002      	b.n	800156c <LoopCopyDataInit>

08001566 <CopyDataInit>:
 8001566:	58d4      	ldr	r4, [r2, r3]
 8001568:	50c4      	str	r4, [r0, r3]
 800156a:	3304      	adds	r3, #4

0800156c <LoopCopyDataInit>:
 800156c:	18c4      	adds	r4, r0, r3
 800156e:	428c      	cmp	r4, r1
 8001570:	d3f9      	bcc.n	8001566 <CopyDataInit>
 8001572:	4a09      	ldr	r2, [pc, #36]	@ (8001598 <LoopFillZerobss+0x1a>)
 8001574:	4c09      	ldr	r4, [pc, #36]	@ (800159c <LoopFillZerobss+0x1e>)
 8001576:	2300      	movs	r3, #0
 8001578:	e001      	b.n	800157e <LoopFillZerobss>

0800157a <FillZerobss>:
 800157a:	6013      	str	r3, [r2, #0]
 800157c:	3204      	adds	r2, #4

0800157e <LoopFillZerobss>:
 800157e:	42a2      	cmp	r2, r4
 8001580:	d3fb      	bcc.n	800157a <FillZerobss>
 8001582:	f003 fa33 	bl	80049ec <__libc_init_array>
 8001586:	f7ff fccb 	bl	8000f20 <main>
 800158a:	4770      	bx	lr
 800158c:	20000000 	.word	0x20000000
 8001590:	20000064 	.word	0x20000064
 8001594:	080054d8 	.word	0x080054d8
 8001598:	20000064 	.word	0x20000064
 800159c:	20001420 	.word	0x20001420

080015a0 <ADC1_2_IRQHandler>:
 80015a0:	e7fe      	b.n	80015a0 <ADC1_2_IRQHandler>
	...

080015a4 <HAL_Init>:
 80015a4:	b580      	push	{r7, lr}
 80015a6:	af00      	add	r7, sp, #0
 80015a8:	4b08      	ldr	r3, [pc, #32]	@ (80015cc <HAL_Init+0x28>)
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	4a07      	ldr	r2, [pc, #28]	@ (80015cc <HAL_Init+0x28>)
 80015ae:	f043 0310 	orr.w	r3, r3, #16
 80015b2:	6013      	str	r3, [r2, #0]
 80015b4:	2003      	movs	r0, #3
 80015b6:	f000 f947 	bl	8001848 <HAL_NVIC_SetPriorityGrouping>
 80015ba:	2000      	movs	r0, #0
 80015bc:	f000 f808 	bl	80015d0 <HAL_InitTick>
 80015c0:	f7ff fd4a 	bl	8001058 <HAL_MspInit>
 80015c4:	2300      	movs	r3, #0
 80015c6:	4618      	mov	r0, r3
 80015c8:	bd80      	pop	{r7, pc}
 80015ca:	bf00      	nop
 80015cc:	40022000 	.word	0x40022000

080015d0 <HAL_InitTick>:
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b082      	sub	sp, #8
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	6078      	str	r0, [r7, #4]
 80015d8:	4b12      	ldr	r3, [pc, #72]	@ (8001624 <HAL_InitTick+0x54>)
 80015da:	681a      	ldr	r2, [r3, #0]
 80015dc:	4b12      	ldr	r3, [pc, #72]	@ (8001628 <HAL_InitTick+0x58>)
 80015de:	781b      	ldrb	r3, [r3, #0]
 80015e0:	4619      	mov	r1, r3
 80015e2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80015e6:	fbb3 f3f1 	udiv	r3, r3, r1
 80015ea:	fbb2 f3f3 	udiv	r3, r2, r3
 80015ee:	4618      	mov	r0, r3
 80015f0:	f000 f95f 	bl	80018b2 <HAL_SYSTICK_Config>
 80015f4:	4603      	mov	r3, r0
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d001      	beq.n	80015fe <HAL_InitTick+0x2e>
 80015fa:	2301      	movs	r3, #1
 80015fc:	e00e      	b.n	800161c <HAL_InitTick+0x4c>
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	2b0f      	cmp	r3, #15
 8001602:	d80a      	bhi.n	800161a <HAL_InitTick+0x4a>
 8001604:	2200      	movs	r2, #0
 8001606:	6879      	ldr	r1, [r7, #4]
 8001608:	f04f 30ff 	mov.w	r0, #4294967295
 800160c:	f000 f927 	bl	800185e <HAL_NVIC_SetPriority>
 8001610:	4a06      	ldr	r2, [pc, #24]	@ (800162c <HAL_InitTick+0x5c>)
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	6013      	str	r3, [r2, #0]
 8001616:	2300      	movs	r3, #0
 8001618:	e000      	b.n	800161c <HAL_InitTick+0x4c>
 800161a:	2301      	movs	r3, #1
 800161c:	4618      	mov	r0, r3
 800161e:	3708      	adds	r7, #8
 8001620:	46bd      	mov	sp, r7
 8001622:	bd80      	pop	{r7, pc}
 8001624:	20000008 	.word	0x20000008
 8001628:	20000010 	.word	0x20000010
 800162c:	2000000c 	.word	0x2000000c

08001630 <HAL_IncTick>:
 8001630:	b480      	push	{r7}
 8001632:	af00      	add	r7, sp, #0
 8001634:	4b05      	ldr	r3, [pc, #20]	@ (800164c <HAL_IncTick+0x1c>)
 8001636:	781b      	ldrb	r3, [r3, #0]
 8001638:	461a      	mov	r2, r3
 800163a:	4b05      	ldr	r3, [pc, #20]	@ (8001650 <HAL_IncTick+0x20>)
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	4413      	add	r3, r2
 8001640:	4a03      	ldr	r2, [pc, #12]	@ (8001650 <HAL_IncTick+0x20>)
 8001642:	6013      	str	r3, [r2, #0]
 8001644:	bf00      	nop
 8001646:	46bd      	mov	sp, r7
 8001648:	bc80      	pop	{r7}
 800164a:	4770      	bx	lr
 800164c:	20000010 	.word	0x20000010
 8001650:	200012d4 	.word	0x200012d4

08001654 <HAL_GetTick>:
 8001654:	b480      	push	{r7}
 8001656:	af00      	add	r7, sp, #0
 8001658:	4b02      	ldr	r3, [pc, #8]	@ (8001664 <HAL_GetTick+0x10>)
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	4618      	mov	r0, r3
 800165e:	46bd      	mov	sp, r7
 8001660:	bc80      	pop	{r7}
 8001662:	4770      	bx	lr
 8001664:	200012d4 	.word	0x200012d4

08001668 <HAL_Delay>:
 8001668:	b580      	push	{r7, lr}
 800166a:	b084      	sub	sp, #16
 800166c:	af00      	add	r7, sp, #0
 800166e:	6078      	str	r0, [r7, #4]
 8001670:	f7ff fff0 	bl	8001654 <HAL_GetTick>
 8001674:	60b8      	str	r0, [r7, #8]
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	60fb      	str	r3, [r7, #12]
 800167a:	68fb      	ldr	r3, [r7, #12]
 800167c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001680:	d005      	beq.n	800168e <HAL_Delay+0x26>
 8001682:	4b0a      	ldr	r3, [pc, #40]	@ (80016ac <HAL_Delay+0x44>)
 8001684:	781b      	ldrb	r3, [r3, #0]
 8001686:	461a      	mov	r2, r3
 8001688:	68fb      	ldr	r3, [r7, #12]
 800168a:	4413      	add	r3, r2
 800168c:	60fb      	str	r3, [r7, #12]
 800168e:	bf00      	nop
 8001690:	f7ff ffe0 	bl	8001654 <HAL_GetTick>
 8001694:	4602      	mov	r2, r0
 8001696:	68bb      	ldr	r3, [r7, #8]
 8001698:	1ad3      	subs	r3, r2, r3
 800169a:	68fa      	ldr	r2, [r7, #12]
 800169c:	429a      	cmp	r2, r3
 800169e:	d8f7      	bhi.n	8001690 <HAL_Delay+0x28>
 80016a0:	bf00      	nop
 80016a2:	bf00      	nop
 80016a4:	3710      	adds	r7, #16
 80016a6:	46bd      	mov	sp, r7
 80016a8:	bd80      	pop	{r7, pc}
 80016aa:	bf00      	nop
 80016ac:	20000010 	.word	0x20000010

080016b0 <__NVIC_SetPriorityGrouping>:
 80016b0:	b480      	push	{r7}
 80016b2:	b085      	sub	sp, #20
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	6078      	str	r0, [r7, #4]
 80016b8:	687b      	ldr	r3, [r7, #4]
 80016ba:	f003 0307 	and.w	r3, r3, #7
 80016be:	60fb      	str	r3, [r7, #12]
 80016c0:	4b0c      	ldr	r3, [pc, #48]	@ (80016f4 <__NVIC_SetPriorityGrouping+0x44>)
 80016c2:	68db      	ldr	r3, [r3, #12]
 80016c4:	60bb      	str	r3, [r7, #8]
 80016c6:	68ba      	ldr	r2, [r7, #8]
 80016c8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80016cc:	4013      	ands	r3, r2
 80016ce:	60bb      	str	r3, [r7, #8]
 80016d0:	68fb      	ldr	r3, [r7, #12]
 80016d2:	021a      	lsls	r2, r3, #8
 80016d4:	68bb      	ldr	r3, [r7, #8]
 80016d6:	4313      	orrs	r3, r2
 80016d8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80016dc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80016e0:	60bb      	str	r3, [r7, #8]
 80016e2:	4a04      	ldr	r2, [pc, #16]	@ (80016f4 <__NVIC_SetPriorityGrouping+0x44>)
 80016e4:	68bb      	ldr	r3, [r7, #8]
 80016e6:	60d3      	str	r3, [r2, #12]
 80016e8:	bf00      	nop
 80016ea:	3714      	adds	r7, #20
 80016ec:	46bd      	mov	sp, r7
 80016ee:	bc80      	pop	{r7}
 80016f0:	4770      	bx	lr
 80016f2:	bf00      	nop
 80016f4:	e000ed00 	.word	0xe000ed00

080016f8 <__NVIC_GetPriorityGrouping>:
 80016f8:	b480      	push	{r7}
 80016fa:	af00      	add	r7, sp, #0
 80016fc:	4b04      	ldr	r3, [pc, #16]	@ (8001710 <__NVIC_GetPriorityGrouping+0x18>)
 80016fe:	68db      	ldr	r3, [r3, #12]
 8001700:	0a1b      	lsrs	r3, r3, #8
 8001702:	f003 0307 	and.w	r3, r3, #7
 8001706:	4618      	mov	r0, r3
 8001708:	46bd      	mov	sp, r7
 800170a:	bc80      	pop	{r7}
 800170c:	4770      	bx	lr
 800170e:	bf00      	nop
 8001710:	e000ed00 	.word	0xe000ed00

08001714 <__NVIC_EnableIRQ>:
 8001714:	b480      	push	{r7}
 8001716:	b083      	sub	sp, #12
 8001718:	af00      	add	r7, sp, #0
 800171a:	4603      	mov	r3, r0
 800171c:	71fb      	strb	r3, [r7, #7]
 800171e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001722:	2b00      	cmp	r3, #0
 8001724:	db0b      	blt.n	800173e <__NVIC_EnableIRQ+0x2a>
 8001726:	79fb      	ldrb	r3, [r7, #7]
 8001728:	f003 021f 	and.w	r2, r3, #31
 800172c:	4906      	ldr	r1, [pc, #24]	@ (8001748 <__NVIC_EnableIRQ+0x34>)
 800172e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001732:	095b      	lsrs	r3, r3, #5
 8001734:	2001      	movs	r0, #1
 8001736:	fa00 f202 	lsl.w	r2, r0, r2
 800173a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800173e:	bf00      	nop
 8001740:	370c      	adds	r7, #12
 8001742:	46bd      	mov	sp, r7
 8001744:	bc80      	pop	{r7}
 8001746:	4770      	bx	lr
 8001748:	e000e100 	.word	0xe000e100

0800174c <__NVIC_SetPriority>:
 800174c:	b480      	push	{r7}
 800174e:	b083      	sub	sp, #12
 8001750:	af00      	add	r7, sp, #0
 8001752:	4603      	mov	r3, r0
 8001754:	6039      	str	r1, [r7, #0]
 8001756:	71fb      	strb	r3, [r7, #7]
 8001758:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800175c:	2b00      	cmp	r3, #0
 800175e:	db0a      	blt.n	8001776 <__NVIC_SetPriority+0x2a>
 8001760:	683b      	ldr	r3, [r7, #0]
 8001762:	b2da      	uxtb	r2, r3
 8001764:	490c      	ldr	r1, [pc, #48]	@ (8001798 <__NVIC_SetPriority+0x4c>)
 8001766:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800176a:	0112      	lsls	r2, r2, #4
 800176c:	b2d2      	uxtb	r2, r2
 800176e:	440b      	add	r3, r1
 8001770:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001774:	e00a      	b.n	800178c <__NVIC_SetPriority+0x40>
 8001776:	683b      	ldr	r3, [r7, #0]
 8001778:	b2da      	uxtb	r2, r3
 800177a:	4908      	ldr	r1, [pc, #32]	@ (800179c <__NVIC_SetPriority+0x50>)
 800177c:	79fb      	ldrb	r3, [r7, #7]
 800177e:	f003 030f 	and.w	r3, r3, #15
 8001782:	3b04      	subs	r3, #4
 8001784:	0112      	lsls	r2, r2, #4
 8001786:	b2d2      	uxtb	r2, r2
 8001788:	440b      	add	r3, r1
 800178a:	761a      	strb	r2, [r3, #24]
 800178c:	bf00      	nop
 800178e:	370c      	adds	r7, #12
 8001790:	46bd      	mov	sp, r7
 8001792:	bc80      	pop	{r7}
 8001794:	4770      	bx	lr
 8001796:	bf00      	nop
 8001798:	e000e100 	.word	0xe000e100
 800179c:	e000ed00 	.word	0xe000ed00

080017a0 <NVIC_EncodePriority>:
 80017a0:	b480      	push	{r7}
 80017a2:	b089      	sub	sp, #36	@ 0x24
 80017a4:	af00      	add	r7, sp, #0
 80017a6:	60f8      	str	r0, [r7, #12]
 80017a8:	60b9      	str	r1, [r7, #8]
 80017aa:	607a      	str	r2, [r7, #4]
 80017ac:	68fb      	ldr	r3, [r7, #12]
 80017ae:	f003 0307 	and.w	r3, r3, #7
 80017b2:	61fb      	str	r3, [r7, #28]
 80017b4:	69fb      	ldr	r3, [r7, #28]
 80017b6:	f1c3 0307 	rsb	r3, r3, #7
 80017ba:	2b04      	cmp	r3, #4
 80017bc:	bf28      	it	cs
 80017be:	2304      	movcs	r3, #4
 80017c0:	61bb      	str	r3, [r7, #24]
 80017c2:	69fb      	ldr	r3, [r7, #28]
 80017c4:	3304      	adds	r3, #4
 80017c6:	2b06      	cmp	r3, #6
 80017c8:	d902      	bls.n	80017d0 <NVIC_EncodePriority+0x30>
 80017ca:	69fb      	ldr	r3, [r7, #28]
 80017cc:	3b03      	subs	r3, #3
 80017ce:	e000      	b.n	80017d2 <NVIC_EncodePriority+0x32>
 80017d0:	2300      	movs	r3, #0
 80017d2:	617b      	str	r3, [r7, #20]
 80017d4:	f04f 32ff 	mov.w	r2, #4294967295
 80017d8:	69bb      	ldr	r3, [r7, #24]
 80017da:	fa02 f303 	lsl.w	r3, r2, r3
 80017de:	43da      	mvns	r2, r3
 80017e0:	68bb      	ldr	r3, [r7, #8]
 80017e2:	401a      	ands	r2, r3
 80017e4:	697b      	ldr	r3, [r7, #20]
 80017e6:	409a      	lsls	r2, r3
 80017e8:	f04f 31ff 	mov.w	r1, #4294967295
 80017ec:	697b      	ldr	r3, [r7, #20]
 80017ee:	fa01 f303 	lsl.w	r3, r1, r3
 80017f2:	43d9      	mvns	r1, r3
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	400b      	ands	r3, r1
 80017f8:	4313      	orrs	r3, r2
 80017fa:	4618      	mov	r0, r3
 80017fc:	3724      	adds	r7, #36	@ 0x24
 80017fe:	46bd      	mov	sp, r7
 8001800:	bc80      	pop	{r7}
 8001802:	4770      	bx	lr

08001804 <SysTick_Config>:
 8001804:	b580      	push	{r7, lr}
 8001806:	b082      	sub	sp, #8
 8001808:	af00      	add	r7, sp, #0
 800180a:	6078      	str	r0, [r7, #4]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	3b01      	subs	r3, #1
 8001810:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001814:	d301      	bcc.n	800181a <SysTick_Config+0x16>
 8001816:	2301      	movs	r3, #1
 8001818:	e00f      	b.n	800183a <SysTick_Config+0x36>
 800181a:	4a0a      	ldr	r2, [pc, #40]	@ (8001844 <SysTick_Config+0x40>)
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	3b01      	subs	r3, #1
 8001820:	6053      	str	r3, [r2, #4]
 8001822:	210f      	movs	r1, #15
 8001824:	f04f 30ff 	mov.w	r0, #4294967295
 8001828:	f7ff ff90 	bl	800174c <__NVIC_SetPriority>
 800182c:	4b05      	ldr	r3, [pc, #20]	@ (8001844 <SysTick_Config+0x40>)
 800182e:	2200      	movs	r2, #0
 8001830:	609a      	str	r2, [r3, #8]
 8001832:	4b04      	ldr	r3, [pc, #16]	@ (8001844 <SysTick_Config+0x40>)
 8001834:	2207      	movs	r2, #7
 8001836:	601a      	str	r2, [r3, #0]
 8001838:	2300      	movs	r3, #0
 800183a:	4618      	mov	r0, r3
 800183c:	3708      	adds	r7, #8
 800183e:	46bd      	mov	sp, r7
 8001840:	bd80      	pop	{r7, pc}
 8001842:	bf00      	nop
 8001844:	e000e010 	.word	0xe000e010

08001848 <HAL_NVIC_SetPriorityGrouping>:
 8001848:	b580      	push	{r7, lr}
 800184a:	b082      	sub	sp, #8
 800184c:	af00      	add	r7, sp, #0
 800184e:	6078      	str	r0, [r7, #4]
 8001850:	6878      	ldr	r0, [r7, #4]
 8001852:	f7ff ff2d 	bl	80016b0 <__NVIC_SetPriorityGrouping>
 8001856:	bf00      	nop
 8001858:	3708      	adds	r7, #8
 800185a:	46bd      	mov	sp, r7
 800185c:	bd80      	pop	{r7, pc}

0800185e <HAL_NVIC_SetPriority>:
 800185e:	b580      	push	{r7, lr}
 8001860:	b086      	sub	sp, #24
 8001862:	af00      	add	r7, sp, #0
 8001864:	4603      	mov	r3, r0
 8001866:	60b9      	str	r1, [r7, #8]
 8001868:	607a      	str	r2, [r7, #4]
 800186a:	73fb      	strb	r3, [r7, #15]
 800186c:	2300      	movs	r3, #0
 800186e:	617b      	str	r3, [r7, #20]
 8001870:	f7ff ff42 	bl	80016f8 <__NVIC_GetPriorityGrouping>
 8001874:	6178      	str	r0, [r7, #20]
 8001876:	687a      	ldr	r2, [r7, #4]
 8001878:	68b9      	ldr	r1, [r7, #8]
 800187a:	6978      	ldr	r0, [r7, #20]
 800187c:	f7ff ff90 	bl	80017a0 <NVIC_EncodePriority>
 8001880:	4602      	mov	r2, r0
 8001882:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001886:	4611      	mov	r1, r2
 8001888:	4618      	mov	r0, r3
 800188a:	f7ff ff5f 	bl	800174c <__NVIC_SetPriority>
 800188e:	bf00      	nop
 8001890:	3718      	adds	r7, #24
 8001892:	46bd      	mov	sp, r7
 8001894:	bd80      	pop	{r7, pc}

08001896 <HAL_NVIC_EnableIRQ>:
 8001896:	b580      	push	{r7, lr}
 8001898:	b082      	sub	sp, #8
 800189a:	af00      	add	r7, sp, #0
 800189c:	4603      	mov	r3, r0
 800189e:	71fb      	strb	r3, [r7, #7]
 80018a0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80018a4:	4618      	mov	r0, r3
 80018a6:	f7ff ff35 	bl	8001714 <__NVIC_EnableIRQ>
 80018aa:	bf00      	nop
 80018ac:	3708      	adds	r7, #8
 80018ae:	46bd      	mov	sp, r7
 80018b0:	bd80      	pop	{r7, pc}

080018b2 <HAL_SYSTICK_Config>:
 80018b2:	b580      	push	{r7, lr}
 80018b4:	b082      	sub	sp, #8
 80018b6:	af00      	add	r7, sp, #0
 80018b8:	6078      	str	r0, [r7, #4]
 80018ba:	6878      	ldr	r0, [r7, #4]
 80018bc:	f7ff ffa2 	bl	8001804 <SysTick_Config>
 80018c0:	4603      	mov	r3, r0
 80018c2:	4618      	mov	r0, r3
 80018c4:	3708      	adds	r7, #8
 80018c6:	46bd      	mov	sp, r7
 80018c8:	bd80      	pop	{r7, pc}

080018ca <HAL_DMA_Abort>:
 80018ca:	b480      	push	{r7}
 80018cc:	b085      	sub	sp, #20
 80018ce:	af00      	add	r7, sp, #0
 80018d0:	6078      	str	r0, [r7, #4]
 80018d2:	2300      	movs	r3, #0
 80018d4:	73fb      	strb	r3, [r7, #15]
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80018dc:	b2db      	uxtb	r3, r3
 80018de:	2b02      	cmp	r3, #2
 80018e0:	d008      	beq.n	80018f4 <HAL_DMA_Abort+0x2a>
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	2204      	movs	r2, #4
 80018e6:	639a      	str	r2, [r3, #56]	@ 0x38
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	2200      	movs	r2, #0
 80018ec:	f883 2020 	strb.w	r2, [r3, #32]
 80018f0:	2301      	movs	r3, #1
 80018f2:	e020      	b.n	8001936 <HAL_DMA_Abort+0x6c>
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	681a      	ldr	r2, [r3, #0]
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	f022 020e 	bic.w	r2, r2, #14
 8001902:	601a      	str	r2, [r3, #0]
 8001904:	687b      	ldr	r3, [r7, #4]
 8001906:	681b      	ldr	r3, [r3, #0]
 8001908:	681a      	ldr	r2, [r3, #0]
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	f022 0201 	bic.w	r2, r2, #1
 8001912:	601a      	str	r2, [r3, #0]
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800191c:	2101      	movs	r1, #1
 800191e:	fa01 f202 	lsl.w	r2, r1, r2
 8001922:	605a      	str	r2, [r3, #4]
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	2201      	movs	r2, #1
 8001928:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	2200      	movs	r2, #0
 8001930:	f883 2020 	strb.w	r2, [r3, #32]
 8001934:	7bfb      	ldrb	r3, [r7, #15]
 8001936:	4618      	mov	r0, r3
 8001938:	3714      	adds	r7, #20
 800193a:	46bd      	mov	sp, r7
 800193c:	bc80      	pop	{r7}
 800193e:	4770      	bx	lr

08001940 <HAL_DMA_Abort_IT>:
 8001940:	b580      	push	{r7, lr}
 8001942:	b084      	sub	sp, #16
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
 8001948:	2300      	movs	r3, #0
 800194a:	73fb      	strb	r3, [r7, #15]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8001952:	b2db      	uxtb	r3, r3
 8001954:	2b02      	cmp	r3, #2
 8001956:	d005      	beq.n	8001964 <HAL_DMA_Abort_IT+0x24>
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	2204      	movs	r2, #4
 800195c:	639a      	str	r2, [r3, #56]	@ 0x38
 800195e:	2301      	movs	r3, #1
 8001960:	73fb      	strb	r3, [r7, #15]
 8001962:	e051      	b.n	8001a08 <HAL_DMA_Abort_IT+0xc8>
 8001964:	687b      	ldr	r3, [r7, #4]
 8001966:	681b      	ldr	r3, [r3, #0]
 8001968:	681a      	ldr	r2, [r3, #0]
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	f022 020e 	bic.w	r2, r2, #14
 8001972:	601a      	str	r2, [r3, #0]
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	681a      	ldr	r2, [r3, #0]
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	f022 0201 	bic.w	r2, r2, #1
 8001982:	601a      	str	r2, [r3, #0]
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	4a22      	ldr	r2, [pc, #136]	@ (8001a14 <HAL_DMA_Abort_IT+0xd4>)
 800198a:	4293      	cmp	r3, r2
 800198c:	d029      	beq.n	80019e2 <HAL_DMA_Abort_IT+0xa2>
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	681b      	ldr	r3, [r3, #0]
 8001992:	4a21      	ldr	r2, [pc, #132]	@ (8001a18 <HAL_DMA_Abort_IT+0xd8>)
 8001994:	4293      	cmp	r3, r2
 8001996:	d022      	beq.n	80019de <HAL_DMA_Abort_IT+0x9e>
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	681b      	ldr	r3, [r3, #0]
 800199c:	4a1f      	ldr	r2, [pc, #124]	@ (8001a1c <HAL_DMA_Abort_IT+0xdc>)
 800199e:	4293      	cmp	r3, r2
 80019a0:	d01a      	beq.n	80019d8 <HAL_DMA_Abort_IT+0x98>
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	681b      	ldr	r3, [r3, #0]
 80019a6:	4a1e      	ldr	r2, [pc, #120]	@ (8001a20 <HAL_DMA_Abort_IT+0xe0>)
 80019a8:	4293      	cmp	r3, r2
 80019aa:	d012      	beq.n	80019d2 <HAL_DMA_Abort_IT+0x92>
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	4a1c      	ldr	r2, [pc, #112]	@ (8001a24 <HAL_DMA_Abort_IT+0xe4>)
 80019b2:	4293      	cmp	r3, r2
 80019b4:	d00a      	beq.n	80019cc <HAL_DMA_Abort_IT+0x8c>
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	4a1b      	ldr	r2, [pc, #108]	@ (8001a28 <HAL_DMA_Abort_IT+0xe8>)
 80019bc:	4293      	cmp	r3, r2
 80019be:	d102      	bne.n	80019c6 <HAL_DMA_Abort_IT+0x86>
 80019c0:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80019c4:	e00e      	b.n	80019e4 <HAL_DMA_Abort_IT+0xa4>
 80019c6:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80019ca:	e00b      	b.n	80019e4 <HAL_DMA_Abort_IT+0xa4>
 80019cc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80019d0:	e008      	b.n	80019e4 <HAL_DMA_Abort_IT+0xa4>
 80019d2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80019d6:	e005      	b.n	80019e4 <HAL_DMA_Abort_IT+0xa4>
 80019d8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80019dc:	e002      	b.n	80019e4 <HAL_DMA_Abort_IT+0xa4>
 80019de:	2310      	movs	r3, #16
 80019e0:	e000      	b.n	80019e4 <HAL_DMA_Abort_IT+0xa4>
 80019e2:	2301      	movs	r3, #1
 80019e4:	4a11      	ldr	r2, [pc, #68]	@ (8001a2c <HAL_DMA_Abort_IT+0xec>)
 80019e6:	6053      	str	r3, [r2, #4]
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	2201      	movs	r2, #1
 80019ec:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	2200      	movs	r2, #0
 80019f4:	f883 2020 	strb.w	r2, [r3, #32]
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80019fc:	2b00      	cmp	r3, #0
 80019fe:	d003      	beq.n	8001a08 <HAL_DMA_Abort_IT+0xc8>
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001a04:	6878      	ldr	r0, [r7, #4]
 8001a06:	4798      	blx	r3
 8001a08:	7bfb      	ldrb	r3, [r7, #15]
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	3710      	adds	r7, #16
 8001a0e:	46bd      	mov	sp, r7
 8001a10:	bd80      	pop	{r7, pc}
 8001a12:	bf00      	nop
 8001a14:	40020008 	.word	0x40020008
 8001a18:	4002001c 	.word	0x4002001c
 8001a1c:	40020030 	.word	0x40020030
 8001a20:	40020044 	.word	0x40020044
 8001a24:	40020058 	.word	0x40020058
 8001a28:	4002006c 	.word	0x4002006c
 8001a2c:	40020000 	.word	0x40020000

08001a30 <HAL_GPIO_Init>:
 8001a30:	b480      	push	{r7}
 8001a32:	b08b      	sub	sp, #44	@ 0x2c
 8001a34:	af00      	add	r7, sp, #0
 8001a36:	6078      	str	r0, [r7, #4]
 8001a38:	6039      	str	r1, [r7, #0]
 8001a3a:	2300      	movs	r3, #0
 8001a3c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a3e:	2300      	movs	r3, #0
 8001a40:	623b      	str	r3, [r7, #32]
 8001a42:	e169      	b.n	8001d18 <HAL_GPIO_Init+0x2e8>
 8001a44:	2201      	movs	r2, #1
 8001a46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a48:	fa02 f303 	lsl.w	r3, r2, r3
 8001a4c:	61fb      	str	r3, [r7, #28]
 8001a4e:	683b      	ldr	r3, [r7, #0]
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	69fa      	ldr	r2, [r7, #28]
 8001a54:	4013      	ands	r3, r2
 8001a56:	61bb      	str	r3, [r7, #24]
 8001a58:	69ba      	ldr	r2, [r7, #24]
 8001a5a:	69fb      	ldr	r3, [r7, #28]
 8001a5c:	429a      	cmp	r2, r3
 8001a5e:	f040 8158 	bne.w	8001d12 <HAL_GPIO_Init+0x2e2>
 8001a62:	683b      	ldr	r3, [r7, #0]
 8001a64:	685b      	ldr	r3, [r3, #4]
 8001a66:	4a9a      	ldr	r2, [pc, #616]	@ (8001cd0 <HAL_GPIO_Init+0x2a0>)
 8001a68:	4293      	cmp	r3, r2
 8001a6a:	d05e      	beq.n	8001b2a <HAL_GPIO_Init+0xfa>
 8001a6c:	4a98      	ldr	r2, [pc, #608]	@ (8001cd0 <HAL_GPIO_Init+0x2a0>)
 8001a6e:	4293      	cmp	r3, r2
 8001a70:	d875      	bhi.n	8001b5e <HAL_GPIO_Init+0x12e>
 8001a72:	4a98      	ldr	r2, [pc, #608]	@ (8001cd4 <HAL_GPIO_Init+0x2a4>)
 8001a74:	4293      	cmp	r3, r2
 8001a76:	d058      	beq.n	8001b2a <HAL_GPIO_Init+0xfa>
 8001a78:	4a96      	ldr	r2, [pc, #600]	@ (8001cd4 <HAL_GPIO_Init+0x2a4>)
 8001a7a:	4293      	cmp	r3, r2
 8001a7c:	d86f      	bhi.n	8001b5e <HAL_GPIO_Init+0x12e>
 8001a7e:	4a96      	ldr	r2, [pc, #600]	@ (8001cd8 <HAL_GPIO_Init+0x2a8>)
 8001a80:	4293      	cmp	r3, r2
 8001a82:	d052      	beq.n	8001b2a <HAL_GPIO_Init+0xfa>
 8001a84:	4a94      	ldr	r2, [pc, #592]	@ (8001cd8 <HAL_GPIO_Init+0x2a8>)
 8001a86:	4293      	cmp	r3, r2
 8001a88:	d869      	bhi.n	8001b5e <HAL_GPIO_Init+0x12e>
 8001a8a:	4a94      	ldr	r2, [pc, #592]	@ (8001cdc <HAL_GPIO_Init+0x2ac>)
 8001a8c:	4293      	cmp	r3, r2
 8001a8e:	d04c      	beq.n	8001b2a <HAL_GPIO_Init+0xfa>
 8001a90:	4a92      	ldr	r2, [pc, #584]	@ (8001cdc <HAL_GPIO_Init+0x2ac>)
 8001a92:	4293      	cmp	r3, r2
 8001a94:	d863      	bhi.n	8001b5e <HAL_GPIO_Init+0x12e>
 8001a96:	4a92      	ldr	r2, [pc, #584]	@ (8001ce0 <HAL_GPIO_Init+0x2b0>)
 8001a98:	4293      	cmp	r3, r2
 8001a9a:	d046      	beq.n	8001b2a <HAL_GPIO_Init+0xfa>
 8001a9c:	4a90      	ldr	r2, [pc, #576]	@ (8001ce0 <HAL_GPIO_Init+0x2b0>)
 8001a9e:	4293      	cmp	r3, r2
 8001aa0:	d85d      	bhi.n	8001b5e <HAL_GPIO_Init+0x12e>
 8001aa2:	2b12      	cmp	r3, #18
 8001aa4:	d82a      	bhi.n	8001afc <HAL_GPIO_Init+0xcc>
 8001aa6:	2b12      	cmp	r3, #18
 8001aa8:	d859      	bhi.n	8001b5e <HAL_GPIO_Init+0x12e>
 8001aaa:	a201      	add	r2, pc, #4	@ (adr r2, 8001ab0 <HAL_GPIO_Init+0x80>)
 8001aac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001ab0:	08001b2b 	.word	0x08001b2b
 8001ab4:	08001b05 	.word	0x08001b05
 8001ab8:	08001b17 	.word	0x08001b17
 8001abc:	08001b59 	.word	0x08001b59
 8001ac0:	08001b5f 	.word	0x08001b5f
 8001ac4:	08001b5f 	.word	0x08001b5f
 8001ac8:	08001b5f 	.word	0x08001b5f
 8001acc:	08001b5f 	.word	0x08001b5f
 8001ad0:	08001b5f 	.word	0x08001b5f
 8001ad4:	08001b5f 	.word	0x08001b5f
 8001ad8:	08001b5f 	.word	0x08001b5f
 8001adc:	08001b5f 	.word	0x08001b5f
 8001ae0:	08001b5f 	.word	0x08001b5f
 8001ae4:	08001b5f 	.word	0x08001b5f
 8001ae8:	08001b5f 	.word	0x08001b5f
 8001aec:	08001b5f 	.word	0x08001b5f
 8001af0:	08001b5f 	.word	0x08001b5f
 8001af4:	08001b0d 	.word	0x08001b0d
 8001af8:	08001b21 	.word	0x08001b21
 8001afc:	4a79      	ldr	r2, [pc, #484]	@ (8001ce4 <HAL_GPIO_Init+0x2b4>)
 8001afe:	4293      	cmp	r3, r2
 8001b00:	d013      	beq.n	8001b2a <HAL_GPIO_Init+0xfa>
 8001b02:	e02c      	b.n	8001b5e <HAL_GPIO_Init+0x12e>
 8001b04:	683b      	ldr	r3, [r7, #0]
 8001b06:	68db      	ldr	r3, [r3, #12]
 8001b08:	623b      	str	r3, [r7, #32]
 8001b0a:	e029      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b0c:	683b      	ldr	r3, [r7, #0]
 8001b0e:	68db      	ldr	r3, [r3, #12]
 8001b10:	3304      	adds	r3, #4
 8001b12:	623b      	str	r3, [r7, #32]
 8001b14:	e024      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b16:	683b      	ldr	r3, [r7, #0]
 8001b18:	68db      	ldr	r3, [r3, #12]
 8001b1a:	3308      	adds	r3, #8
 8001b1c:	623b      	str	r3, [r7, #32]
 8001b1e:	e01f      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b20:	683b      	ldr	r3, [r7, #0]
 8001b22:	68db      	ldr	r3, [r3, #12]
 8001b24:	330c      	adds	r3, #12
 8001b26:	623b      	str	r3, [r7, #32]
 8001b28:	e01a      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b2a:	683b      	ldr	r3, [r7, #0]
 8001b2c:	689b      	ldr	r3, [r3, #8]
 8001b2e:	2b00      	cmp	r3, #0
 8001b30:	d102      	bne.n	8001b38 <HAL_GPIO_Init+0x108>
 8001b32:	2304      	movs	r3, #4
 8001b34:	623b      	str	r3, [r7, #32]
 8001b36:	e013      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b38:	683b      	ldr	r3, [r7, #0]
 8001b3a:	689b      	ldr	r3, [r3, #8]
 8001b3c:	2b01      	cmp	r3, #1
 8001b3e:	d105      	bne.n	8001b4c <HAL_GPIO_Init+0x11c>
 8001b40:	2308      	movs	r3, #8
 8001b42:	623b      	str	r3, [r7, #32]
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	69fa      	ldr	r2, [r7, #28]
 8001b48:	611a      	str	r2, [r3, #16]
 8001b4a:	e009      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b4c:	2308      	movs	r3, #8
 8001b4e:	623b      	str	r3, [r7, #32]
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	69fa      	ldr	r2, [r7, #28]
 8001b54:	615a      	str	r2, [r3, #20]
 8001b56:	e003      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b58:	2300      	movs	r3, #0
 8001b5a:	623b      	str	r3, [r7, #32]
 8001b5c:	e000      	b.n	8001b60 <HAL_GPIO_Init+0x130>
 8001b5e:	bf00      	nop
 8001b60:	69bb      	ldr	r3, [r7, #24]
 8001b62:	2bff      	cmp	r3, #255	@ 0xff
 8001b64:	d801      	bhi.n	8001b6a <HAL_GPIO_Init+0x13a>
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	e001      	b.n	8001b6e <HAL_GPIO_Init+0x13e>
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	3304      	adds	r3, #4
 8001b6e:	617b      	str	r3, [r7, #20]
 8001b70:	69bb      	ldr	r3, [r7, #24]
 8001b72:	2bff      	cmp	r3, #255	@ 0xff
 8001b74:	d802      	bhi.n	8001b7c <HAL_GPIO_Init+0x14c>
 8001b76:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b78:	009b      	lsls	r3, r3, #2
 8001b7a:	e002      	b.n	8001b82 <HAL_GPIO_Init+0x152>
 8001b7c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b7e:	3b08      	subs	r3, #8
 8001b80:	009b      	lsls	r3, r3, #2
 8001b82:	613b      	str	r3, [r7, #16]
 8001b84:	697b      	ldr	r3, [r7, #20]
 8001b86:	681a      	ldr	r2, [r3, #0]
 8001b88:	210f      	movs	r1, #15
 8001b8a:	693b      	ldr	r3, [r7, #16]
 8001b8c:	fa01 f303 	lsl.w	r3, r1, r3
 8001b90:	43db      	mvns	r3, r3
 8001b92:	401a      	ands	r2, r3
 8001b94:	6a39      	ldr	r1, [r7, #32]
 8001b96:	693b      	ldr	r3, [r7, #16]
 8001b98:	fa01 f303 	lsl.w	r3, r1, r3
 8001b9c:	431a      	orrs	r2, r3
 8001b9e:	697b      	ldr	r3, [r7, #20]
 8001ba0:	601a      	str	r2, [r3, #0]
 8001ba2:	683b      	ldr	r3, [r7, #0]
 8001ba4:	685b      	ldr	r3, [r3, #4]
 8001ba6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	f000 80b1 	beq.w	8001d12 <HAL_GPIO_Init+0x2e2>
 8001bb0:	4b4d      	ldr	r3, [pc, #308]	@ (8001ce8 <HAL_GPIO_Init+0x2b8>)
 8001bb2:	699b      	ldr	r3, [r3, #24]
 8001bb4:	4a4c      	ldr	r2, [pc, #304]	@ (8001ce8 <HAL_GPIO_Init+0x2b8>)
 8001bb6:	f043 0301 	orr.w	r3, r3, #1
 8001bba:	6193      	str	r3, [r2, #24]
 8001bbc:	4b4a      	ldr	r3, [pc, #296]	@ (8001ce8 <HAL_GPIO_Init+0x2b8>)
 8001bbe:	699b      	ldr	r3, [r3, #24]
 8001bc0:	f003 0301 	and.w	r3, r3, #1
 8001bc4:	60bb      	str	r3, [r7, #8]
 8001bc6:	68bb      	ldr	r3, [r7, #8]
 8001bc8:	4a48      	ldr	r2, [pc, #288]	@ (8001cec <HAL_GPIO_Init+0x2bc>)
 8001bca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bcc:	089b      	lsrs	r3, r3, #2
 8001bce:	3302      	adds	r3, #2
 8001bd0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001bd4:	60fb      	str	r3, [r7, #12]
 8001bd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bd8:	f003 0303 	and.w	r3, r3, #3
 8001bdc:	009b      	lsls	r3, r3, #2
 8001bde:	220f      	movs	r2, #15
 8001be0:	fa02 f303 	lsl.w	r3, r2, r3
 8001be4:	43db      	mvns	r3, r3
 8001be6:	68fa      	ldr	r2, [r7, #12]
 8001be8:	4013      	ands	r3, r2
 8001bea:	60fb      	str	r3, [r7, #12]
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	4a40      	ldr	r2, [pc, #256]	@ (8001cf0 <HAL_GPIO_Init+0x2c0>)
 8001bf0:	4293      	cmp	r3, r2
 8001bf2:	d013      	beq.n	8001c1c <HAL_GPIO_Init+0x1ec>
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	4a3f      	ldr	r2, [pc, #252]	@ (8001cf4 <HAL_GPIO_Init+0x2c4>)
 8001bf8:	4293      	cmp	r3, r2
 8001bfa:	d00d      	beq.n	8001c18 <HAL_GPIO_Init+0x1e8>
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	4a3e      	ldr	r2, [pc, #248]	@ (8001cf8 <HAL_GPIO_Init+0x2c8>)
 8001c00:	4293      	cmp	r3, r2
 8001c02:	d007      	beq.n	8001c14 <HAL_GPIO_Init+0x1e4>
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	4a3d      	ldr	r2, [pc, #244]	@ (8001cfc <HAL_GPIO_Init+0x2cc>)
 8001c08:	4293      	cmp	r3, r2
 8001c0a:	d101      	bne.n	8001c10 <HAL_GPIO_Init+0x1e0>
 8001c0c:	2303      	movs	r3, #3
 8001c0e:	e006      	b.n	8001c1e <HAL_GPIO_Init+0x1ee>
 8001c10:	2304      	movs	r3, #4
 8001c12:	e004      	b.n	8001c1e <HAL_GPIO_Init+0x1ee>
 8001c14:	2302      	movs	r3, #2
 8001c16:	e002      	b.n	8001c1e <HAL_GPIO_Init+0x1ee>
 8001c18:	2301      	movs	r3, #1
 8001c1a:	e000      	b.n	8001c1e <HAL_GPIO_Init+0x1ee>
 8001c1c:	2300      	movs	r3, #0
 8001c1e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001c20:	f002 0203 	and.w	r2, r2, #3
 8001c24:	0092      	lsls	r2, r2, #2
 8001c26:	4093      	lsls	r3, r2
 8001c28:	68fa      	ldr	r2, [r7, #12]
 8001c2a:	4313      	orrs	r3, r2
 8001c2c:	60fb      	str	r3, [r7, #12]
 8001c2e:	492f      	ldr	r1, [pc, #188]	@ (8001cec <HAL_GPIO_Init+0x2bc>)
 8001c30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c32:	089b      	lsrs	r3, r3, #2
 8001c34:	3302      	adds	r3, #2
 8001c36:	68fa      	ldr	r2, [r7, #12]
 8001c38:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c3c:	683b      	ldr	r3, [r7, #0]
 8001c3e:	685b      	ldr	r3, [r3, #4]
 8001c40:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d006      	beq.n	8001c56 <HAL_GPIO_Init+0x226>
 8001c48:	4b2d      	ldr	r3, [pc, #180]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c4a:	689a      	ldr	r2, [r3, #8]
 8001c4c:	492c      	ldr	r1, [pc, #176]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c4e:	69bb      	ldr	r3, [r7, #24]
 8001c50:	4313      	orrs	r3, r2
 8001c52:	608b      	str	r3, [r1, #8]
 8001c54:	e006      	b.n	8001c64 <HAL_GPIO_Init+0x234>
 8001c56:	4b2a      	ldr	r3, [pc, #168]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c58:	689a      	ldr	r2, [r3, #8]
 8001c5a:	69bb      	ldr	r3, [r7, #24]
 8001c5c:	43db      	mvns	r3, r3
 8001c5e:	4928      	ldr	r1, [pc, #160]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c60:	4013      	ands	r3, r2
 8001c62:	608b      	str	r3, [r1, #8]
 8001c64:	683b      	ldr	r3, [r7, #0]
 8001c66:	685b      	ldr	r3, [r3, #4]
 8001c68:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d006      	beq.n	8001c7e <HAL_GPIO_Init+0x24e>
 8001c70:	4b23      	ldr	r3, [pc, #140]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c72:	68da      	ldr	r2, [r3, #12]
 8001c74:	4922      	ldr	r1, [pc, #136]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c76:	69bb      	ldr	r3, [r7, #24]
 8001c78:	4313      	orrs	r3, r2
 8001c7a:	60cb      	str	r3, [r1, #12]
 8001c7c:	e006      	b.n	8001c8c <HAL_GPIO_Init+0x25c>
 8001c7e:	4b20      	ldr	r3, [pc, #128]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c80:	68da      	ldr	r2, [r3, #12]
 8001c82:	69bb      	ldr	r3, [r7, #24]
 8001c84:	43db      	mvns	r3, r3
 8001c86:	491e      	ldr	r1, [pc, #120]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c88:	4013      	ands	r3, r2
 8001c8a:	60cb      	str	r3, [r1, #12]
 8001c8c:	683b      	ldr	r3, [r7, #0]
 8001c8e:	685b      	ldr	r3, [r3, #4]
 8001c90:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	d006      	beq.n	8001ca6 <HAL_GPIO_Init+0x276>
 8001c98:	4b19      	ldr	r3, [pc, #100]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c9a:	685a      	ldr	r2, [r3, #4]
 8001c9c:	4918      	ldr	r1, [pc, #96]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001c9e:	69bb      	ldr	r3, [r7, #24]
 8001ca0:	4313      	orrs	r3, r2
 8001ca2:	604b      	str	r3, [r1, #4]
 8001ca4:	e006      	b.n	8001cb4 <HAL_GPIO_Init+0x284>
 8001ca6:	4b16      	ldr	r3, [pc, #88]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001ca8:	685a      	ldr	r2, [r3, #4]
 8001caa:	69bb      	ldr	r3, [r7, #24]
 8001cac:	43db      	mvns	r3, r3
 8001cae:	4914      	ldr	r1, [pc, #80]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001cb0:	4013      	ands	r3, r2
 8001cb2:	604b      	str	r3, [r1, #4]
 8001cb4:	683b      	ldr	r3, [r7, #0]
 8001cb6:	685b      	ldr	r3, [r3, #4]
 8001cb8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d021      	beq.n	8001d04 <HAL_GPIO_Init+0x2d4>
 8001cc0:	4b0f      	ldr	r3, [pc, #60]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001cc2:	681a      	ldr	r2, [r3, #0]
 8001cc4:	490e      	ldr	r1, [pc, #56]	@ (8001d00 <HAL_GPIO_Init+0x2d0>)
 8001cc6:	69bb      	ldr	r3, [r7, #24]
 8001cc8:	4313      	orrs	r3, r2
 8001cca:	600b      	str	r3, [r1, #0]
 8001ccc:	e021      	b.n	8001d12 <HAL_GPIO_Init+0x2e2>
 8001cce:	bf00      	nop
 8001cd0:	10320000 	.word	0x10320000
 8001cd4:	10310000 	.word	0x10310000
 8001cd8:	10220000 	.word	0x10220000
 8001cdc:	10210000 	.word	0x10210000
 8001ce0:	10120000 	.word	0x10120000
 8001ce4:	10110000 	.word	0x10110000
 8001ce8:	40021000 	.word	0x40021000
 8001cec:	40010000 	.word	0x40010000
 8001cf0:	40010800 	.word	0x40010800
 8001cf4:	40010c00 	.word	0x40010c00
 8001cf8:	40011000 	.word	0x40011000
 8001cfc:	40011400 	.word	0x40011400
 8001d00:	40010400 	.word	0x40010400
 8001d04:	4b0b      	ldr	r3, [pc, #44]	@ (8001d34 <HAL_GPIO_Init+0x304>)
 8001d06:	681a      	ldr	r2, [r3, #0]
 8001d08:	69bb      	ldr	r3, [r7, #24]
 8001d0a:	43db      	mvns	r3, r3
 8001d0c:	4909      	ldr	r1, [pc, #36]	@ (8001d34 <HAL_GPIO_Init+0x304>)
 8001d0e:	4013      	ands	r3, r2
 8001d10:	600b      	str	r3, [r1, #0]
 8001d12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d14:	3301      	adds	r3, #1
 8001d16:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d18:	683b      	ldr	r3, [r7, #0]
 8001d1a:	681a      	ldr	r2, [r3, #0]
 8001d1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d1e:	fa22 f303 	lsr.w	r3, r2, r3
 8001d22:	2b00      	cmp	r3, #0
 8001d24:	f47f ae8e 	bne.w	8001a44 <HAL_GPIO_Init+0x14>
 8001d28:	bf00      	nop
 8001d2a:	bf00      	nop
 8001d2c:	372c      	adds	r7, #44	@ 0x2c
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	bc80      	pop	{r7}
 8001d32:	4770      	bx	lr
 8001d34:	40010400 	.word	0x40010400

08001d38 <HAL_GPIO_ReadPin>:
 8001d38:	b480      	push	{r7}
 8001d3a:	b085      	sub	sp, #20
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
 8001d40:	460b      	mov	r3, r1
 8001d42:	807b      	strh	r3, [r7, #2]
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	689a      	ldr	r2, [r3, #8]
 8001d48:	887b      	ldrh	r3, [r7, #2]
 8001d4a:	4013      	ands	r3, r2
 8001d4c:	2b00      	cmp	r3, #0
 8001d4e:	d002      	beq.n	8001d56 <HAL_GPIO_ReadPin+0x1e>
 8001d50:	2301      	movs	r3, #1
 8001d52:	73fb      	strb	r3, [r7, #15]
 8001d54:	e001      	b.n	8001d5a <HAL_GPIO_ReadPin+0x22>
 8001d56:	2300      	movs	r3, #0
 8001d58:	73fb      	strb	r3, [r7, #15]
 8001d5a:	7bfb      	ldrb	r3, [r7, #15]
 8001d5c:	4618      	mov	r0, r3
 8001d5e:	3714      	adds	r7, #20
 8001d60:	46bd      	mov	sp, r7
 8001d62:	bc80      	pop	{r7}
 8001d64:	4770      	bx	lr

08001d66 <HAL_GPIO_WritePin>:
 8001d66:	b480      	push	{r7}
 8001d68:	b083      	sub	sp, #12
 8001d6a:	af00      	add	r7, sp, #0
 8001d6c:	6078      	str	r0, [r7, #4]
 8001d6e:	460b      	mov	r3, r1
 8001d70:	807b      	strh	r3, [r7, #2]
 8001d72:	4613      	mov	r3, r2
 8001d74:	707b      	strb	r3, [r7, #1]
 8001d76:	787b      	ldrb	r3, [r7, #1]
 8001d78:	2b00      	cmp	r3, #0
 8001d7a:	d003      	beq.n	8001d84 <HAL_GPIO_WritePin+0x1e>
 8001d7c:	887a      	ldrh	r2, [r7, #2]
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	611a      	str	r2, [r3, #16]
 8001d82:	e003      	b.n	8001d8c <HAL_GPIO_WritePin+0x26>
 8001d84:	887b      	ldrh	r3, [r7, #2]
 8001d86:	041a      	lsls	r2, r3, #16
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	611a      	str	r2, [r3, #16]
 8001d8c:	bf00      	nop
 8001d8e:	370c      	adds	r7, #12
 8001d90:	46bd      	mov	sp, r7
 8001d92:	bc80      	pop	{r7}
 8001d94:	4770      	bx	lr
	...

08001d98 <HAL_GPIO_EXTI_IRQHandler>:
 8001d98:	b580      	push	{r7, lr}
 8001d9a:	b082      	sub	sp, #8
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	4603      	mov	r3, r0
 8001da0:	80fb      	strh	r3, [r7, #6]
 8001da2:	4b08      	ldr	r3, [pc, #32]	@ (8001dc4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001da4:	695a      	ldr	r2, [r3, #20]
 8001da6:	88fb      	ldrh	r3, [r7, #6]
 8001da8:	4013      	ands	r3, r2
 8001daa:	2b00      	cmp	r3, #0
 8001dac:	d006      	beq.n	8001dbc <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001dae:	4a05      	ldr	r2, [pc, #20]	@ (8001dc4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001db0:	88fb      	ldrh	r3, [r7, #6]
 8001db2:	6153      	str	r3, [r2, #20]
 8001db4:	88fb      	ldrh	r3, [r7, #6]
 8001db6:	4618      	mov	r0, r3
 8001db8:	f000 f806 	bl	8001dc8 <HAL_GPIO_EXTI_Callback>
 8001dbc:	bf00      	nop
 8001dbe:	3708      	adds	r7, #8
 8001dc0:	46bd      	mov	sp, r7
 8001dc2:	bd80      	pop	{r7, pc}
 8001dc4:	40010400 	.word	0x40010400

08001dc8 <HAL_GPIO_EXTI_Callback>:
 8001dc8:	b480      	push	{r7}
 8001dca:	b083      	sub	sp, #12
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	4603      	mov	r3, r0
 8001dd0:	80fb      	strh	r3, [r7, #6]
 8001dd2:	bf00      	nop
 8001dd4:	370c      	adds	r7, #12
 8001dd6:	46bd      	mov	sp, r7
 8001dd8:	bc80      	pop	{r7}
 8001dda:	4770      	bx	lr

08001ddc <HAL_RCC_OscConfig>:
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	b086      	sub	sp, #24
 8001de0:	af00      	add	r7, sp, #0
 8001de2:	6078      	str	r0, [r7, #4]
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	2b00      	cmp	r3, #0
 8001de8:	d101      	bne.n	8001dee <HAL_RCC_OscConfig+0x12>
 8001dea:	2301      	movs	r3, #1
 8001dec:	e272      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	681b      	ldr	r3, [r3, #0]
 8001df2:	f003 0301 	and.w	r3, r3, #1
 8001df6:	2b00      	cmp	r3, #0
 8001df8:	f000 8087 	beq.w	8001f0a <HAL_RCC_OscConfig+0x12e>
 8001dfc:	4b92      	ldr	r3, [pc, #584]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001dfe:	685b      	ldr	r3, [r3, #4]
 8001e00:	f003 030c 	and.w	r3, r3, #12
 8001e04:	2b04      	cmp	r3, #4
 8001e06:	d00c      	beq.n	8001e22 <HAL_RCC_OscConfig+0x46>
 8001e08:	4b8f      	ldr	r3, [pc, #572]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e0a:	685b      	ldr	r3, [r3, #4]
 8001e0c:	f003 030c 	and.w	r3, r3, #12
 8001e10:	2b08      	cmp	r3, #8
 8001e12:	d112      	bne.n	8001e3a <HAL_RCC_OscConfig+0x5e>
 8001e14:	4b8c      	ldr	r3, [pc, #560]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e16:	685b      	ldr	r3, [r3, #4]
 8001e18:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001e1c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001e20:	d10b      	bne.n	8001e3a <HAL_RCC_OscConfig+0x5e>
 8001e22:	4b89      	ldr	r3, [pc, #548]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e2a:	2b00      	cmp	r3, #0
 8001e2c:	d06c      	beq.n	8001f08 <HAL_RCC_OscConfig+0x12c>
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	685b      	ldr	r3, [r3, #4]
 8001e32:	2b00      	cmp	r3, #0
 8001e34:	d168      	bne.n	8001f08 <HAL_RCC_OscConfig+0x12c>
 8001e36:	2301      	movs	r3, #1
 8001e38:	e24c      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	685b      	ldr	r3, [r3, #4]
 8001e3e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001e42:	d106      	bne.n	8001e52 <HAL_RCC_OscConfig+0x76>
 8001e44:	4b80      	ldr	r3, [pc, #512]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	4a7f      	ldr	r2, [pc, #508]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e4a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001e4e:	6013      	str	r3, [r2, #0]
 8001e50:	e02e      	b.n	8001eb0 <HAL_RCC_OscConfig+0xd4>
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	685b      	ldr	r3, [r3, #4]
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d10c      	bne.n	8001e74 <HAL_RCC_OscConfig+0x98>
 8001e5a:	4b7b      	ldr	r3, [pc, #492]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	4a7a      	ldr	r2, [pc, #488]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e60:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001e64:	6013      	str	r3, [r2, #0]
 8001e66:	4b78      	ldr	r3, [pc, #480]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	4a77      	ldr	r2, [pc, #476]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e6c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001e70:	6013      	str	r3, [r2, #0]
 8001e72:	e01d      	b.n	8001eb0 <HAL_RCC_OscConfig+0xd4>
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	685b      	ldr	r3, [r3, #4]
 8001e78:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001e7c:	d10c      	bne.n	8001e98 <HAL_RCC_OscConfig+0xbc>
 8001e7e:	4b72      	ldr	r3, [pc, #456]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e80:	681b      	ldr	r3, [r3, #0]
 8001e82:	4a71      	ldr	r2, [pc, #452]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e84:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001e88:	6013      	str	r3, [r2, #0]
 8001e8a:	4b6f      	ldr	r3, [pc, #444]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	4a6e      	ldr	r2, [pc, #440]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e90:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001e94:	6013      	str	r3, [r2, #0]
 8001e96:	e00b      	b.n	8001eb0 <HAL_RCC_OscConfig+0xd4>
 8001e98:	4b6b      	ldr	r3, [pc, #428]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	4a6a      	ldr	r2, [pc, #424]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001e9e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001ea2:	6013      	str	r3, [r2, #0]
 8001ea4:	4b68      	ldr	r3, [pc, #416]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	4a67      	ldr	r2, [pc, #412]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001eaa:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001eae:	6013      	str	r3, [r2, #0]
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	685b      	ldr	r3, [r3, #4]
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d013      	beq.n	8001ee0 <HAL_RCC_OscConfig+0x104>
 8001eb8:	f7ff fbcc 	bl	8001654 <HAL_GetTick>
 8001ebc:	6138      	str	r0, [r7, #16]
 8001ebe:	e008      	b.n	8001ed2 <HAL_RCC_OscConfig+0xf6>
 8001ec0:	f7ff fbc8 	bl	8001654 <HAL_GetTick>
 8001ec4:	4602      	mov	r2, r0
 8001ec6:	693b      	ldr	r3, [r7, #16]
 8001ec8:	1ad3      	subs	r3, r2, r3
 8001eca:	2b64      	cmp	r3, #100	@ 0x64
 8001ecc:	d901      	bls.n	8001ed2 <HAL_RCC_OscConfig+0xf6>
 8001ece:	2303      	movs	r3, #3
 8001ed0:	e200      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8001ed2:	4b5d      	ldr	r3, [pc, #372]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001eda:	2b00      	cmp	r3, #0
 8001edc:	d0f0      	beq.n	8001ec0 <HAL_RCC_OscConfig+0xe4>
 8001ede:	e014      	b.n	8001f0a <HAL_RCC_OscConfig+0x12e>
 8001ee0:	f7ff fbb8 	bl	8001654 <HAL_GetTick>
 8001ee4:	6138      	str	r0, [r7, #16]
 8001ee6:	e008      	b.n	8001efa <HAL_RCC_OscConfig+0x11e>
 8001ee8:	f7ff fbb4 	bl	8001654 <HAL_GetTick>
 8001eec:	4602      	mov	r2, r0
 8001eee:	693b      	ldr	r3, [r7, #16]
 8001ef0:	1ad3      	subs	r3, r2, r3
 8001ef2:	2b64      	cmp	r3, #100	@ 0x64
 8001ef4:	d901      	bls.n	8001efa <HAL_RCC_OscConfig+0x11e>
 8001ef6:	2303      	movs	r3, #3
 8001ef8:	e1ec      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8001efa:	4b53      	ldr	r3, [pc, #332]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001f02:	2b00      	cmp	r3, #0
 8001f04:	d1f0      	bne.n	8001ee8 <HAL_RCC_OscConfig+0x10c>
 8001f06:	e000      	b.n	8001f0a <HAL_RCC_OscConfig+0x12e>
 8001f08:	bf00      	nop
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	f003 0302 	and.w	r3, r3, #2
 8001f12:	2b00      	cmp	r3, #0
 8001f14:	d063      	beq.n	8001fde <HAL_RCC_OscConfig+0x202>
 8001f16:	4b4c      	ldr	r3, [pc, #304]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f18:	685b      	ldr	r3, [r3, #4]
 8001f1a:	f003 030c 	and.w	r3, r3, #12
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d00b      	beq.n	8001f3a <HAL_RCC_OscConfig+0x15e>
 8001f22:	4b49      	ldr	r3, [pc, #292]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f24:	685b      	ldr	r3, [r3, #4]
 8001f26:	f003 030c 	and.w	r3, r3, #12
 8001f2a:	2b08      	cmp	r3, #8
 8001f2c:	d11c      	bne.n	8001f68 <HAL_RCC_OscConfig+0x18c>
 8001f2e:	4b46      	ldr	r3, [pc, #280]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f30:	685b      	ldr	r3, [r3, #4]
 8001f32:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d116      	bne.n	8001f68 <HAL_RCC_OscConfig+0x18c>
 8001f3a:	4b43      	ldr	r3, [pc, #268]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	f003 0302 	and.w	r3, r3, #2
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d005      	beq.n	8001f52 <HAL_RCC_OscConfig+0x176>
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	691b      	ldr	r3, [r3, #16]
 8001f4a:	2b01      	cmp	r3, #1
 8001f4c:	d001      	beq.n	8001f52 <HAL_RCC_OscConfig+0x176>
 8001f4e:	2301      	movs	r3, #1
 8001f50:	e1c0      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8001f52:	4b3d      	ldr	r3, [pc, #244]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	695b      	ldr	r3, [r3, #20]
 8001f5e:	00db      	lsls	r3, r3, #3
 8001f60:	4939      	ldr	r1, [pc, #228]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f62:	4313      	orrs	r3, r2
 8001f64:	600b      	str	r3, [r1, #0]
 8001f66:	e03a      	b.n	8001fde <HAL_RCC_OscConfig+0x202>
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	691b      	ldr	r3, [r3, #16]
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d020      	beq.n	8001fb2 <HAL_RCC_OscConfig+0x1d6>
 8001f70:	4b36      	ldr	r3, [pc, #216]	@ (800204c <HAL_RCC_OscConfig+0x270>)
 8001f72:	2201      	movs	r2, #1
 8001f74:	601a      	str	r2, [r3, #0]
 8001f76:	f7ff fb6d 	bl	8001654 <HAL_GetTick>
 8001f7a:	6138      	str	r0, [r7, #16]
 8001f7c:	e008      	b.n	8001f90 <HAL_RCC_OscConfig+0x1b4>
 8001f7e:	f7ff fb69 	bl	8001654 <HAL_GetTick>
 8001f82:	4602      	mov	r2, r0
 8001f84:	693b      	ldr	r3, [r7, #16]
 8001f86:	1ad3      	subs	r3, r2, r3
 8001f88:	2b02      	cmp	r3, #2
 8001f8a:	d901      	bls.n	8001f90 <HAL_RCC_OscConfig+0x1b4>
 8001f8c:	2303      	movs	r3, #3
 8001f8e:	e1a1      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8001f90:	4b2d      	ldr	r3, [pc, #180]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	f003 0302 	and.w	r3, r3, #2
 8001f98:	2b00      	cmp	r3, #0
 8001f9a:	d0f0      	beq.n	8001f7e <HAL_RCC_OscConfig+0x1a2>
 8001f9c:	4b2a      	ldr	r3, [pc, #168]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	695b      	ldr	r3, [r3, #20]
 8001fa8:	00db      	lsls	r3, r3, #3
 8001faa:	4927      	ldr	r1, [pc, #156]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001fac:	4313      	orrs	r3, r2
 8001fae:	600b      	str	r3, [r1, #0]
 8001fb0:	e015      	b.n	8001fde <HAL_RCC_OscConfig+0x202>
 8001fb2:	4b26      	ldr	r3, [pc, #152]	@ (800204c <HAL_RCC_OscConfig+0x270>)
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	601a      	str	r2, [r3, #0]
 8001fb8:	f7ff fb4c 	bl	8001654 <HAL_GetTick>
 8001fbc:	6138      	str	r0, [r7, #16]
 8001fbe:	e008      	b.n	8001fd2 <HAL_RCC_OscConfig+0x1f6>
 8001fc0:	f7ff fb48 	bl	8001654 <HAL_GetTick>
 8001fc4:	4602      	mov	r2, r0
 8001fc6:	693b      	ldr	r3, [r7, #16]
 8001fc8:	1ad3      	subs	r3, r2, r3
 8001fca:	2b02      	cmp	r3, #2
 8001fcc:	d901      	bls.n	8001fd2 <HAL_RCC_OscConfig+0x1f6>
 8001fce:	2303      	movs	r3, #3
 8001fd0:	e180      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8001fd2:	4b1d      	ldr	r3, [pc, #116]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8001fd4:	681b      	ldr	r3, [r3, #0]
 8001fd6:	f003 0302 	and.w	r3, r3, #2
 8001fda:	2b00      	cmp	r3, #0
 8001fdc:	d1f0      	bne.n	8001fc0 <HAL_RCC_OscConfig+0x1e4>
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	f003 0308 	and.w	r3, r3, #8
 8001fe6:	2b00      	cmp	r3, #0
 8001fe8:	d03a      	beq.n	8002060 <HAL_RCC_OscConfig+0x284>
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	699b      	ldr	r3, [r3, #24]
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d019      	beq.n	8002026 <HAL_RCC_OscConfig+0x24a>
 8001ff2:	4b17      	ldr	r3, [pc, #92]	@ (8002050 <HAL_RCC_OscConfig+0x274>)
 8001ff4:	2201      	movs	r2, #1
 8001ff6:	601a      	str	r2, [r3, #0]
 8001ff8:	f7ff fb2c 	bl	8001654 <HAL_GetTick>
 8001ffc:	6138      	str	r0, [r7, #16]
 8001ffe:	e008      	b.n	8002012 <HAL_RCC_OscConfig+0x236>
 8002000:	f7ff fb28 	bl	8001654 <HAL_GetTick>
 8002004:	4602      	mov	r2, r0
 8002006:	693b      	ldr	r3, [r7, #16]
 8002008:	1ad3      	subs	r3, r2, r3
 800200a:	2b02      	cmp	r3, #2
 800200c:	d901      	bls.n	8002012 <HAL_RCC_OscConfig+0x236>
 800200e:	2303      	movs	r3, #3
 8002010:	e160      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8002012:	4b0d      	ldr	r3, [pc, #52]	@ (8002048 <HAL_RCC_OscConfig+0x26c>)
 8002014:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002016:	f003 0302 	and.w	r3, r3, #2
 800201a:	2b00      	cmp	r3, #0
 800201c:	d0f0      	beq.n	8002000 <HAL_RCC_OscConfig+0x224>
 800201e:	2001      	movs	r0, #1
 8002020:	f000 face 	bl	80025c0 <RCC_Delay>
 8002024:	e01c      	b.n	8002060 <HAL_RCC_OscConfig+0x284>
 8002026:	4b0a      	ldr	r3, [pc, #40]	@ (8002050 <HAL_RCC_OscConfig+0x274>)
 8002028:	2200      	movs	r2, #0
 800202a:	601a      	str	r2, [r3, #0]
 800202c:	f7ff fb12 	bl	8001654 <HAL_GetTick>
 8002030:	6138      	str	r0, [r7, #16]
 8002032:	e00f      	b.n	8002054 <HAL_RCC_OscConfig+0x278>
 8002034:	f7ff fb0e 	bl	8001654 <HAL_GetTick>
 8002038:	4602      	mov	r2, r0
 800203a:	693b      	ldr	r3, [r7, #16]
 800203c:	1ad3      	subs	r3, r2, r3
 800203e:	2b02      	cmp	r3, #2
 8002040:	d908      	bls.n	8002054 <HAL_RCC_OscConfig+0x278>
 8002042:	2303      	movs	r3, #3
 8002044:	e146      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8002046:	bf00      	nop
 8002048:	40021000 	.word	0x40021000
 800204c:	42420000 	.word	0x42420000
 8002050:	42420480 	.word	0x42420480
 8002054:	4b92      	ldr	r3, [pc, #584]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002056:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002058:	f003 0302 	and.w	r3, r3, #2
 800205c:	2b00      	cmp	r3, #0
 800205e:	d1e9      	bne.n	8002034 <HAL_RCC_OscConfig+0x258>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	f003 0304 	and.w	r3, r3, #4
 8002068:	2b00      	cmp	r3, #0
 800206a:	f000 80a6 	beq.w	80021ba <HAL_RCC_OscConfig+0x3de>
 800206e:	2300      	movs	r3, #0
 8002070:	75fb      	strb	r3, [r7, #23]
 8002072:	4b8b      	ldr	r3, [pc, #556]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002074:	69db      	ldr	r3, [r3, #28]
 8002076:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800207a:	2b00      	cmp	r3, #0
 800207c:	d10d      	bne.n	800209a <HAL_RCC_OscConfig+0x2be>
 800207e:	4b88      	ldr	r3, [pc, #544]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002080:	69db      	ldr	r3, [r3, #28]
 8002082:	4a87      	ldr	r2, [pc, #540]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002084:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002088:	61d3      	str	r3, [r2, #28]
 800208a:	4b85      	ldr	r3, [pc, #532]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 800208c:	69db      	ldr	r3, [r3, #28]
 800208e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002092:	60bb      	str	r3, [r7, #8]
 8002094:	68bb      	ldr	r3, [r7, #8]
 8002096:	2301      	movs	r3, #1
 8002098:	75fb      	strb	r3, [r7, #23]
 800209a:	4b82      	ldr	r3, [pc, #520]	@ (80022a4 <HAL_RCC_OscConfig+0x4c8>)
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d118      	bne.n	80020d8 <HAL_RCC_OscConfig+0x2fc>
 80020a6:	4b7f      	ldr	r3, [pc, #508]	@ (80022a4 <HAL_RCC_OscConfig+0x4c8>)
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	4a7e      	ldr	r2, [pc, #504]	@ (80022a4 <HAL_RCC_OscConfig+0x4c8>)
 80020ac:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80020b0:	6013      	str	r3, [r2, #0]
 80020b2:	f7ff facf 	bl	8001654 <HAL_GetTick>
 80020b6:	6138      	str	r0, [r7, #16]
 80020b8:	e008      	b.n	80020cc <HAL_RCC_OscConfig+0x2f0>
 80020ba:	f7ff facb 	bl	8001654 <HAL_GetTick>
 80020be:	4602      	mov	r2, r0
 80020c0:	693b      	ldr	r3, [r7, #16]
 80020c2:	1ad3      	subs	r3, r2, r3
 80020c4:	2b64      	cmp	r3, #100	@ 0x64
 80020c6:	d901      	bls.n	80020cc <HAL_RCC_OscConfig+0x2f0>
 80020c8:	2303      	movs	r3, #3
 80020ca:	e103      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 80020cc:	4b75      	ldr	r3, [pc, #468]	@ (80022a4 <HAL_RCC_OscConfig+0x4c8>)
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d0f0      	beq.n	80020ba <HAL_RCC_OscConfig+0x2de>
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	68db      	ldr	r3, [r3, #12]
 80020dc:	2b01      	cmp	r3, #1
 80020de:	d106      	bne.n	80020ee <HAL_RCC_OscConfig+0x312>
 80020e0:	4b6f      	ldr	r3, [pc, #444]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80020e2:	6a1b      	ldr	r3, [r3, #32]
 80020e4:	4a6e      	ldr	r2, [pc, #440]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80020e6:	f043 0301 	orr.w	r3, r3, #1
 80020ea:	6213      	str	r3, [r2, #32]
 80020ec:	e02d      	b.n	800214a <HAL_RCC_OscConfig+0x36e>
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	68db      	ldr	r3, [r3, #12]
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d10c      	bne.n	8002110 <HAL_RCC_OscConfig+0x334>
 80020f6:	4b6a      	ldr	r3, [pc, #424]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80020f8:	6a1b      	ldr	r3, [r3, #32]
 80020fa:	4a69      	ldr	r2, [pc, #420]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80020fc:	f023 0301 	bic.w	r3, r3, #1
 8002100:	6213      	str	r3, [r2, #32]
 8002102:	4b67      	ldr	r3, [pc, #412]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002104:	6a1b      	ldr	r3, [r3, #32]
 8002106:	4a66      	ldr	r2, [pc, #408]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002108:	f023 0304 	bic.w	r3, r3, #4
 800210c:	6213      	str	r3, [r2, #32]
 800210e:	e01c      	b.n	800214a <HAL_RCC_OscConfig+0x36e>
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	68db      	ldr	r3, [r3, #12]
 8002114:	2b05      	cmp	r3, #5
 8002116:	d10c      	bne.n	8002132 <HAL_RCC_OscConfig+0x356>
 8002118:	4b61      	ldr	r3, [pc, #388]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 800211a:	6a1b      	ldr	r3, [r3, #32]
 800211c:	4a60      	ldr	r2, [pc, #384]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 800211e:	f043 0304 	orr.w	r3, r3, #4
 8002122:	6213      	str	r3, [r2, #32]
 8002124:	4b5e      	ldr	r3, [pc, #376]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002126:	6a1b      	ldr	r3, [r3, #32]
 8002128:	4a5d      	ldr	r2, [pc, #372]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 800212a:	f043 0301 	orr.w	r3, r3, #1
 800212e:	6213      	str	r3, [r2, #32]
 8002130:	e00b      	b.n	800214a <HAL_RCC_OscConfig+0x36e>
 8002132:	4b5b      	ldr	r3, [pc, #364]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002134:	6a1b      	ldr	r3, [r3, #32]
 8002136:	4a5a      	ldr	r2, [pc, #360]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002138:	f023 0301 	bic.w	r3, r3, #1
 800213c:	6213      	str	r3, [r2, #32]
 800213e:	4b58      	ldr	r3, [pc, #352]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002140:	6a1b      	ldr	r3, [r3, #32]
 8002142:	4a57      	ldr	r2, [pc, #348]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002144:	f023 0304 	bic.w	r3, r3, #4
 8002148:	6213      	str	r3, [r2, #32]
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	68db      	ldr	r3, [r3, #12]
 800214e:	2b00      	cmp	r3, #0
 8002150:	d015      	beq.n	800217e <HAL_RCC_OscConfig+0x3a2>
 8002152:	f7ff fa7f 	bl	8001654 <HAL_GetTick>
 8002156:	6138      	str	r0, [r7, #16]
 8002158:	e00a      	b.n	8002170 <HAL_RCC_OscConfig+0x394>
 800215a:	f7ff fa7b 	bl	8001654 <HAL_GetTick>
 800215e:	4602      	mov	r2, r0
 8002160:	693b      	ldr	r3, [r7, #16]
 8002162:	1ad3      	subs	r3, r2, r3
 8002164:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002168:	4293      	cmp	r3, r2
 800216a:	d901      	bls.n	8002170 <HAL_RCC_OscConfig+0x394>
 800216c:	2303      	movs	r3, #3
 800216e:	e0b1      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8002170:	4b4b      	ldr	r3, [pc, #300]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002172:	6a1b      	ldr	r3, [r3, #32]
 8002174:	f003 0302 	and.w	r3, r3, #2
 8002178:	2b00      	cmp	r3, #0
 800217a:	d0ee      	beq.n	800215a <HAL_RCC_OscConfig+0x37e>
 800217c:	e014      	b.n	80021a8 <HAL_RCC_OscConfig+0x3cc>
 800217e:	f7ff fa69 	bl	8001654 <HAL_GetTick>
 8002182:	6138      	str	r0, [r7, #16]
 8002184:	e00a      	b.n	800219c <HAL_RCC_OscConfig+0x3c0>
 8002186:	f7ff fa65 	bl	8001654 <HAL_GetTick>
 800218a:	4602      	mov	r2, r0
 800218c:	693b      	ldr	r3, [r7, #16]
 800218e:	1ad3      	subs	r3, r2, r3
 8002190:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002194:	4293      	cmp	r3, r2
 8002196:	d901      	bls.n	800219c <HAL_RCC_OscConfig+0x3c0>
 8002198:	2303      	movs	r3, #3
 800219a:	e09b      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 800219c:	4b40      	ldr	r3, [pc, #256]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 800219e:	6a1b      	ldr	r3, [r3, #32]
 80021a0:	f003 0302 	and.w	r3, r3, #2
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d1ee      	bne.n	8002186 <HAL_RCC_OscConfig+0x3aa>
 80021a8:	7dfb      	ldrb	r3, [r7, #23]
 80021aa:	2b01      	cmp	r3, #1
 80021ac:	d105      	bne.n	80021ba <HAL_RCC_OscConfig+0x3de>
 80021ae:	4b3c      	ldr	r3, [pc, #240]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80021b0:	69db      	ldr	r3, [r3, #28]
 80021b2:	4a3b      	ldr	r2, [pc, #236]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80021b4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80021b8:	61d3      	str	r3, [r2, #28]
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	69db      	ldr	r3, [r3, #28]
 80021be:	2b00      	cmp	r3, #0
 80021c0:	f000 8087 	beq.w	80022d2 <HAL_RCC_OscConfig+0x4f6>
 80021c4:	4b36      	ldr	r3, [pc, #216]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80021c6:	685b      	ldr	r3, [r3, #4]
 80021c8:	f003 030c 	and.w	r3, r3, #12
 80021cc:	2b08      	cmp	r3, #8
 80021ce:	d061      	beq.n	8002294 <HAL_RCC_OscConfig+0x4b8>
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	69db      	ldr	r3, [r3, #28]
 80021d4:	2b02      	cmp	r3, #2
 80021d6:	d146      	bne.n	8002266 <HAL_RCC_OscConfig+0x48a>
 80021d8:	4b33      	ldr	r3, [pc, #204]	@ (80022a8 <HAL_RCC_OscConfig+0x4cc>)
 80021da:	2200      	movs	r2, #0
 80021dc:	601a      	str	r2, [r3, #0]
 80021de:	f7ff fa39 	bl	8001654 <HAL_GetTick>
 80021e2:	6138      	str	r0, [r7, #16]
 80021e4:	e008      	b.n	80021f8 <HAL_RCC_OscConfig+0x41c>
 80021e6:	f7ff fa35 	bl	8001654 <HAL_GetTick>
 80021ea:	4602      	mov	r2, r0
 80021ec:	693b      	ldr	r3, [r7, #16]
 80021ee:	1ad3      	subs	r3, r2, r3
 80021f0:	2b02      	cmp	r3, #2
 80021f2:	d901      	bls.n	80021f8 <HAL_RCC_OscConfig+0x41c>
 80021f4:	2303      	movs	r3, #3
 80021f6:	e06d      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 80021f8:	4b29      	ldr	r3, [pc, #164]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002200:	2b00      	cmp	r3, #0
 8002202:	d1f0      	bne.n	80021e6 <HAL_RCC_OscConfig+0x40a>
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	6a1b      	ldr	r3, [r3, #32]
 8002208:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800220c:	d108      	bne.n	8002220 <HAL_RCC_OscConfig+0x444>
 800220e:	4b24      	ldr	r3, [pc, #144]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002210:	685b      	ldr	r3, [r3, #4]
 8002212:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	689b      	ldr	r3, [r3, #8]
 800221a:	4921      	ldr	r1, [pc, #132]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 800221c:	4313      	orrs	r3, r2
 800221e:	604b      	str	r3, [r1, #4]
 8002220:	4b1f      	ldr	r3, [pc, #124]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002222:	685b      	ldr	r3, [r3, #4]
 8002224:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	6a19      	ldr	r1, [r3, #32]
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002230:	430b      	orrs	r3, r1
 8002232:	491b      	ldr	r1, [pc, #108]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002234:	4313      	orrs	r3, r2
 8002236:	604b      	str	r3, [r1, #4]
 8002238:	4b1b      	ldr	r3, [pc, #108]	@ (80022a8 <HAL_RCC_OscConfig+0x4cc>)
 800223a:	2201      	movs	r2, #1
 800223c:	601a      	str	r2, [r3, #0]
 800223e:	f7ff fa09 	bl	8001654 <HAL_GetTick>
 8002242:	6138      	str	r0, [r7, #16]
 8002244:	e008      	b.n	8002258 <HAL_RCC_OscConfig+0x47c>
 8002246:	f7ff fa05 	bl	8001654 <HAL_GetTick>
 800224a:	4602      	mov	r2, r0
 800224c:	693b      	ldr	r3, [r7, #16]
 800224e:	1ad3      	subs	r3, r2, r3
 8002250:	2b02      	cmp	r3, #2
 8002252:	d901      	bls.n	8002258 <HAL_RCC_OscConfig+0x47c>
 8002254:	2303      	movs	r3, #3
 8002256:	e03d      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8002258:	4b11      	ldr	r3, [pc, #68]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002260:	2b00      	cmp	r3, #0
 8002262:	d0f0      	beq.n	8002246 <HAL_RCC_OscConfig+0x46a>
 8002264:	e035      	b.n	80022d2 <HAL_RCC_OscConfig+0x4f6>
 8002266:	4b10      	ldr	r3, [pc, #64]	@ (80022a8 <HAL_RCC_OscConfig+0x4cc>)
 8002268:	2200      	movs	r2, #0
 800226a:	601a      	str	r2, [r3, #0]
 800226c:	f7ff f9f2 	bl	8001654 <HAL_GetTick>
 8002270:	6138      	str	r0, [r7, #16]
 8002272:	e008      	b.n	8002286 <HAL_RCC_OscConfig+0x4aa>
 8002274:	f7ff f9ee 	bl	8001654 <HAL_GetTick>
 8002278:	4602      	mov	r2, r0
 800227a:	693b      	ldr	r3, [r7, #16]
 800227c:	1ad3      	subs	r3, r2, r3
 800227e:	2b02      	cmp	r3, #2
 8002280:	d901      	bls.n	8002286 <HAL_RCC_OscConfig+0x4aa>
 8002282:	2303      	movs	r3, #3
 8002284:	e026      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 8002286:	4b06      	ldr	r3, [pc, #24]	@ (80022a0 <HAL_RCC_OscConfig+0x4c4>)
 8002288:	681b      	ldr	r3, [r3, #0]
 800228a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800228e:	2b00      	cmp	r3, #0
 8002290:	d1f0      	bne.n	8002274 <HAL_RCC_OscConfig+0x498>
 8002292:	e01e      	b.n	80022d2 <HAL_RCC_OscConfig+0x4f6>
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	69db      	ldr	r3, [r3, #28]
 8002298:	2b01      	cmp	r3, #1
 800229a:	d107      	bne.n	80022ac <HAL_RCC_OscConfig+0x4d0>
 800229c:	2301      	movs	r3, #1
 800229e:	e019      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 80022a0:	40021000 	.word	0x40021000
 80022a4:	40007000 	.word	0x40007000
 80022a8:	42420060 	.word	0x42420060
 80022ac:	4b0b      	ldr	r3, [pc, #44]	@ (80022dc <HAL_RCC_OscConfig+0x500>)
 80022ae:	685b      	ldr	r3, [r3, #4]
 80022b0:	60fb      	str	r3, [r7, #12]
 80022b2:	68fb      	ldr	r3, [r7, #12]
 80022b4:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	6a1b      	ldr	r3, [r3, #32]
 80022bc:	429a      	cmp	r2, r3
 80022be:	d106      	bne.n	80022ce <HAL_RCC_OscConfig+0x4f2>
 80022c0:	68fb      	ldr	r3, [r7, #12]
 80022c2:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80022ca:	429a      	cmp	r2, r3
 80022cc:	d001      	beq.n	80022d2 <HAL_RCC_OscConfig+0x4f6>
 80022ce:	2301      	movs	r3, #1
 80022d0:	e000      	b.n	80022d4 <HAL_RCC_OscConfig+0x4f8>
 80022d2:	2300      	movs	r3, #0
 80022d4:	4618      	mov	r0, r3
 80022d6:	3718      	adds	r7, #24
 80022d8:	46bd      	mov	sp, r7
 80022da:	bd80      	pop	{r7, pc}
 80022dc:	40021000 	.word	0x40021000

080022e0 <HAL_RCC_ClockConfig>:
 80022e0:	b580      	push	{r7, lr}
 80022e2:	b084      	sub	sp, #16
 80022e4:	af00      	add	r7, sp, #0
 80022e6:	6078      	str	r0, [r7, #4]
 80022e8:	6039      	str	r1, [r7, #0]
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	2b00      	cmp	r3, #0
 80022ee:	d101      	bne.n	80022f4 <HAL_RCC_ClockConfig+0x14>
 80022f0:	2301      	movs	r3, #1
 80022f2:	e0d0      	b.n	8002496 <HAL_RCC_ClockConfig+0x1b6>
 80022f4:	4b6a      	ldr	r3, [pc, #424]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	f003 0307 	and.w	r3, r3, #7
 80022fc:	683a      	ldr	r2, [r7, #0]
 80022fe:	429a      	cmp	r2, r3
 8002300:	d910      	bls.n	8002324 <HAL_RCC_ClockConfig+0x44>
 8002302:	4b67      	ldr	r3, [pc, #412]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	f023 0207 	bic.w	r2, r3, #7
 800230a:	4965      	ldr	r1, [pc, #404]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 800230c:	683b      	ldr	r3, [r7, #0]
 800230e:	4313      	orrs	r3, r2
 8002310:	600b      	str	r3, [r1, #0]
 8002312:	4b63      	ldr	r3, [pc, #396]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	f003 0307 	and.w	r3, r3, #7
 800231a:	683a      	ldr	r2, [r7, #0]
 800231c:	429a      	cmp	r2, r3
 800231e:	d001      	beq.n	8002324 <HAL_RCC_ClockConfig+0x44>
 8002320:	2301      	movs	r3, #1
 8002322:	e0b8      	b.n	8002496 <HAL_RCC_ClockConfig+0x1b6>
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	f003 0302 	and.w	r3, r3, #2
 800232c:	2b00      	cmp	r3, #0
 800232e:	d020      	beq.n	8002372 <HAL_RCC_ClockConfig+0x92>
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	f003 0304 	and.w	r3, r3, #4
 8002338:	2b00      	cmp	r3, #0
 800233a:	d005      	beq.n	8002348 <HAL_RCC_ClockConfig+0x68>
 800233c:	4b59      	ldr	r3, [pc, #356]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 800233e:	685b      	ldr	r3, [r3, #4]
 8002340:	4a58      	ldr	r2, [pc, #352]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 8002342:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8002346:	6053      	str	r3, [r2, #4]
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	f003 0308 	and.w	r3, r3, #8
 8002350:	2b00      	cmp	r3, #0
 8002352:	d005      	beq.n	8002360 <HAL_RCC_ClockConfig+0x80>
 8002354:	4b53      	ldr	r3, [pc, #332]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 8002356:	685b      	ldr	r3, [r3, #4]
 8002358:	4a52      	ldr	r2, [pc, #328]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 800235a:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 800235e:	6053      	str	r3, [r2, #4]
 8002360:	4b50      	ldr	r3, [pc, #320]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 8002362:	685b      	ldr	r3, [r3, #4]
 8002364:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	689b      	ldr	r3, [r3, #8]
 800236c:	494d      	ldr	r1, [pc, #308]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 800236e:	4313      	orrs	r3, r2
 8002370:	604b      	str	r3, [r1, #4]
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	f003 0301 	and.w	r3, r3, #1
 800237a:	2b00      	cmp	r3, #0
 800237c:	d040      	beq.n	8002400 <HAL_RCC_ClockConfig+0x120>
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	685b      	ldr	r3, [r3, #4]
 8002382:	2b01      	cmp	r3, #1
 8002384:	d107      	bne.n	8002396 <HAL_RCC_ClockConfig+0xb6>
 8002386:	4b47      	ldr	r3, [pc, #284]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800238e:	2b00      	cmp	r3, #0
 8002390:	d115      	bne.n	80023be <HAL_RCC_ClockConfig+0xde>
 8002392:	2301      	movs	r3, #1
 8002394:	e07f      	b.n	8002496 <HAL_RCC_ClockConfig+0x1b6>
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	685b      	ldr	r3, [r3, #4]
 800239a:	2b02      	cmp	r3, #2
 800239c:	d107      	bne.n	80023ae <HAL_RCC_ClockConfig+0xce>
 800239e:	4b41      	ldr	r3, [pc, #260]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80023a6:	2b00      	cmp	r3, #0
 80023a8:	d109      	bne.n	80023be <HAL_RCC_ClockConfig+0xde>
 80023aa:	2301      	movs	r3, #1
 80023ac:	e073      	b.n	8002496 <HAL_RCC_ClockConfig+0x1b6>
 80023ae:	4b3d      	ldr	r3, [pc, #244]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	f003 0302 	and.w	r3, r3, #2
 80023b6:	2b00      	cmp	r3, #0
 80023b8:	d101      	bne.n	80023be <HAL_RCC_ClockConfig+0xde>
 80023ba:	2301      	movs	r3, #1
 80023bc:	e06b      	b.n	8002496 <HAL_RCC_ClockConfig+0x1b6>
 80023be:	4b39      	ldr	r3, [pc, #228]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 80023c0:	685b      	ldr	r3, [r3, #4]
 80023c2:	f023 0203 	bic.w	r2, r3, #3
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	685b      	ldr	r3, [r3, #4]
 80023ca:	4936      	ldr	r1, [pc, #216]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 80023cc:	4313      	orrs	r3, r2
 80023ce:	604b      	str	r3, [r1, #4]
 80023d0:	f7ff f940 	bl	8001654 <HAL_GetTick>
 80023d4:	60f8      	str	r0, [r7, #12]
 80023d6:	e00a      	b.n	80023ee <HAL_RCC_ClockConfig+0x10e>
 80023d8:	f7ff f93c 	bl	8001654 <HAL_GetTick>
 80023dc:	4602      	mov	r2, r0
 80023de:	68fb      	ldr	r3, [r7, #12]
 80023e0:	1ad3      	subs	r3, r2, r3
 80023e2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80023e6:	4293      	cmp	r3, r2
 80023e8:	d901      	bls.n	80023ee <HAL_RCC_ClockConfig+0x10e>
 80023ea:	2303      	movs	r3, #3
 80023ec:	e053      	b.n	8002496 <HAL_RCC_ClockConfig+0x1b6>
 80023ee:	4b2d      	ldr	r3, [pc, #180]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 80023f0:	685b      	ldr	r3, [r3, #4]
 80023f2:	f003 020c 	and.w	r2, r3, #12
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	685b      	ldr	r3, [r3, #4]
 80023fa:	009b      	lsls	r3, r3, #2
 80023fc:	429a      	cmp	r2, r3
 80023fe:	d1eb      	bne.n	80023d8 <HAL_RCC_ClockConfig+0xf8>
 8002400:	4b27      	ldr	r3, [pc, #156]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	f003 0307 	and.w	r3, r3, #7
 8002408:	683a      	ldr	r2, [r7, #0]
 800240a:	429a      	cmp	r2, r3
 800240c:	d210      	bcs.n	8002430 <HAL_RCC_ClockConfig+0x150>
 800240e:	4b24      	ldr	r3, [pc, #144]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	f023 0207 	bic.w	r2, r3, #7
 8002416:	4922      	ldr	r1, [pc, #136]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 8002418:	683b      	ldr	r3, [r7, #0]
 800241a:	4313      	orrs	r3, r2
 800241c:	600b      	str	r3, [r1, #0]
 800241e:	4b20      	ldr	r3, [pc, #128]	@ (80024a0 <HAL_RCC_ClockConfig+0x1c0>)
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	f003 0307 	and.w	r3, r3, #7
 8002426:	683a      	ldr	r2, [r7, #0]
 8002428:	429a      	cmp	r2, r3
 800242a:	d001      	beq.n	8002430 <HAL_RCC_ClockConfig+0x150>
 800242c:	2301      	movs	r3, #1
 800242e:	e032      	b.n	8002496 <HAL_RCC_ClockConfig+0x1b6>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	f003 0304 	and.w	r3, r3, #4
 8002438:	2b00      	cmp	r3, #0
 800243a:	d008      	beq.n	800244e <HAL_RCC_ClockConfig+0x16e>
 800243c:	4b19      	ldr	r3, [pc, #100]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 800243e:	685b      	ldr	r3, [r3, #4]
 8002440:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	68db      	ldr	r3, [r3, #12]
 8002448:	4916      	ldr	r1, [pc, #88]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 800244a:	4313      	orrs	r3, r2
 800244c:	604b      	str	r3, [r1, #4]
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	f003 0308 	and.w	r3, r3, #8
 8002456:	2b00      	cmp	r3, #0
 8002458:	d009      	beq.n	800246e <HAL_RCC_ClockConfig+0x18e>
 800245a:	4b12      	ldr	r3, [pc, #72]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 800245c:	685b      	ldr	r3, [r3, #4]
 800245e:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	691b      	ldr	r3, [r3, #16]
 8002466:	00db      	lsls	r3, r3, #3
 8002468:	490e      	ldr	r1, [pc, #56]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 800246a:	4313      	orrs	r3, r2
 800246c:	604b      	str	r3, [r1, #4]
 800246e:	f000 f821 	bl	80024b4 <HAL_RCC_GetSysClockFreq>
 8002472:	4602      	mov	r2, r0
 8002474:	4b0b      	ldr	r3, [pc, #44]	@ (80024a4 <HAL_RCC_ClockConfig+0x1c4>)
 8002476:	685b      	ldr	r3, [r3, #4]
 8002478:	091b      	lsrs	r3, r3, #4
 800247a:	f003 030f 	and.w	r3, r3, #15
 800247e:	490a      	ldr	r1, [pc, #40]	@ (80024a8 <HAL_RCC_ClockConfig+0x1c8>)
 8002480:	5ccb      	ldrb	r3, [r1, r3]
 8002482:	fa22 f303 	lsr.w	r3, r2, r3
 8002486:	4a09      	ldr	r2, [pc, #36]	@ (80024ac <HAL_RCC_ClockConfig+0x1cc>)
 8002488:	6013      	str	r3, [r2, #0]
 800248a:	4b09      	ldr	r3, [pc, #36]	@ (80024b0 <HAL_RCC_ClockConfig+0x1d0>)
 800248c:	681b      	ldr	r3, [r3, #0]
 800248e:	4618      	mov	r0, r3
 8002490:	f7ff f89e 	bl	80015d0 <HAL_InitTick>
 8002494:	2300      	movs	r3, #0
 8002496:	4618      	mov	r0, r3
 8002498:	3710      	adds	r7, #16
 800249a:	46bd      	mov	sp, r7
 800249c:	bd80      	pop	{r7, pc}
 800249e:	bf00      	nop
 80024a0:	40022000 	.word	0x40022000
 80024a4:	40021000 	.word	0x40021000
 80024a8:	08005368 	.word	0x08005368
 80024ac:	20000008 	.word	0x20000008
 80024b0:	2000000c 	.word	0x2000000c

080024b4 <HAL_RCC_GetSysClockFreq>:
 80024b4:	b480      	push	{r7}
 80024b6:	b087      	sub	sp, #28
 80024b8:	af00      	add	r7, sp, #0
 80024ba:	2300      	movs	r3, #0
 80024bc:	60fb      	str	r3, [r7, #12]
 80024be:	2300      	movs	r3, #0
 80024c0:	60bb      	str	r3, [r7, #8]
 80024c2:	2300      	movs	r3, #0
 80024c4:	617b      	str	r3, [r7, #20]
 80024c6:	2300      	movs	r3, #0
 80024c8:	607b      	str	r3, [r7, #4]
 80024ca:	2300      	movs	r3, #0
 80024cc:	613b      	str	r3, [r7, #16]
 80024ce:	4b1e      	ldr	r3, [pc, #120]	@ (8002548 <HAL_RCC_GetSysClockFreq+0x94>)
 80024d0:	685b      	ldr	r3, [r3, #4]
 80024d2:	60fb      	str	r3, [r7, #12]
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	f003 030c 	and.w	r3, r3, #12
 80024da:	2b04      	cmp	r3, #4
 80024dc:	d002      	beq.n	80024e4 <HAL_RCC_GetSysClockFreq+0x30>
 80024de:	2b08      	cmp	r3, #8
 80024e0:	d003      	beq.n	80024ea <HAL_RCC_GetSysClockFreq+0x36>
 80024e2:	e027      	b.n	8002534 <HAL_RCC_GetSysClockFreq+0x80>
 80024e4:	4b19      	ldr	r3, [pc, #100]	@ (800254c <HAL_RCC_GetSysClockFreq+0x98>)
 80024e6:	613b      	str	r3, [r7, #16]
 80024e8:	e027      	b.n	800253a <HAL_RCC_GetSysClockFreq+0x86>
 80024ea:	68fb      	ldr	r3, [r7, #12]
 80024ec:	0c9b      	lsrs	r3, r3, #18
 80024ee:	f003 030f 	and.w	r3, r3, #15
 80024f2:	4a17      	ldr	r2, [pc, #92]	@ (8002550 <HAL_RCC_GetSysClockFreq+0x9c>)
 80024f4:	5cd3      	ldrb	r3, [r2, r3]
 80024f6:	607b      	str	r3, [r7, #4]
 80024f8:	68fb      	ldr	r3, [r7, #12]
 80024fa:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d010      	beq.n	8002524 <HAL_RCC_GetSysClockFreq+0x70>
 8002502:	4b11      	ldr	r3, [pc, #68]	@ (8002548 <HAL_RCC_GetSysClockFreq+0x94>)
 8002504:	685b      	ldr	r3, [r3, #4]
 8002506:	0c5b      	lsrs	r3, r3, #17
 8002508:	f003 0301 	and.w	r3, r3, #1
 800250c:	4a11      	ldr	r2, [pc, #68]	@ (8002554 <HAL_RCC_GetSysClockFreq+0xa0>)
 800250e:	5cd3      	ldrb	r3, [r2, r3]
 8002510:	60bb      	str	r3, [r7, #8]
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	4a0d      	ldr	r2, [pc, #52]	@ (800254c <HAL_RCC_GetSysClockFreq+0x98>)
 8002516:	fb03 f202 	mul.w	r2, r3, r2
 800251a:	68bb      	ldr	r3, [r7, #8]
 800251c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002520:	617b      	str	r3, [r7, #20]
 8002522:	e004      	b.n	800252e <HAL_RCC_GetSysClockFreq+0x7a>
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	4a0c      	ldr	r2, [pc, #48]	@ (8002558 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002528:	fb02 f303 	mul.w	r3, r2, r3
 800252c:	617b      	str	r3, [r7, #20]
 800252e:	697b      	ldr	r3, [r7, #20]
 8002530:	613b      	str	r3, [r7, #16]
 8002532:	e002      	b.n	800253a <HAL_RCC_GetSysClockFreq+0x86>
 8002534:	4b05      	ldr	r3, [pc, #20]	@ (800254c <HAL_RCC_GetSysClockFreq+0x98>)
 8002536:	613b      	str	r3, [r7, #16]
 8002538:	bf00      	nop
 800253a:	693b      	ldr	r3, [r7, #16]
 800253c:	4618      	mov	r0, r3
 800253e:	371c      	adds	r7, #28
 8002540:	46bd      	mov	sp, r7
 8002542:	bc80      	pop	{r7}
 8002544:	4770      	bx	lr
 8002546:	bf00      	nop
 8002548:	40021000 	.word	0x40021000
 800254c:	007a1200 	.word	0x007a1200
 8002550:	08005380 	.word	0x08005380
 8002554:	08005390 	.word	0x08005390
 8002558:	003d0900 	.word	0x003d0900

0800255c <HAL_RCC_GetHCLKFreq>:
 800255c:	b480      	push	{r7}
 800255e:	af00      	add	r7, sp, #0
 8002560:	4b02      	ldr	r3, [pc, #8]	@ (800256c <HAL_RCC_GetHCLKFreq+0x10>)
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	4618      	mov	r0, r3
 8002566:	46bd      	mov	sp, r7
 8002568:	bc80      	pop	{r7}
 800256a:	4770      	bx	lr
 800256c:	20000008 	.word	0x20000008

08002570 <HAL_RCC_GetPCLK1Freq>:
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
 8002574:	f7ff fff2 	bl	800255c <HAL_RCC_GetHCLKFreq>
 8002578:	4602      	mov	r2, r0
 800257a:	4b05      	ldr	r3, [pc, #20]	@ (8002590 <HAL_RCC_GetPCLK1Freq+0x20>)
 800257c:	685b      	ldr	r3, [r3, #4]
 800257e:	0a1b      	lsrs	r3, r3, #8
 8002580:	f003 0307 	and.w	r3, r3, #7
 8002584:	4903      	ldr	r1, [pc, #12]	@ (8002594 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002586:	5ccb      	ldrb	r3, [r1, r3]
 8002588:	fa22 f303 	lsr.w	r3, r2, r3
 800258c:	4618      	mov	r0, r3
 800258e:	bd80      	pop	{r7, pc}
 8002590:	40021000 	.word	0x40021000
 8002594:	08005378 	.word	0x08005378

08002598 <HAL_RCC_GetPCLK2Freq>:
 8002598:	b580      	push	{r7, lr}
 800259a:	af00      	add	r7, sp, #0
 800259c:	f7ff ffde 	bl	800255c <HAL_RCC_GetHCLKFreq>
 80025a0:	4602      	mov	r2, r0
 80025a2:	4b05      	ldr	r3, [pc, #20]	@ (80025b8 <HAL_RCC_GetPCLK2Freq+0x20>)
 80025a4:	685b      	ldr	r3, [r3, #4]
 80025a6:	0adb      	lsrs	r3, r3, #11
 80025a8:	f003 0307 	and.w	r3, r3, #7
 80025ac:	4903      	ldr	r1, [pc, #12]	@ (80025bc <HAL_RCC_GetPCLK2Freq+0x24>)
 80025ae:	5ccb      	ldrb	r3, [r1, r3]
 80025b0:	fa22 f303 	lsr.w	r3, r2, r3
 80025b4:	4618      	mov	r0, r3
 80025b6:	bd80      	pop	{r7, pc}
 80025b8:	40021000 	.word	0x40021000
 80025bc:	08005378 	.word	0x08005378

080025c0 <RCC_Delay>:
 80025c0:	b480      	push	{r7}
 80025c2:	b085      	sub	sp, #20
 80025c4:	af00      	add	r7, sp, #0
 80025c6:	6078      	str	r0, [r7, #4]
 80025c8:	4b0a      	ldr	r3, [pc, #40]	@ (80025f4 <RCC_Delay+0x34>)
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	4a0a      	ldr	r2, [pc, #40]	@ (80025f8 <RCC_Delay+0x38>)
 80025ce:	fba2 2303 	umull	r2, r3, r2, r3
 80025d2:	0a5b      	lsrs	r3, r3, #9
 80025d4:	687a      	ldr	r2, [r7, #4]
 80025d6:	fb02 f303 	mul.w	r3, r2, r3
 80025da:	60fb      	str	r3, [r7, #12]
 80025dc:	bf00      	nop
 80025de:	68fb      	ldr	r3, [r7, #12]
 80025e0:	1e5a      	subs	r2, r3, #1
 80025e2:	60fa      	str	r2, [r7, #12]
 80025e4:	2b00      	cmp	r3, #0
 80025e6:	d1f9      	bne.n	80025dc <RCC_Delay+0x1c>
 80025e8:	bf00      	nop
 80025ea:	bf00      	nop
 80025ec:	3714      	adds	r7, #20
 80025ee:	46bd      	mov	sp, r7
 80025f0:	bc80      	pop	{r7}
 80025f2:	4770      	bx	lr
 80025f4:	20000008 	.word	0x20000008
 80025f8:	10624dd3 	.word	0x10624dd3

080025fc <HAL_TIM_Base_Init>:
 80025fc:	b580      	push	{r7, lr}
 80025fe:	b082      	sub	sp, #8
 8002600:	af00      	add	r7, sp, #0
 8002602:	6078      	str	r0, [r7, #4]
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	2b00      	cmp	r3, #0
 8002608:	d101      	bne.n	800260e <HAL_TIM_Base_Init+0x12>
 800260a:	2301      	movs	r3, #1
 800260c:	e041      	b.n	8002692 <HAL_TIM_Base_Init+0x96>
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002614:	b2db      	uxtb	r3, r3
 8002616:	2b00      	cmp	r3, #0
 8002618:	d106      	bne.n	8002628 <HAL_TIM_Base_Init+0x2c>
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	2200      	movs	r2, #0
 800261e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002622:	6878      	ldr	r0, [r7, #4]
 8002624:	f7fe fec6 	bl	80013b4 <HAL_TIM_Base_MspInit>
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	2202      	movs	r2, #2
 800262c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681a      	ldr	r2, [r3, #0]
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	3304      	adds	r3, #4
 8002638:	4619      	mov	r1, r3
 800263a:	4610      	mov	r0, r2
 800263c:	f000 fe9c 	bl	8003378 <TIM_Base_SetConfig>
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	2201      	movs	r2, #1
 8002644:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	2201      	movs	r2, #1
 800264c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	2201      	movs	r2, #1
 8002654:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	2201      	movs	r2, #1
 800265c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	2201      	movs	r2, #1
 8002664:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	2201      	movs	r2, #1
 800266c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	2201      	movs	r2, #1
 8002674:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	2201      	movs	r2, #1
 800267c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	2201      	movs	r2, #1
 8002684:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	2201      	movs	r2, #1
 800268c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002690:	2300      	movs	r3, #0
 8002692:	4618      	mov	r0, r3
 8002694:	3708      	adds	r7, #8
 8002696:	46bd      	mov	sp, r7
 8002698:	bd80      	pop	{r7, pc}
	...

0800269c <HAL_TIM_Base_Start_IT>:
 800269c:	b480      	push	{r7}
 800269e:	b085      	sub	sp, #20
 80026a0:	af00      	add	r7, sp, #0
 80026a2:	6078      	str	r0, [r7, #4]
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80026aa:	b2db      	uxtb	r3, r3
 80026ac:	2b01      	cmp	r3, #1
 80026ae:	d001      	beq.n	80026b4 <HAL_TIM_Base_Start_IT+0x18>
 80026b0:	2301      	movs	r3, #1
 80026b2:	e03a      	b.n	800272a <HAL_TIM_Base_Start_IT+0x8e>
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	2202      	movs	r2, #2
 80026b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	68da      	ldr	r2, [r3, #12]
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	f042 0201 	orr.w	r2, r2, #1
 80026ca:	60da      	str	r2, [r3, #12]
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	4a18      	ldr	r2, [pc, #96]	@ (8002734 <HAL_TIM_Base_Start_IT+0x98>)
 80026d2:	4293      	cmp	r3, r2
 80026d4:	d00e      	beq.n	80026f4 <HAL_TIM_Base_Start_IT+0x58>
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80026de:	d009      	beq.n	80026f4 <HAL_TIM_Base_Start_IT+0x58>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	4a14      	ldr	r2, [pc, #80]	@ (8002738 <HAL_TIM_Base_Start_IT+0x9c>)
 80026e6:	4293      	cmp	r3, r2
 80026e8:	d004      	beq.n	80026f4 <HAL_TIM_Base_Start_IT+0x58>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	4a13      	ldr	r2, [pc, #76]	@ (800273c <HAL_TIM_Base_Start_IT+0xa0>)
 80026f0:	4293      	cmp	r3, r2
 80026f2:	d111      	bne.n	8002718 <HAL_TIM_Base_Start_IT+0x7c>
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	689b      	ldr	r3, [r3, #8]
 80026fa:	f003 0307 	and.w	r3, r3, #7
 80026fe:	60fb      	str	r3, [r7, #12]
 8002700:	68fb      	ldr	r3, [r7, #12]
 8002702:	2b06      	cmp	r3, #6
 8002704:	d010      	beq.n	8002728 <HAL_TIM_Base_Start_IT+0x8c>
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	681a      	ldr	r2, [r3, #0]
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	f042 0201 	orr.w	r2, r2, #1
 8002714:	601a      	str	r2, [r3, #0]
 8002716:	e007      	b.n	8002728 <HAL_TIM_Base_Start_IT+0x8c>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	681a      	ldr	r2, [r3, #0]
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	f042 0201 	orr.w	r2, r2, #1
 8002726:	601a      	str	r2, [r3, #0]
 8002728:	2300      	movs	r3, #0
 800272a:	4618      	mov	r0, r3
 800272c:	3714      	adds	r7, #20
 800272e:	46bd      	mov	sp, r7
 8002730:	bc80      	pop	{r7}
 8002732:	4770      	bx	lr
 8002734:	40012c00 	.word	0x40012c00
 8002738:	40000400 	.word	0x40000400
 800273c:	40000800 	.word	0x40000800

08002740 <HAL_TIM_Base_Stop_IT>:
 8002740:	b480      	push	{r7}
 8002742:	b083      	sub	sp, #12
 8002744:	af00      	add	r7, sp, #0
 8002746:	6078      	str	r0, [r7, #4]
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	68da      	ldr	r2, [r3, #12]
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	681b      	ldr	r3, [r3, #0]
 8002752:	f022 0201 	bic.w	r2, r2, #1
 8002756:	60da      	str	r2, [r3, #12]
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	6a1a      	ldr	r2, [r3, #32]
 800275e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8002762:	4013      	ands	r3, r2
 8002764:	2b00      	cmp	r3, #0
 8002766:	d10f      	bne.n	8002788 <HAL_TIM_Base_Stop_IT+0x48>
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	6a1a      	ldr	r2, [r3, #32]
 800276e:	f240 4344 	movw	r3, #1092	@ 0x444
 8002772:	4013      	ands	r3, r2
 8002774:	2b00      	cmp	r3, #0
 8002776:	d107      	bne.n	8002788 <HAL_TIM_Base_Stop_IT+0x48>
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	681a      	ldr	r2, [r3, #0]
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	f022 0201 	bic.w	r2, r2, #1
 8002786:	601a      	str	r2, [r3, #0]
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	2201      	movs	r2, #1
 800278c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002790:	2300      	movs	r3, #0
 8002792:	4618      	mov	r0, r3
 8002794:	370c      	adds	r7, #12
 8002796:	46bd      	mov	sp, r7
 8002798:	bc80      	pop	{r7}
 800279a:	4770      	bx	lr

0800279c <HAL_TIM_OC_Init>:
 800279c:	b580      	push	{r7, lr}
 800279e:	b082      	sub	sp, #8
 80027a0:	af00      	add	r7, sp, #0
 80027a2:	6078      	str	r0, [r7, #4]
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	2b00      	cmp	r3, #0
 80027a8:	d101      	bne.n	80027ae <HAL_TIM_OC_Init+0x12>
 80027aa:	2301      	movs	r3, #1
 80027ac:	e041      	b.n	8002832 <HAL_TIM_OC_Init+0x96>
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80027b4:	b2db      	uxtb	r3, r3
 80027b6:	2b00      	cmp	r3, #0
 80027b8:	d106      	bne.n	80027c8 <HAL_TIM_OC_Init+0x2c>
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	2200      	movs	r2, #0
 80027be:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80027c2:	6878      	ldr	r0, [r7, #4]
 80027c4:	f7fe fe32 	bl	800142c <HAL_TIM_OC_MspInit>
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	2202      	movs	r2, #2
 80027cc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80027d0:	687b      	ldr	r3, [r7, #4]
 80027d2:	681a      	ldr	r2, [r3, #0]
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	3304      	adds	r3, #4
 80027d8:	4619      	mov	r1, r3
 80027da:	4610      	mov	r0, r2
 80027dc:	f000 fdcc 	bl	8003378 <TIM_Base_SetConfig>
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	2201      	movs	r2, #1
 80027e4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	2201      	movs	r2, #1
 80027ec:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	2201      	movs	r2, #1
 80027f4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	2201      	movs	r2, #1
 80027fc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	2201      	movs	r2, #1
 8002804:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	2201      	movs	r2, #1
 800280c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	2201      	movs	r2, #1
 8002814:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	2201      	movs	r2, #1
 800281c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	2201      	movs	r2, #1
 8002824:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	2201      	movs	r2, #1
 800282c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002830:	2300      	movs	r3, #0
 8002832:	4618      	mov	r0, r3
 8002834:	3708      	adds	r7, #8
 8002836:	46bd      	mov	sp, r7
 8002838:	bd80      	pop	{r7, pc}
	...

0800283c <HAL_TIM_PWM_Stop>:
 800283c:	b580      	push	{r7, lr}
 800283e:	b082      	sub	sp, #8
 8002840:	af00      	add	r7, sp, #0
 8002842:	6078      	str	r0, [r7, #4]
 8002844:	6039      	str	r1, [r7, #0]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	2200      	movs	r2, #0
 800284c:	6839      	ldr	r1, [r7, #0]
 800284e:	4618      	mov	r0, r3
 8002850:	f001 f9bd 	bl	8003bce <TIM_CCxChannelCmd>
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	4a29      	ldr	r2, [pc, #164]	@ (8002900 <HAL_TIM_PWM_Stop+0xc4>)
 800285a:	4293      	cmp	r3, r2
 800285c:	d117      	bne.n	800288e <HAL_TIM_PWM_Stop+0x52>
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	6a1a      	ldr	r2, [r3, #32]
 8002864:	f241 1311 	movw	r3, #4369	@ 0x1111
 8002868:	4013      	ands	r3, r2
 800286a:	2b00      	cmp	r3, #0
 800286c:	d10f      	bne.n	800288e <HAL_TIM_PWM_Stop+0x52>
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	6a1a      	ldr	r2, [r3, #32]
 8002874:	f240 4344 	movw	r3, #1092	@ 0x444
 8002878:	4013      	ands	r3, r2
 800287a:	2b00      	cmp	r3, #0
 800287c:	d107      	bne.n	800288e <HAL_TIM_PWM_Stop+0x52>
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800288c:	645a      	str	r2, [r3, #68]	@ 0x44
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	6a1a      	ldr	r2, [r3, #32]
 8002894:	f241 1311 	movw	r3, #4369	@ 0x1111
 8002898:	4013      	ands	r3, r2
 800289a:	2b00      	cmp	r3, #0
 800289c:	d10f      	bne.n	80028be <HAL_TIM_PWM_Stop+0x82>
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	6a1a      	ldr	r2, [r3, #32]
 80028a4:	f240 4344 	movw	r3, #1092	@ 0x444
 80028a8:	4013      	ands	r3, r2
 80028aa:	2b00      	cmp	r3, #0
 80028ac:	d107      	bne.n	80028be <HAL_TIM_PWM_Stop+0x82>
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	681a      	ldr	r2, [r3, #0]
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	f022 0201 	bic.w	r2, r2, #1
 80028bc:	601a      	str	r2, [r3, #0]
 80028be:	683b      	ldr	r3, [r7, #0]
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d104      	bne.n	80028ce <HAL_TIM_PWM_Stop+0x92>
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	2201      	movs	r2, #1
 80028c8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80028cc:	e013      	b.n	80028f6 <HAL_TIM_PWM_Stop+0xba>
 80028ce:	683b      	ldr	r3, [r7, #0]
 80028d0:	2b04      	cmp	r3, #4
 80028d2:	d104      	bne.n	80028de <HAL_TIM_PWM_Stop+0xa2>
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	2201      	movs	r2, #1
 80028d8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80028dc:	e00b      	b.n	80028f6 <HAL_TIM_PWM_Stop+0xba>
 80028de:	683b      	ldr	r3, [r7, #0]
 80028e0:	2b08      	cmp	r3, #8
 80028e2:	d104      	bne.n	80028ee <HAL_TIM_PWM_Stop+0xb2>
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	2201      	movs	r2, #1
 80028e8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80028ec:	e003      	b.n	80028f6 <HAL_TIM_PWM_Stop+0xba>
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	2201      	movs	r2, #1
 80028f2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80028f6:	2300      	movs	r3, #0
 80028f8:	4618      	mov	r0, r3
 80028fa:	3708      	adds	r7, #8
 80028fc:	46bd      	mov	sp, r7
 80028fe:	bd80      	pop	{r7, pc}
 8002900:	40012c00 	.word	0x40012c00

08002904 <HAL_TIM_IC_Init>:
 8002904:	b580      	push	{r7, lr}
 8002906:	b082      	sub	sp, #8
 8002908:	af00      	add	r7, sp, #0
 800290a:	6078      	str	r0, [r7, #4]
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	2b00      	cmp	r3, #0
 8002910:	d101      	bne.n	8002916 <HAL_TIM_IC_Init+0x12>
 8002912:	2301      	movs	r3, #1
 8002914:	e041      	b.n	800299a <HAL_TIM_IC_Init+0x96>
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800291c:	b2db      	uxtb	r3, r3
 800291e:	2b00      	cmp	r3, #0
 8002920:	d106      	bne.n	8002930 <HAL_TIM_IC_Init+0x2c>
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	2200      	movs	r2, #0
 8002926:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800292a:	6878      	ldr	r0, [r7, #4]
 800292c:	f000 f839 	bl	80029a2 <HAL_TIM_IC_MspInit>
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	2202      	movs	r2, #2
 8002934:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	681a      	ldr	r2, [r3, #0]
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	3304      	adds	r3, #4
 8002940:	4619      	mov	r1, r3
 8002942:	4610      	mov	r0, r2
 8002944:	f000 fd18 	bl	8003378 <TIM_Base_SetConfig>
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	2201      	movs	r2, #1
 800294c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	2201      	movs	r2, #1
 8002954:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	2201      	movs	r2, #1
 800295c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	2201      	movs	r2, #1
 8002964:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	2201      	movs	r2, #1
 800296c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	2201      	movs	r2, #1
 8002974:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	2201      	movs	r2, #1
 800297c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	2201      	movs	r2, #1
 8002984:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	2201      	movs	r2, #1
 800298c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	2201      	movs	r2, #1
 8002994:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002998:	2300      	movs	r3, #0
 800299a:	4618      	mov	r0, r3
 800299c:	3708      	adds	r7, #8
 800299e:	46bd      	mov	sp, r7
 80029a0:	bd80      	pop	{r7, pc}

080029a2 <HAL_TIM_IC_MspInit>:
 80029a2:	b480      	push	{r7}
 80029a4:	b083      	sub	sp, #12
 80029a6:	af00      	add	r7, sp, #0
 80029a8:	6078      	str	r0, [r7, #4]
 80029aa:	bf00      	nop
 80029ac:	370c      	adds	r7, #12
 80029ae:	46bd      	mov	sp, r7
 80029b0:	bc80      	pop	{r7}
 80029b2:	4770      	bx	lr

080029b4 <HAL_TIM_IC_Start>:
 80029b4:	b580      	push	{r7, lr}
 80029b6:	b084      	sub	sp, #16
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	6078      	str	r0, [r7, #4]
 80029bc:	6039      	str	r1, [r7, #0]
 80029be:	683b      	ldr	r3, [r7, #0]
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d104      	bne.n	80029ce <HAL_TIM_IC_Start+0x1a>
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80029ca:	b2db      	uxtb	r3, r3
 80029cc:	e013      	b.n	80029f6 <HAL_TIM_IC_Start+0x42>
 80029ce:	683b      	ldr	r3, [r7, #0]
 80029d0:	2b04      	cmp	r3, #4
 80029d2:	d104      	bne.n	80029de <HAL_TIM_IC_Start+0x2a>
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80029da:	b2db      	uxtb	r3, r3
 80029dc:	e00b      	b.n	80029f6 <HAL_TIM_IC_Start+0x42>
 80029de:	683b      	ldr	r3, [r7, #0]
 80029e0:	2b08      	cmp	r3, #8
 80029e2:	d104      	bne.n	80029ee <HAL_TIM_IC_Start+0x3a>
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80029ea:	b2db      	uxtb	r3, r3
 80029ec:	e003      	b.n	80029f6 <HAL_TIM_IC_Start+0x42>
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80029f4:	b2db      	uxtb	r3, r3
 80029f6:	73fb      	strb	r3, [r7, #15]
 80029f8:	683b      	ldr	r3, [r7, #0]
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d104      	bne.n	8002a08 <HAL_TIM_IC_Start+0x54>
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8002a04:	b2db      	uxtb	r3, r3
 8002a06:	e013      	b.n	8002a30 <HAL_TIM_IC_Start+0x7c>
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	2b04      	cmp	r3, #4
 8002a0c:	d104      	bne.n	8002a18 <HAL_TIM_IC_Start+0x64>
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8002a14:	b2db      	uxtb	r3, r3
 8002a16:	e00b      	b.n	8002a30 <HAL_TIM_IC_Start+0x7c>
 8002a18:	683b      	ldr	r3, [r7, #0]
 8002a1a:	2b08      	cmp	r3, #8
 8002a1c:	d104      	bne.n	8002a28 <HAL_TIM_IC_Start+0x74>
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8002a24:	b2db      	uxtb	r3, r3
 8002a26:	e003      	b.n	8002a30 <HAL_TIM_IC_Start+0x7c>
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8002a2e:	b2db      	uxtb	r3, r3
 8002a30:	73bb      	strb	r3, [r7, #14]
 8002a32:	7bfb      	ldrb	r3, [r7, #15]
 8002a34:	2b01      	cmp	r3, #1
 8002a36:	d102      	bne.n	8002a3e <HAL_TIM_IC_Start+0x8a>
 8002a38:	7bbb      	ldrb	r3, [r7, #14]
 8002a3a:	2b01      	cmp	r3, #1
 8002a3c:	d001      	beq.n	8002a42 <HAL_TIM_IC_Start+0x8e>
 8002a3e:	2301      	movs	r3, #1
 8002a40:	e06d      	b.n	8002b1e <HAL_TIM_IC_Start+0x16a>
 8002a42:	683b      	ldr	r3, [r7, #0]
 8002a44:	2b00      	cmp	r3, #0
 8002a46:	d104      	bne.n	8002a52 <HAL_TIM_IC_Start+0x9e>
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	2202      	movs	r2, #2
 8002a4c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002a50:	e013      	b.n	8002a7a <HAL_TIM_IC_Start+0xc6>
 8002a52:	683b      	ldr	r3, [r7, #0]
 8002a54:	2b04      	cmp	r3, #4
 8002a56:	d104      	bne.n	8002a62 <HAL_TIM_IC_Start+0xae>
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	2202      	movs	r2, #2
 8002a5c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002a60:	e00b      	b.n	8002a7a <HAL_TIM_IC_Start+0xc6>
 8002a62:	683b      	ldr	r3, [r7, #0]
 8002a64:	2b08      	cmp	r3, #8
 8002a66:	d104      	bne.n	8002a72 <HAL_TIM_IC_Start+0xbe>
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	2202      	movs	r2, #2
 8002a6c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002a70:	e003      	b.n	8002a7a <HAL_TIM_IC_Start+0xc6>
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	2202      	movs	r2, #2
 8002a76:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002a7a:	683b      	ldr	r3, [r7, #0]
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d104      	bne.n	8002a8a <HAL_TIM_IC_Start+0xd6>
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	2202      	movs	r2, #2
 8002a84:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002a88:	e013      	b.n	8002ab2 <HAL_TIM_IC_Start+0xfe>
 8002a8a:	683b      	ldr	r3, [r7, #0]
 8002a8c:	2b04      	cmp	r3, #4
 8002a8e:	d104      	bne.n	8002a9a <HAL_TIM_IC_Start+0xe6>
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	2202      	movs	r2, #2
 8002a94:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002a98:	e00b      	b.n	8002ab2 <HAL_TIM_IC_Start+0xfe>
 8002a9a:	683b      	ldr	r3, [r7, #0]
 8002a9c:	2b08      	cmp	r3, #8
 8002a9e:	d104      	bne.n	8002aaa <HAL_TIM_IC_Start+0xf6>
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	2202      	movs	r2, #2
 8002aa4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002aa8:	e003      	b.n	8002ab2 <HAL_TIM_IC_Start+0xfe>
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	2202      	movs	r2, #2
 8002aae:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	681b      	ldr	r3, [r3, #0]
 8002ab6:	2201      	movs	r2, #1
 8002ab8:	6839      	ldr	r1, [r7, #0]
 8002aba:	4618      	mov	r0, r3
 8002abc:	f001 f887 	bl	8003bce <TIM_CCxChannelCmd>
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	4a18      	ldr	r2, [pc, #96]	@ (8002b28 <HAL_TIM_IC_Start+0x174>)
 8002ac6:	4293      	cmp	r3, r2
 8002ac8:	d00e      	beq.n	8002ae8 <HAL_TIM_IC_Start+0x134>
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002ad2:	d009      	beq.n	8002ae8 <HAL_TIM_IC_Start+0x134>
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	4a14      	ldr	r2, [pc, #80]	@ (8002b2c <HAL_TIM_IC_Start+0x178>)
 8002ada:	4293      	cmp	r3, r2
 8002adc:	d004      	beq.n	8002ae8 <HAL_TIM_IC_Start+0x134>
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	4a13      	ldr	r2, [pc, #76]	@ (8002b30 <HAL_TIM_IC_Start+0x17c>)
 8002ae4:	4293      	cmp	r3, r2
 8002ae6:	d111      	bne.n	8002b0c <HAL_TIM_IC_Start+0x158>
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	689b      	ldr	r3, [r3, #8]
 8002aee:	f003 0307 	and.w	r3, r3, #7
 8002af2:	60bb      	str	r3, [r7, #8]
 8002af4:	68bb      	ldr	r3, [r7, #8]
 8002af6:	2b06      	cmp	r3, #6
 8002af8:	d010      	beq.n	8002b1c <HAL_TIM_IC_Start+0x168>
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	681a      	ldr	r2, [r3, #0]
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	681b      	ldr	r3, [r3, #0]
 8002b04:	f042 0201 	orr.w	r2, r2, #1
 8002b08:	601a      	str	r2, [r3, #0]
 8002b0a:	e007      	b.n	8002b1c <HAL_TIM_IC_Start+0x168>
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	681a      	ldr	r2, [r3, #0]
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	f042 0201 	orr.w	r2, r2, #1
 8002b1a:	601a      	str	r2, [r3, #0]
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	4618      	mov	r0, r3
 8002b20:	3710      	adds	r7, #16
 8002b22:	46bd      	mov	sp, r7
 8002b24:	bd80      	pop	{r7, pc}
 8002b26:	bf00      	nop
 8002b28:	40012c00 	.word	0x40012c00
 8002b2c:	40000400 	.word	0x40000400
 8002b30:	40000800 	.word	0x40000800

08002b34 <HAL_TIM_IC_Start_IT>:
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b084      	sub	sp, #16
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	6078      	str	r0, [r7, #4]
 8002b3c:	6039      	str	r1, [r7, #0]
 8002b3e:	2300      	movs	r3, #0
 8002b40:	73fb      	strb	r3, [r7, #15]
 8002b42:	683b      	ldr	r3, [r7, #0]
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	d104      	bne.n	8002b52 <HAL_TIM_IC_Start_IT+0x1e>
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8002b4e:	b2db      	uxtb	r3, r3
 8002b50:	e013      	b.n	8002b7a <HAL_TIM_IC_Start_IT+0x46>
 8002b52:	683b      	ldr	r3, [r7, #0]
 8002b54:	2b04      	cmp	r3, #4
 8002b56:	d104      	bne.n	8002b62 <HAL_TIM_IC_Start_IT+0x2e>
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8002b5e:	b2db      	uxtb	r3, r3
 8002b60:	e00b      	b.n	8002b7a <HAL_TIM_IC_Start_IT+0x46>
 8002b62:	683b      	ldr	r3, [r7, #0]
 8002b64:	2b08      	cmp	r3, #8
 8002b66:	d104      	bne.n	8002b72 <HAL_TIM_IC_Start_IT+0x3e>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002b6e:	b2db      	uxtb	r3, r3
 8002b70:	e003      	b.n	8002b7a <HAL_TIM_IC_Start_IT+0x46>
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002b78:	b2db      	uxtb	r3, r3
 8002b7a:	73bb      	strb	r3, [r7, #14]
 8002b7c:	683b      	ldr	r3, [r7, #0]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d104      	bne.n	8002b8c <HAL_TIM_IC_Start_IT+0x58>
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8002b88:	b2db      	uxtb	r3, r3
 8002b8a:	e013      	b.n	8002bb4 <HAL_TIM_IC_Start_IT+0x80>
 8002b8c:	683b      	ldr	r3, [r7, #0]
 8002b8e:	2b04      	cmp	r3, #4
 8002b90:	d104      	bne.n	8002b9c <HAL_TIM_IC_Start_IT+0x68>
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8002b98:	b2db      	uxtb	r3, r3
 8002b9a:	e00b      	b.n	8002bb4 <HAL_TIM_IC_Start_IT+0x80>
 8002b9c:	683b      	ldr	r3, [r7, #0]
 8002b9e:	2b08      	cmp	r3, #8
 8002ba0:	d104      	bne.n	8002bac <HAL_TIM_IC_Start_IT+0x78>
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8002ba8:	b2db      	uxtb	r3, r3
 8002baa:	e003      	b.n	8002bb4 <HAL_TIM_IC_Start_IT+0x80>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8002bb2:	b2db      	uxtb	r3, r3
 8002bb4:	737b      	strb	r3, [r7, #13]
 8002bb6:	7bbb      	ldrb	r3, [r7, #14]
 8002bb8:	2b01      	cmp	r3, #1
 8002bba:	d102      	bne.n	8002bc2 <HAL_TIM_IC_Start_IT+0x8e>
 8002bbc:	7b7b      	ldrb	r3, [r7, #13]
 8002bbe:	2b01      	cmp	r3, #1
 8002bc0:	d001      	beq.n	8002bc6 <HAL_TIM_IC_Start_IT+0x92>
 8002bc2:	2301      	movs	r3, #1
 8002bc4:	e0b8      	b.n	8002d38 <HAL_TIM_IC_Start_IT+0x204>
 8002bc6:	683b      	ldr	r3, [r7, #0]
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d104      	bne.n	8002bd6 <HAL_TIM_IC_Start_IT+0xa2>
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	2202      	movs	r2, #2
 8002bd0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002bd4:	e013      	b.n	8002bfe <HAL_TIM_IC_Start_IT+0xca>
 8002bd6:	683b      	ldr	r3, [r7, #0]
 8002bd8:	2b04      	cmp	r3, #4
 8002bda:	d104      	bne.n	8002be6 <HAL_TIM_IC_Start_IT+0xb2>
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	2202      	movs	r2, #2
 8002be0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002be4:	e00b      	b.n	8002bfe <HAL_TIM_IC_Start_IT+0xca>
 8002be6:	683b      	ldr	r3, [r7, #0]
 8002be8:	2b08      	cmp	r3, #8
 8002bea:	d104      	bne.n	8002bf6 <HAL_TIM_IC_Start_IT+0xc2>
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	2202      	movs	r2, #2
 8002bf0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002bf4:	e003      	b.n	8002bfe <HAL_TIM_IC_Start_IT+0xca>
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	2202      	movs	r2, #2
 8002bfa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002bfe:	683b      	ldr	r3, [r7, #0]
 8002c00:	2b00      	cmp	r3, #0
 8002c02:	d104      	bne.n	8002c0e <HAL_TIM_IC_Start_IT+0xda>
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	2202      	movs	r2, #2
 8002c08:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002c0c:	e013      	b.n	8002c36 <HAL_TIM_IC_Start_IT+0x102>
 8002c0e:	683b      	ldr	r3, [r7, #0]
 8002c10:	2b04      	cmp	r3, #4
 8002c12:	d104      	bne.n	8002c1e <HAL_TIM_IC_Start_IT+0xea>
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	2202      	movs	r2, #2
 8002c18:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002c1c:	e00b      	b.n	8002c36 <HAL_TIM_IC_Start_IT+0x102>
 8002c1e:	683b      	ldr	r3, [r7, #0]
 8002c20:	2b08      	cmp	r3, #8
 8002c22:	d104      	bne.n	8002c2e <HAL_TIM_IC_Start_IT+0xfa>
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	2202      	movs	r2, #2
 8002c28:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002c2c:	e003      	b.n	8002c36 <HAL_TIM_IC_Start_IT+0x102>
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	2202      	movs	r2, #2
 8002c32:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002c36:	683b      	ldr	r3, [r7, #0]
 8002c38:	2b0c      	cmp	r3, #12
 8002c3a:	d841      	bhi.n	8002cc0 <HAL_TIM_IC_Start_IT+0x18c>
 8002c3c:	a201      	add	r2, pc, #4	@ (adr r2, 8002c44 <HAL_TIM_IC_Start_IT+0x110>)
 8002c3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002c42:	bf00      	nop
 8002c44:	08002c79 	.word	0x08002c79
 8002c48:	08002cc1 	.word	0x08002cc1
 8002c4c:	08002cc1 	.word	0x08002cc1
 8002c50:	08002cc1 	.word	0x08002cc1
 8002c54:	08002c8b 	.word	0x08002c8b
 8002c58:	08002cc1 	.word	0x08002cc1
 8002c5c:	08002cc1 	.word	0x08002cc1
 8002c60:	08002cc1 	.word	0x08002cc1
 8002c64:	08002c9d 	.word	0x08002c9d
 8002c68:	08002cc1 	.word	0x08002cc1
 8002c6c:	08002cc1 	.word	0x08002cc1
 8002c70:	08002cc1 	.word	0x08002cc1
 8002c74:	08002caf 	.word	0x08002caf
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	68da      	ldr	r2, [r3, #12]
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	f042 0202 	orr.w	r2, r2, #2
 8002c86:	60da      	str	r2, [r3, #12]
 8002c88:	e01d      	b.n	8002cc6 <HAL_TIM_IC_Start_IT+0x192>
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	68da      	ldr	r2, [r3, #12]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f042 0204 	orr.w	r2, r2, #4
 8002c98:	60da      	str	r2, [r3, #12]
 8002c9a:	e014      	b.n	8002cc6 <HAL_TIM_IC_Start_IT+0x192>
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	68da      	ldr	r2, [r3, #12]
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	f042 0208 	orr.w	r2, r2, #8
 8002caa:	60da      	str	r2, [r3, #12]
 8002cac:	e00b      	b.n	8002cc6 <HAL_TIM_IC_Start_IT+0x192>
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	68da      	ldr	r2, [r3, #12]
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	f042 0210 	orr.w	r2, r2, #16
 8002cbc:	60da      	str	r2, [r3, #12]
 8002cbe:	e002      	b.n	8002cc6 <HAL_TIM_IC_Start_IT+0x192>
 8002cc0:	2301      	movs	r3, #1
 8002cc2:	73fb      	strb	r3, [r7, #15]
 8002cc4:	bf00      	nop
 8002cc6:	7bfb      	ldrb	r3, [r7, #15]
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	d134      	bne.n	8002d36 <HAL_TIM_IC_Start_IT+0x202>
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	2201      	movs	r2, #1
 8002cd2:	6839      	ldr	r1, [r7, #0]
 8002cd4:	4618      	mov	r0, r3
 8002cd6:	f000 ff7a 	bl	8003bce <TIM_CCxChannelCmd>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	4a18      	ldr	r2, [pc, #96]	@ (8002d40 <HAL_TIM_IC_Start_IT+0x20c>)
 8002ce0:	4293      	cmp	r3, r2
 8002ce2:	d00e      	beq.n	8002d02 <HAL_TIM_IC_Start_IT+0x1ce>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002cec:	d009      	beq.n	8002d02 <HAL_TIM_IC_Start_IT+0x1ce>
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	4a14      	ldr	r2, [pc, #80]	@ (8002d44 <HAL_TIM_IC_Start_IT+0x210>)
 8002cf4:	4293      	cmp	r3, r2
 8002cf6:	d004      	beq.n	8002d02 <HAL_TIM_IC_Start_IT+0x1ce>
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	4a12      	ldr	r2, [pc, #72]	@ (8002d48 <HAL_TIM_IC_Start_IT+0x214>)
 8002cfe:	4293      	cmp	r3, r2
 8002d00:	d111      	bne.n	8002d26 <HAL_TIM_IC_Start_IT+0x1f2>
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	689b      	ldr	r3, [r3, #8]
 8002d08:	f003 0307 	and.w	r3, r3, #7
 8002d0c:	60bb      	str	r3, [r7, #8]
 8002d0e:	68bb      	ldr	r3, [r7, #8]
 8002d10:	2b06      	cmp	r3, #6
 8002d12:	d010      	beq.n	8002d36 <HAL_TIM_IC_Start_IT+0x202>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	681a      	ldr	r2, [r3, #0]
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	f042 0201 	orr.w	r2, r2, #1
 8002d22:	601a      	str	r2, [r3, #0]
 8002d24:	e007      	b.n	8002d36 <HAL_TIM_IC_Start_IT+0x202>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	681a      	ldr	r2, [r3, #0]
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	f042 0201 	orr.w	r2, r2, #1
 8002d34:	601a      	str	r2, [r3, #0]
 8002d36:	7bfb      	ldrb	r3, [r7, #15]
 8002d38:	4618      	mov	r0, r3
 8002d3a:	3710      	adds	r7, #16
 8002d3c:	46bd      	mov	sp, r7
 8002d3e:	bd80      	pop	{r7, pc}
 8002d40:	40012c00 	.word	0x40012c00
 8002d44:	40000400 	.word	0x40000400
 8002d48:	40000800 	.word	0x40000800

08002d4c <HAL_TIM_IRQHandler>:
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	b084      	sub	sp, #16
 8002d50:	af00      	add	r7, sp, #0
 8002d52:	6078      	str	r0, [r7, #4]
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	68db      	ldr	r3, [r3, #12]
 8002d5a:	60fb      	str	r3, [r7, #12]
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	691b      	ldr	r3, [r3, #16]
 8002d62:	60bb      	str	r3, [r7, #8]
 8002d64:	68bb      	ldr	r3, [r7, #8]
 8002d66:	f003 0302 	and.w	r3, r3, #2
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d020      	beq.n	8002db0 <HAL_TIM_IRQHandler+0x64>
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	f003 0302 	and.w	r3, r3, #2
 8002d74:	2b00      	cmp	r3, #0
 8002d76:	d01b      	beq.n	8002db0 <HAL_TIM_IRQHandler+0x64>
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f06f 0202 	mvn.w	r2, #2
 8002d80:	611a      	str	r2, [r3, #16]
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	2201      	movs	r2, #1
 8002d86:	771a      	strb	r2, [r3, #28]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	699b      	ldr	r3, [r3, #24]
 8002d8e:	f003 0303 	and.w	r3, r3, #3
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d003      	beq.n	8002d9e <HAL_TIM_IRQHandler+0x52>
 8002d96:	6878      	ldr	r0, [r7, #4]
 8002d98:	f000 fad2 	bl	8003340 <HAL_TIM_IC_CaptureCallback>
 8002d9c:	e005      	b.n	8002daa <HAL_TIM_IRQHandler+0x5e>
 8002d9e:	6878      	ldr	r0, [r7, #4]
 8002da0:	f000 fac5 	bl	800332e <HAL_TIM_OC_DelayElapsedCallback>
 8002da4:	6878      	ldr	r0, [r7, #4]
 8002da6:	f000 fad4 	bl	8003352 <HAL_TIM_PWM_PulseFinishedCallback>
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	2200      	movs	r2, #0
 8002dae:	771a      	strb	r2, [r3, #28]
 8002db0:	68bb      	ldr	r3, [r7, #8]
 8002db2:	f003 0304 	and.w	r3, r3, #4
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d020      	beq.n	8002dfc <HAL_TIM_IRQHandler+0xb0>
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	f003 0304 	and.w	r3, r3, #4
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	d01b      	beq.n	8002dfc <HAL_TIM_IRQHandler+0xb0>
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	f06f 0204 	mvn.w	r2, #4
 8002dcc:	611a      	str	r2, [r3, #16]
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	2202      	movs	r2, #2
 8002dd2:	771a      	strb	r2, [r3, #28]
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	699b      	ldr	r3, [r3, #24]
 8002dda:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002dde:	2b00      	cmp	r3, #0
 8002de0:	d003      	beq.n	8002dea <HAL_TIM_IRQHandler+0x9e>
 8002de2:	6878      	ldr	r0, [r7, #4]
 8002de4:	f000 faac 	bl	8003340 <HAL_TIM_IC_CaptureCallback>
 8002de8:	e005      	b.n	8002df6 <HAL_TIM_IRQHandler+0xaa>
 8002dea:	6878      	ldr	r0, [r7, #4]
 8002dec:	f000 fa9f 	bl	800332e <HAL_TIM_OC_DelayElapsedCallback>
 8002df0:	6878      	ldr	r0, [r7, #4]
 8002df2:	f000 faae 	bl	8003352 <HAL_TIM_PWM_PulseFinishedCallback>
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	2200      	movs	r2, #0
 8002dfa:	771a      	strb	r2, [r3, #28]
 8002dfc:	68bb      	ldr	r3, [r7, #8]
 8002dfe:	f003 0308 	and.w	r3, r3, #8
 8002e02:	2b00      	cmp	r3, #0
 8002e04:	d020      	beq.n	8002e48 <HAL_TIM_IRQHandler+0xfc>
 8002e06:	68fb      	ldr	r3, [r7, #12]
 8002e08:	f003 0308 	and.w	r3, r3, #8
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d01b      	beq.n	8002e48 <HAL_TIM_IRQHandler+0xfc>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	f06f 0208 	mvn.w	r2, #8
 8002e18:	611a      	str	r2, [r3, #16]
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	2204      	movs	r2, #4
 8002e1e:	771a      	strb	r2, [r3, #28]
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	69db      	ldr	r3, [r3, #28]
 8002e26:	f003 0303 	and.w	r3, r3, #3
 8002e2a:	2b00      	cmp	r3, #0
 8002e2c:	d003      	beq.n	8002e36 <HAL_TIM_IRQHandler+0xea>
 8002e2e:	6878      	ldr	r0, [r7, #4]
 8002e30:	f000 fa86 	bl	8003340 <HAL_TIM_IC_CaptureCallback>
 8002e34:	e005      	b.n	8002e42 <HAL_TIM_IRQHandler+0xf6>
 8002e36:	6878      	ldr	r0, [r7, #4]
 8002e38:	f000 fa79 	bl	800332e <HAL_TIM_OC_DelayElapsedCallback>
 8002e3c:	6878      	ldr	r0, [r7, #4]
 8002e3e:	f000 fa88 	bl	8003352 <HAL_TIM_PWM_PulseFinishedCallback>
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	2200      	movs	r2, #0
 8002e46:	771a      	strb	r2, [r3, #28]
 8002e48:	68bb      	ldr	r3, [r7, #8]
 8002e4a:	f003 0310 	and.w	r3, r3, #16
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d020      	beq.n	8002e94 <HAL_TIM_IRQHandler+0x148>
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	f003 0310 	and.w	r3, r3, #16
 8002e58:	2b00      	cmp	r3, #0
 8002e5a:	d01b      	beq.n	8002e94 <HAL_TIM_IRQHandler+0x148>
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	f06f 0210 	mvn.w	r2, #16
 8002e64:	611a      	str	r2, [r3, #16]
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	2208      	movs	r2, #8
 8002e6a:	771a      	strb	r2, [r3, #28]
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	69db      	ldr	r3, [r3, #28]
 8002e72:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002e76:	2b00      	cmp	r3, #0
 8002e78:	d003      	beq.n	8002e82 <HAL_TIM_IRQHandler+0x136>
 8002e7a:	6878      	ldr	r0, [r7, #4]
 8002e7c:	f000 fa60 	bl	8003340 <HAL_TIM_IC_CaptureCallback>
 8002e80:	e005      	b.n	8002e8e <HAL_TIM_IRQHandler+0x142>
 8002e82:	6878      	ldr	r0, [r7, #4]
 8002e84:	f000 fa53 	bl	800332e <HAL_TIM_OC_DelayElapsedCallback>
 8002e88:	6878      	ldr	r0, [r7, #4]
 8002e8a:	f000 fa62 	bl	8003352 <HAL_TIM_PWM_PulseFinishedCallback>
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	2200      	movs	r2, #0
 8002e92:	771a      	strb	r2, [r3, #28]
 8002e94:	68bb      	ldr	r3, [r7, #8]
 8002e96:	f003 0301 	and.w	r3, r3, #1
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d00c      	beq.n	8002eb8 <HAL_TIM_IRQHandler+0x16c>
 8002e9e:	68fb      	ldr	r3, [r7, #12]
 8002ea0:	f003 0301 	and.w	r3, r3, #1
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d007      	beq.n	8002eb8 <HAL_TIM_IRQHandler+0x16c>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	f06f 0201 	mvn.w	r2, #1
 8002eb0:	611a      	str	r2, [r3, #16]
 8002eb2:	6878      	ldr	r0, [r7, #4]
 8002eb4:	f7fd fce2 	bl	800087c <HAL_TIM_PeriodElapsedCallback>
 8002eb8:	68bb      	ldr	r3, [r7, #8]
 8002eba:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d00c      	beq.n	8002edc <HAL_TIM_IRQHandler+0x190>
 8002ec2:	68fb      	ldr	r3, [r7, #12]
 8002ec4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d007      	beq.n	8002edc <HAL_TIM_IRQHandler+0x190>
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8002ed4:	611a      	str	r2, [r3, #16]
 8002ed6:	6878      	ldr	r0, [r7, #4]
 8002ed8:	f000 ff05 	bl	8003ce6 <HAL_TIMEx_BreakCallback>
 8002edc:	68bb      	ldr	r3, [r7, #8]
 8002ede:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d00c      	beq.n	8002f00 <HAL_TIM_IRQHandler+0x1b4>
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d007      	beq.n	8002f00 <HAL_TIM_IRQHandler+0x1b4>
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8002ef8:	611a      	str	r2, [r3, #16]
 8002efa:	6878      	ldr	r0, [r7, #4]
 8002efc:	f000 fa32 	bl	8003364 <HAL_TIM_TriggerCallback>
 8002f00:	68bb      	ldr	r3, [r7, #8]
 8002f02:	f003 0320 	and.w	r3, r3, #32
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d00c      	beq.n	8002f24 <HAL_TIM_IRQHandler+0x1d8>
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	f003 0320 	and.w	r3, r3, #32
 8002f10:	2b00      	cmp	r3, #0
 8002f12:	d007      	beq.n	8002f24 <HAL_TIM_IRQHandler+0x1d8>
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	f06f 0220 	mvn.w	r2, #32
 8002f1c:	611a      	str	r2, [r3, #16]
 8002f1e:	6878      	ldr	r0, [r7, #4]
 8002f20:	f000 fed8 	bl	8003cd4 <HAL_TIMEx_CommutCallback>
 8002f24:	bf00      	nop
 8002f26:	3710      	adds	r7, #16
 8002f28:	46bd      	mov	sp, r7
 8002f2a:	bd80      	pop	{r7, pc}

08002f2c <HAL_TIM_OC_ConfigChannel>:
 8002f2c:	b580      	push	{r7, lr}
 8002f2e:	b086      	sub	sp, #24
 8002f30:	af00      	add	r7, sp, #0
 8002f32:	60f8      	str	r0, [r7, #12]
 8002f34:	60b9      	str	r1, [r7, #8]
 8002f36:	607a      	str	r2, [r7, #4]
 8002f38:	2300      	movs	r3, #0
 8002f3a:	75fb      	strb	r3, [r7, #23]
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002f42:	2b01      	cmp	r3, #1
 8002f44:	d101      	bne.n	8002f4a <HAL_TIM_OC_ConfigChannel+0x1e>
 8002f46:	2302      	movs	r3, #2
 8002f48:	e048      	b.n	8002fdc <HAL_TIM_OC_ConfigChannel+0xb0>
 8002f4a:	68fb      	ldr	r3, [r7, #12]
 8002f4c:	2201      	movs	r2, #1
 8002f4e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	2b0c      	cmp	r3, #12
 8002f56:	d839      	bhi.n	8002fcc <HAL_TIM_OC_ConfigChannel+0xa0>
 8002f58:	a201      	add	r2, pc, #4	@ (adr r2, 8002f60 <HAL_TIM_OC_ConfigChannel+0x34>)
 8002f5a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002f5e:	bf00      	nop
 8002f60:	08002f95 	.word	0x08002f95
 8002f64:	08002fcd 	.word	0x08002fcd
 8002f68:	08002fcd 	.word	0x08002fcd
 8002f6c:	08002fcd 	.word	0x08002fcd
 8002f70:	08002fa3 	.word	0x08002fa3
 8002f74:	08002fcd 	.word	0x08002fcd
 8002f78:	08002fcd 	.word	0x08002fcd
 8002f7c:	08002fcd 	.word	0x08002fcd
 8002f80:	08002fb1 	.word	0x08002fb1
 8002f84:	08002fcd 	.word	0x08002fcd
 8002f88:	08002fcd 	.word	0x08002fcd
 8002f8c:	08002fcd 	.word	0x08002fcd
 8002f90:	08002fbf 	.word	0x08002fbf
 8002f94:	68fb      	ldr	r3, [r7, #12]
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	68b9      	ldr	r1, [r7, #8]
 8002f9a:	4618      	mov	r0, r3
 8002f9c:	f000 fa5a 	bl	8003454 <TIM_OC1_SetConfig>
 8002fa0:	e017      	b.n	8002fd2 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002fa2:	68fb      	ldr	r3, [r7, #12]
 8002fa4:	681b      	ldr	r3, [r3, #0]
 8002fa6:	68b9      	ldr	r1, [r7, #8]
 8002fa8:	4618      	mov	r0, r3
 8002faa:	f000 fab9 	bl	8003520 <TIM_OC2_SetConfig>
 8002fae:	e010      	b.n	8002fd2 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002fb0:	68fb      	ldr	r3, [r7, #12]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	68b9      	ldr	r1, [r7, #8]
 8002fb6:	4618      	mov	r0, r3
 8002fb8:	f000 fb1c 	bl	80035f4 <TIM_OC3_SetConfig>
 8002fbc:	e009      	b.n	8002fd2 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002fbe:	68fb      	ldr	r3, [r7, #12]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	68b9      	ldr	r1, [r7, #8]
 8002fc4:	4618      	mov	r0, r3
 8002fc6:	f000 fb7f 	bl	80036c8 <TIM_OC4_SetConfig>
 8002fca:	e002      	b.n	8002fd2 <HAL_TIM_OC_ConfigChannel+0xa6>
 8002fcc:	2301      	movs	r3, #1
 8002fce:	75fb      	strb	r3, [r7, #23]
 8002fd0:	bf00      	nop
 8002fd2:	68fb      	ldr	r3, [r7, #12]
 8002fd4:	2200      	movs	r2, #0
 8002fd6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002fda:	7dfb      	ldrb	r3, [r7, #23]
 8002fdc:	4618      	mov	r0, r3
 8002fde:	3718      	adds	r7, #24
 8002fe0:	46bd      	mov	sp, r7
 8002fe2:	bd80      	pop	{r7, pc}

08002fe4 <HAL_TIM_IC_ConfigChannel>:
 8002fe4:	b580      	push	{r7, lr}
 8002fe6:	b086      	sub	sp, #24
 8002fe8:	af00      	add	r7, sp, #0
 8002fea:	60f8      	str	r0, [r7, #12]
 8002fec:	60b9      	str	r1, [r7, #8]
 8002fee:	607a      	str	r2, [r7, #4]
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	75fb      	strb	r3, [r7, #23]
 8002ff4:	68fb      	ldr	r3, [r7, #12]
 8002ff6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ffa:	2b01      	cmp	r3, #1
 8002ffc:	d101      	bne.n	8003002 <HAL_TIM_IC_ConfigChannel+0x1e>
 8002ffe:	2302      	movs	r3, #2
 8003000:	e088      	b.n	8003114 <HAL_TIM_IC_ConfigChannel+0x130>
 8003002:	68fb      	ldr	r3, [r7, #12]
 8003004:	2201      	movs	r2, #1
 8003006:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	2b00      	cmp	r3, #0
 800300e:	d11b      	bne.n	8003048 <HAL_TIM_IC_ConfigChannel+0x64>
 8003010:	68fb      	ldr	r3, [r7, #12]
 8003012:	6818      	ldr	r0, [r3, #0]
 8003014:	68bb      	ldr	r3, [r7, #8]
 8003016:	6819      	ldr	r1, [r3, #0]
 8003018:	68bb      	ldr	r3, [r7, #8]
 800301a:	685a      	ldr	r2, [r3, #4]
 800301c:	68bb      	ldr	r3, [r7, #8]
 800301e:	68db      	ldr	r3, [r3, #12]
 8003020:	f000 fc32 	bl	8003888 <TIM_TI1_SetConfig>
 8003024:	68fb      	ldr	r3, [r7, #12]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	699a      	ldr	r2, [r3, #24]
 800302a:	68fb      	ldr	r3, [r7, #12]
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	f022 020c 	bic.w	r2, r2, #12
 8003032:	619a      	str	r2, [r3, #24]
 8003034:	68fb      	ldr	r3, [r7, #12]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	6999      	ldr	r1, [r3, #24]
 800303a:	68bb      	ldr	r3, [r7, #8]
 800303c:	689a      	ldr	r2, [r3, #8]
 800303e:	68fb      	ldr	r3, [r7, #12]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	430a      	orrs	r2, r1
 8003044:	619a      	str	r2, [r3, #24]
 8003046:	e060      	b.n	800310a <HAL_TIM_IC_ConfigChannel+0x126>
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	2b04      	cmp	r3, #4
 800304c:	d11c      	bne.n	8003088 <HAL_TIM_IC_ConfigChannel+0xa4>
 800304e:	68fb      	ldr	r3, [r7, #12]
 8003050:	6818      	ldr	r0, [r3, #0]
 8003052:	68bb      	ldr	r3, [r7, #8]
 8003054:	6819      	ldr	r1, [r3, #0]
 8003056:	68bb      	ldr	r3, [r7, #8]
 8003058:	685a      	ldr	r2, [r3, #4]
 800305a:	68bb      	ldr	r3, [r7, #8]
 800305c:	68db      	ldr	r3, [r3, #12]
 800305e:	f000 fc9b 	bl	8003998 <TIM_TI2_SetConfig>
 8003062:	68fb      	ldr	r3, [r7, #12]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	699a      	ldr	r2, [r3, #24]
 8003068:	68fb      	ldr	r3, [r7, #12]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 8003070:	619a      	str	r2, [r3, #24]
 8003072:	68fb      	ldr	r3, [r7, #12]
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	6999      	ldr	r1, [r3, #24]
 8003078:	68bb      	ldr	r3, [r7, #8]
 800307a:	689b      	ldr	r3, [r3, #8]
 800307c:	021a      	lsls	r2, r3, #8
 800307e:	68fb      	ldr	r3, [r7, #12]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	430a      	orrs	r2, r1
 8003084:	619a      	str	r2, [r3, #24]
 8003086:	e040      	b.n	800310a <HAL_TIM_IC_ConfigChannel+0x126>
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	2b08      	cmp	r3, #8
 800308c:	d11b      	bne.n	80030c6 <HAL_TIM_IC_ConfigChannel+0xe2>
 800308e:	68fb      	ldr	r3, [r7, #12]
 8003090:	6818      	ldr	r0, [r3, #0]
 8003092:	68bb      	ldr	r3, [r7, #8]
 8003094:	6819      	ldr	r1, [r3, #0]
 8003096:	68bb      	ldr	r3, [r7, #8]
 8003098:	685a      	ldr	r2, [r3, #4]
 800309a:	68bb      	ldr	r3, [r7, #8]
 800309c:	68db      	ldr	r3, [r3, #12]
 800309e:	f000 fce6 	bl	8003a6e <TIM_TI3_SetConfig>
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	69da      	ldr	r2, [r3, #28]
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f022 020c 	bic.w	r2, r2, #12
 80030b0:	61da      	str	r2, [r3, #28]
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	69d9      	ldr	r1, [r3, #28]
 80030b8:	68bb      	ldr	r3, [r7, #8]
 80030ba:	689a      	ldr	r2, [r3, #8]
 80030bc:	68fb      	ldr	r3, [r7, #12]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	430a      	orrs	r2, r1
 80030c2:	61da      	str	r2, [r3, #28]
 80030c4:	e021      	b.n	800310a <HAL_TIM_IC_ConfigChannel+0x126>
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	2b0c      	cmp	r3, #12
 80030ca:	d11c      	bne.n	8003106 <HAL_TIM_IC_ConfigChannel+0x122>
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	6818      	ldr	r0, [r3, #0]
 80030d0:	68bb      	ldr	r3, [r7, #8]
 80030d2:	6819      	ldr	r1, [r3, #0]
 80030d4:	68bb      	ldr	r3, [r7, #8]
 80030d6:	685a      	ldr	r2, [r3, #4]
 80030d8:	68bb      	ldr	r3, [r7, #8]
 80030da:	68db      	ldr	r3, [r3, #12]
 80030dc:	f000 fd02 	bl	8003ae4 <TIM_TI4_SetConfig>
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	69da      	ldr	r2, [r3, #28]
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80030ee:	61da      	str	r2, [r3, #28]
 80030f0:	68fb      	ldr	r3, [r7, #12]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	69d9      	ldr	r1, [r3, #28]
 80030f6:	68bb      	ldr	r3, [r7, #8]
 80030f8:	689b      	ldr	r3, [r3, #8]
 80030fa:	021a      	lsls	r2, r3, #8
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	430a      	orrs	r2, r1
 8003102:	61da      	str	r2, [r3, #28]
 8003104:	e001      	b.n	800310a <HAL_TIM_IC_ConfigChannel+0x126>
 8003106:	2301      	movs	r3, #1
 8003108:	75fb      	strb	r3, [r7, #23]
 800310a:	68fb      	ldr	r3, [r7, #12]
 800310c:	2200      	movs	r2, #0
 800310e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003112:	7dfb      	ldrb	r3, [r7, #23]
 8003114:	4618      	mov	r0, r3
 8003116:	3718      	adds	r7, #24
 8003118:	46bd      	mov	sp, r7
 800311a:	bd80      	pop	{r7, pc}

0800311c <HAL_TIM_ConfigClockSource>:
 800311c:	b580      	push	{r7, lr}
 800311e:	b084      	sub	sp, #16
 8003120:	af00      	add	r7, sp, #0
 8003122:	6078      	str	r0, [r7, #4]
 8003124:	6039      	str	r1, [r7, #0]
 8003126:	2300      	movs	r3, #0
 8003128:	73fb      	strb	r3, [r7, #15]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003130:	2b01      	cmp	r3, #1
 8003132:	d101      	bne.n	8003138 <HAL_TIM_ConfigClockSource+0x1c>
 8003134:	2302      	movs	r3, #2
 8003136:	e0b4      	b.n	80032a2 <HAL_TIM_ConfigClockSource+0x186>
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	2201      	movs	r2, #1
 800313c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	2202      	movs	r2, #2
 8003144:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	689b      	ldr	r3, [r3, #8]
 800314e:	60bb      	str	r3, [r7, #8]
 8003150:	68bb      	ldr	r3, [r7, #8]
 8003152:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8003156:	60bb      	str	r3, [r7, #8]
 8003158:	68bb      	ldr	r3, [r7, #8]
 800315a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800315e:	60bb      	str	r3, [r7, #8]
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	68ba      	ldr	r2, [r7, #8]
 8003166:	609a      	str	r2, [r3, #8]
 8003168:	683b      	ldr	r3, [r7, #0]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003170:	d03e      	beq.n	80031f0 <HAL_TIM_ConfigClockSource+0xd4>
 8003172:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003176:	f200 8087 	bhi.w	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 800317a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800317e:	f000 8086 	beq.w	800328e <HAL_TIM_ConfigClockSource+0x172>
 8003182:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003186:	d87f      	bhi.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 8003188:	2b70      	cmp	r3, #112	@ 0x70
 800318a:	d01a      	beq.n	80031c2 <HAL_TIM_ConfigClockSource+0xa6>
 800318c:	2b70      	cmp	r3, #112	@ 0x70
 800318e:	d87b      	bhi.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 8003190:	2b60      	cmp	r3, #96	@ 0x60
 8003192:	d050      	beq.n	8003236 <HAL_TIM_ConfigClockSource+0x11a>
 8003194:	2b60      	cmp	r3, #96	@ 0x60
 8003196:	d877      	bhi.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 8003198:	2b50      	cmp	r3, #80	@ 0x50
 800319a:	d03c      	beq.n	8003216 <HAL_TIM_ConfigClockSource+0xfa>
 800319c:	2b50      	cmp	r3, #80	@ 0x50
 800319e:	d873      	bhi.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 80031a0:	2b40      	cmp	r3, #64	@ 0x40
 80031a2:	d058      	beq.n	8003256 <HAL_TIM_ConfigClockSource+0x13a>
 80031a4:	2b40      	cmp	r3, #64	@ 0x40
 80031a6:	d86f      	bhi.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 80031a8:	2b30      	cmp	r3, #48	@ 0x30
 80031aa:	d064      	beq.n	8003276 <HAL_TIM_ConfigClockSource+0x15a>
 80031ac:	2b30      	cmp	r3, #48	@ 0x30
 80031ae:	d86b      	bhi.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 80031b0:	2b20      	cmp	r3, #32
 80031b2:	d060      	beq.n	8003276 <HAL_TIM_ConfigClockSource+0x15a>
 80031b4:	2b20      	cmp	r3, #32
 80031b6:	d867      	bhi.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d05c      	beq.n	8003276 <HAL_TIM_ConfigClockSource+0x15a>
 80031bc:	2b10      	cmp	r3, #16
 80031be:	d05a      	beq.n	8003276 <HAL_TIM_ConfigClockSource+0x15a>
 80031c0:	e062      	b.n	8003288 <HAL_TIM_ConfigClockSource+0x16c>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	6818      	ldr	r0, [r3, #0]
 80031c6:	683b      	ldr	r3, [r7, #0]
 80031c8:	6899      	ldr	r1, [r3, #8]
 80031ca:	683b      	ldr	r3, [r7, #0]
 80031cc:	685a      	ldr	r2, [r3, #4]
 80031ce:	683b      	ldr	r3, [r7, #0]
 80031d0:	68db      	ldr	r3, [r3, #12]
 80031d2:	f000 fcdd 	bl	8003b90 <TIM_ETR_SetConfig>
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	689b      	ldr	r3, [r3, #8]
 80031dc:	60bb      	str	r3, [r7, #8]
 80031de:	68bb      	ldr	r3, [r7, #8]
 80031e0:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80031e4:	60bb      	str	r3, [r7, #8]
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	68ba      	ldr	r2, [r7, #8]
 80031ec:	609a      	str	r2, [r3, #8]
 80031ee:	e04f      	b.n	8003290 <HAL_TIM_ConfigClockSource+0x174>
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	6818      	ldr	r0, [r3, #0]
 80031f4:	683b      	ldr	r3, [r7, #0]
 80031f6:	6899      	ldr	r1, [r3, #8]
 80031f8:	683b      	ldr	r3, [r7, #0]
 80031fa:	685a      	ldr	r2, [r3, #4]
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	68db      	ldr	r3, [r3, #12]
 8003200:	f000 fcc6 	bl	8003b90 <TIM_ETR_SetConfig>
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	689a      	ldr	r2, [r3, #8]
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003212:	609a      	str	r2, [r3, #8]
 8003214:	e03c      	b.n	8003290 <HAL_TIM_ConfigClockSource+0x174>
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	6818      	ldr	r0, [r3, #0]
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	6859      	ldr	r1, [r3, #4]
 800321e:	683b      	ldr	r3, [r7, #0]
 8003220:	68db      	ldr	r3, [r3, #12]
 8003222:	461a      	mov	r2, r3
 8003224:	f000 fb8a 	bl	800393c <TIM_TI1_ConfigInputStage>
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	2150      	movs	r1, #80	@ 0x50
 800322e:	4618      	mov	r0, r3
 8003230:	f000 fc94 	bl	8003b5c <TIM_ITRx_SetConfig>
 8003234:	e02c      	b.n	8003290 <HAL_TIM_ConfigClockSource+0x174>
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	6818      	ldr	r0, [r3, #0]
 800323a:	683b      	ldr	r3, [r7, #0]
 800323c:	6859      	ldr	r1, [r3, #4]
 800323e:	683b      	ldr	r3, [r7, #0]
 8003240:	68db      	ldr	r3, [r3, #12]
 8003242:	461a      	mov	r2, r3
 8003244:	f000 fbe4 	bl	8003a10 <TIM_TI2_ConfigInputStage>
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	2160      	movs	r1, #96	@ 0x60
 800324e:	4618      	mov	r0, r3
 8003250:	f000 fc84 	bl	8003b5c <TIM_ITRx_SetConfig>
 8003254:	e01c      	b.n	8003290 <HAL_TIM_ConfigClockSource+0x174>
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	6818      	ldr	r0, [r3, #0]
 800325a:	683b      	ldr	r3, [r7, #0]
 800325c:	6859      	ldr	r1, [r3, #4]
 800325e:	683b      	ldr	r3, [r7, #0]
 8003260:	68db      	ldr	r3, [r3, #12]
 8003262:	461a      	mov	r2, r3
 8003264:	f000 fb6a 	bl	800393c <TIM_TI1_ConfigInputStage>
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	2140      	movs	r1, #64	@ 0x40
 800326e:	4618      	mov	r0, r3
 8003270:	f000 fc74 	bl	8003b5c <TIM_ITRx_SetConfig>
 8003274:	e00c      	b.n	8003290 <HAL_TIM_ConfigClockSource+0x174>
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681a      	ldr	r2, [r3, #0]
 800327a:	683b      	ldr	r3, [r7, #0]
 800327c:	681b      	ldr	r3, [r3, #0]
 800327e:	4619      	mov	r1, r3
 8003280:	4610      	mov	r0, r2
 8003282:	f000 fc6b 	bl	8003b5c <TIM_ITRx_SetConfig>
 8003286:	e003      	b.n	8003290 <HAL_TIM_ConfigClockSource+0x174>
 8003288:	2301      	movs	r3, #1
 800328a:	73fb      	strb	r3, [r7, #15]
 800328c:	e000      	b.n	8003290 <HAL_TIM_ConfigClockSource+0x174>
 800328e:	bf00      	nop
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	2201      	movs	r2, #1
 8003294:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	2200      	movs	r2, #0
 800329c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80032a0:	7bfb      	ldrb	r3, [r7, #15]
 80032a2:	4618      	mov	r0, r3
 80032a4:	3710      	adds	r7, #16
 80032a6:	46bd      	mov	sp, r7
 80032a8:	bd80      	pop	{r7, pc}

080032aa <HAL_TIM_SlaveConfigSynchro>:
 80032aa:	b580      	push	{r7, lr}
 80032ac:	b082      	sub	sp, #8
 80032ae:	af00      	add	r7, sp, #0
 80032b0:	6078      	str	r0, [r7, #4]
 80032b2:	6039      	str	r1, [r7, #0]
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80032ba:	2b01      	cmp	r3, #1
 80032bc:	d101      	bne.n	80032c2 <HAL_TIM_SlaveConfigSynchro+0x18>
 80032be:	2302      	movs	r3, #2
 80032c0:	e031      	b.n	8003326 <HAL_TIM_SlaveConfigSynchro+0x7c>
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	2201      	movs	r2, #1
 80032c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	2202      	movs	r2, #2
 80032ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80032d2:	6839      	ldr	r1, [r7, #0]
 80032d4:	6878      	ldr	r0, [r7, #4]
 80032d6:	f000 fa45 	bl	8003764 <TIM_SlaveTimer_SetConfig>
 80032da:	4603      	mov	r3, r0
 80032dc:	2b00      	cmp	r3, #0
 80032de:	d009      	beq.n	80032f4 <HAL_TIM_SlaveConfigSynchro+0x4a>
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	2201      	movs	r2, #1
 80032e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	2200      	movs	r2, #0
 80032ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80032f0:	2301      	movs	r3, #1
 80032f2:	e018      	b.n	8003326 <HAL_TIM_SlaveConfigSynchro+0x7c>
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	68da      	ldr	r2, [r3, #12]
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003302:	60da      	str	r2, [r3, #12]
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	68da      	ldr	r2, [r3, #12]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8003312:	60da      	str	r2, [r3, #12]
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	2201      	movs	r2, #1
 8003318:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	2200      	movs	r2, #0
 8003320:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003324:	2300      	movs	r3, #0
 8003326:	4618      	mov	r0, r3
 8003328:	3708      	adds	r7, #8
 800332a:	46bd      	mov	sp, r7
 800332c:	bd80      	pop	{r7, pc}

0800332e <HAL_TIM_OC_DelayElapsedCallback>:
 800332e:	b480      	push	{r7}
 8003330:	b083      	sub	sp, #12
 8003332:	af00      	add	r7, sp, #0
 8003334:	6078      	str	r0, [r7, #4]
 8003336:	bf00      	nop
 8003338:	370c      	adds	r7, #12
 800333a:	46bd      	mov	sp, r7
 800333c:	bc80      	pop	{r7}
 800333e:	4770      	bx	lr

08003340 <HAL_TIM_IC_CaptureCallback>:
 8003340:	b480      	push	{r7}
 8003342:	b083      	sub	sp, #12
 8003344:	af00      	add	r7, sp, #0
 8003346:	6078      	str	r0, [r7, #4]
 8003348:	bf00      	nop
 800334a:	370c      	adds	r7, #12
 800334c:	46bd      	mov	sp, r7
 800334e:	bc80      	pop	{r7}
 8003350:	4770      	bx	lr

08003352 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003352:	b480      	push	{r7}
 8003354:	b083      	sub	sp, #12
 8003356:	af00      	add	r7, sp, #0
 8003358:	6078      	str	r0, [r7, #4]
 800335a:	bf00      	nop
 800335c:	370c      	adds	r7, #12
 800335e:	46bd      	mov	sp, r7
 8003360:	bc80      	pop	{r7}
 8003362:	4770      	bx	lr

08003364 <HAL_TIM_TriggerCallback>:
 8003364:	b480      	push	{r7}
 8003366:	b083      	sub	sp, #12
 8003368:	af00      	add	r7, sp, #0
 800336a:	6078      	str	r0, [r7, #4]
 800336c:	bf00      	nop
 800336e:	370c      	adds	r7, #12
 8003370:	46bd      	mov	sp, r7
 8003372:	bc80      	pop	{r7}
 8003374:	4770      	bx	lr
	...

08003378 <TIM_Base_SetConfig>:
 8003378:	b480      	push	{r7}
 800337a:	b085      	sub	sp, #20
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
 8003380:	6039      	str	r1, [r7, #0]
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	60fb      	str	r3, [r7, #12]
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	4a2f      	ldr	r2, [pc, #188]	@ (8003448 <TIM_Base_SetConfig+0xd0>)
 800338c:	4293      	cmp	r3, r2
 800338e:	d00b      	beq.n	80033a8 <TIM_Base_SetConfig+0x30>
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003396:	d007      	beq.n	80033a8 <TIM_Base_SetConfig+0x30>
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	4a2c      	ldr	r2, [pc, #176]	@ (800344c <TIM_Base_SetConfig+0xd4>)
 800339c:	4293      	cmp	r3, r2
 800339e:	d003      	beq.n	80033a8 <TIM_Base_SetConfig+0x30>
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	4a2b      	ldr	r2, [pc, #172]	@ (8003450 <TIM_Base_SetConfig+0xd8>)
 80033a4:	4293      	cmp	r3, r2
 80033a6:	d108      	bne.n	80033ba <TIM_Base_SetConfig+0x42>
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80033ae:	60fb      	str	r3, [r7, #12]
 80033b0:	683b      	ldr	r3, [r7, #0]
 80033b2:	685b      	ldr	r3, [r3, #4]
 80033b4:	68fa      	ldr	r2, [r7, #12]
 80033b6:	4313      	orrs	r3, r2
 80033b8:	60fb      	str	r3, [r7, #12]
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	4a22      	ldr	r2, [pc, #136]	@ (8003448 <TIM_Base_SetConfig+0xd0>)
 80033be:	4293      	cmp	r3, r2
 80033c0:	d00b      	beq.n	80033da <TIM_Base_SetConfig+0x62>
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80033c8:	d007      	beq.n	80033da <TIM_Base_SetConfig+0x62>
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	4a1f      	ldr	r2, [pc, #124]	@ (800344c <TIM_Base_SetConfig+0xd4>)
 80033ce:	4293      	cmp	r3, r2
 80033d0:	d003      	beq.n	80033da <TIM_Base_SetConfig+0x62>
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	4a1e      	ldr	r2, [pc, #120]	@ (8003450 <TIM_Base_SetConfig+0xd8>)
 80033d6:	4293      	cmp	r3, r2
 80033d8:	d108      	bne.n	80033ec <TIM_Base_SetConfig+0x74>
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80033e0:	60fb      	str	r3, [r7, #12]
 80033e2:	683b      	ldr	r3, [r7, #0]
 80033e4:	68db      	ldr	r3, [r3, #12]
 80033e6:	68fa      	ldr	r2, [r7, #12]
 80033e8:	4313      	orrs	r3, r2
 80033ea:	60fb      	str	r3, [r7, #12]
 80033ec:	68fb      	ldr	r3, [r7, #12]
 80033ee:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80033f2:	683b      	ldr	r3, [r7, #0]
 80033f4:	695b      	ldr	r3, [r3, #20]
 80033f6:	4313      	orrs	r3, r2
 80033f8:	60fb      	str	r3, [r7, #12]
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	68fa      	ldr	r2, [r7, #12]
 80033fe:	601a      	str	r2, [r3, #0]
 8003400:	683b      	ldr	r3, [r7, #0]
 8003402:	689a      	ldr	r2, [r3, #8]
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003408:	683b      	ldr	r3, [r7, #0]
 800340a:	681a      	ldr	r2, [r3, #0]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	4a0d      	ldr	r2, [pc, #52]	@ (8003448 <TIM_Base_SetConfig+0xd0>)
 8003414:	4293      	cmp	r3, r2
 8003416:	d103      	bne.n	8003420 <TIM_Base_SetConfig+0xa8>
 8003418:	683b      	ldr	r3, [r7, #0]
 800341a:	691a      	ldr	r2, [r3, #16]
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	2201      	movs	r2, #1
 8003424:	615a      	str	r2, [r3, #20]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	691b      	ldr	r3, [r3, #16]
 800342a:	f003 0301 	and.w	r3, r3, #1
 800342e:	2b00      	cmp	r3, #0
 8003430:	d005      	beq.n	800343e <TIM_Base_SetConfig+0xc6>
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	691b      	ldr	r3, [r3, #16]
 8003436:	f023 0201 	bic.w	r2, r3, #1
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	611a      	str	r2, [r3, #16]
 800343e:	bf00      	nop
 8003440:	3714      	adds	r7, #20
 8003442:	46bd      	mov	sp, r7
 8003444:	bc80      	pop	{r7}
 8003446:	4770      	bx	lr
 8003448:	40012c00 	.word	0x40012c00
 800344c:	40000400 	.word	0x40000400
 8003450:	40000800 	.word	0x40000800

08003454 <TIM_OC1_SetConfig>:
 8003454:	b480      	push	{r7}
 8003456:	b087      	sub	sp, #28
 8003458:	af00      	add	r7, sp, #0
 800345a:	6078      	str	r0, [r7, #4]
 800345c:	6039      	str	r1, [r7, #0]
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	6a1b      	ldr	r3, [r3, #32]
 8003462:	617b      	str	r3, [r7, #20]
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	6a1b      	ldr	r3, [r3, #32]
 8003468:	f023 0201 	bic.w	r2, r3, #1
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	621a      	str	r2, [r3, #32]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	685b      	ldr	r3, [r3, #4]
 8003474:	613b      	str	r3, [r7, #16]
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	699b      	ldr	r3, [r3, #24]
 800347a:	60fb      	str	r3, [r7, #12]
 800347c:	68fb      	ldr	r3, [r7, #12]
 800347e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003482:	60fb      	str	r3, [r7, #12]
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	f023 0303 	bic.w	r3, r3, #3
 800348a:	60fb      	str	r3, [r7, #12]
 800348c:	683b      	ldr	r3, [r7, #0]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	68fa      	ldr	r2, [r7, #12]
 8003492:	4313      	orrs	r3, r2
 8003494:	60fb      	str	r3, [r7, #12]
 8003496:	697b      	ldr	r3, [r7, #20]
 8003498:	f023 0302 	bic.w	r3, r3, #2
 800349c:	617b      	str	r3, [r7, #20]
 800349e:	683b      	ldr	r3, [r7, #0]
 80034a0:	689b      	ldr	r3, [r3, #8]
 80034a2:	697a      	ldr	r2, [r7, #20]
 80034a4:	4313      	orrs	r3, r2
 80034a6:	617b      	str	r3, [r7, #20]
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	4a1c      	ldr	r2, [pc, #112]	@ (800351c <TIM_OC1_SetConfig+0xc8>)
 80034ac:	4293      	cmp	r3, r2
 80034ae:	d10c      	bne.n	80034ca <TIM_OC1_SetConfig+0x76>
 80034b0:	697b      	ldr	r3, [r7, #20]
 80034b2:	f023 0308 	bic.w	r3, r3, #8
 80034b6:	617b      	str	r3, [r7, #20]
 80034b8:	683b      	ldr	r3, [r7, #0]
 80034ba:	68db      	ldr	r3, [r3, #12]
 80034bc:	697a      	ldr	r2, [r7, #20]
 80034be:	4313      	orrs	r3, r2
 80034c0:	617b      	str	r3, [r7, #20]
 80034c2:	697b      	ldr	r3, [r7, #20]
 80034c4:	f023 0304 	bic.w	r3, r3, #4
 80034c8:	617b      	str	r3, [r7, #20]
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	4a13      	ldr	r2, [pc, #76]	@ (800351c <TIM_OC1_SetConfig+0xc8>)
 80034ce:	4293      	cmp	r3, r2
 80034d0:	d111      	bne.n	80034f6 <TIM_OC1_SetConfig+0xa2>
 80034d2:	693b      	ldr	r3, [r7, #16]
 80034d4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80034d8:	613b      	str	r3, [r7, #16]
 80034da:	693b      	ldr	r3, [r7, #16]
 80034dc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80034e0:	613b      	str	r3, [r7, #16]
 80034e2:	683b      	ldr	r3, [r7, #0]
 80034e4:	695b      	ldr	r3, [r3, #20]
 80034e6:	693a      	ldr	r2, [r7, #16]
 80034e8:	4313      	orrs	r3, r2
 80034ea:	613b      	str	r3, [r7, #16]
 80034ec:	683b      	ldr	r3, [r7, #0]
 80034ee:	699b      	ldr	r3, [r3, #24]
 80034f0:	693a      	ldr	r2, [r7, #16]
 80034f2:	4313      	orrs	r3, r2
 80034f4:	613b      	str	r3, [r7, #16]
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	693a      	ldr	r2, [r7, #16]
 80034fa:	605a      	str	r2, [r3, #4]
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	68fa      	ldr	r2, [r7, #12]
 8003500:	619a      	str	r2, [r3, #24]
 8003502:	683b      	ldr	r3, [r7, #0]
 8003504:	685a      	ldr	r2, [r3, #4]
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	635a      	str	r2, [r3, #52]	@ 0x34
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	697a      	ldr	r2, [r7, #20]
 800350e:	621a      	str	r2, [r3, #32]
 8003510:	bf00      	nop
 8003512:	371c      	adds	r7, #28
 8003514:	46bd      	mov	sp, r7
 8003516:	bc80      	pop	{r7}
 8003518:	4770      	bx	lr
 800351a:	bf00      	nop
 800351c:	40012c00 	.word	0x40012c00

08003520 <TIM_OC2_SetConfig>:
 8003520:	b480      	push	{r7}
 8003522:	b087      	sub	sp, #28
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
 8003528:	6039      	str	r1, [r7, #0]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6a1b      	ldr	r3, [r3, #32]
 800352e:	617b      	str	r3, [r7, #20]
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	6a1b      	ldr	r3, [r3, #32]
 8003534:	f023 0210 	bic.w	r2, r3, #16
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	621a      	str	r2, [r3, #32]
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	685b      	ldr	r3, [r3, #4]
 8003540:	613b      	str	r3, [r7, #16]
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	699b      	ldr	r3, [r3, #24]
 8003546:	60fb      	str	r3, [r7, #12]
 8003548:	68fb      	ldr	r3, [r7, #12]
 800354a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800354e:	60fb      	str	r3, [r7, #12]
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003556:	60fb      	str	r3, [r7, #12]
 8003558:	683b      	ldr	r3, [r7, #0]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	021b      	lsls	r3, r3, #8
 800355e:	68fa      	ldr	r2, [r7, #12]
 8003560:	4313      	orrs	r3, r2
 8003562:	60fb      	str	r3, [r7, #12]
 8003564:	697b      	ldr	r3, [r7, #20]
 8003566:	f023 0320 	bic.w	r3, r3, #32
 800356a:	617b      	str	r3, [r7, #20]
 800356c:	683b      	ldr	r3, [r7, #0]
 800356e:	689b      	ldr	r3, [r3, #8]
 8003570:	011b      	lsls	r3, r3, #4
 8003572:	697a      	ldr	r2, [r7, #20]
 8003574:	4313      	orrs	r3, r2
 8003576:	617b      	str	r3, [r7, #20]
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	4a1d      	ldr	r2, [pc, #116]	@ (80035f0 <TIM_OC2_SetConfig+0xd0>)
 800357c:	4293      	cmp	r3, r2
 800357e:	d10d      	bne.n	800359c <TIM_OC2_SetConfig+0x7c>
 8003580:	697b      	ldr	r3, [r7, #20]
 8003582:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003586:	617b      	str	r3, [r7, #20]
 8003588:	683b      	ldr	r3, [r7, #0]
 800358a:	68db      	ldr	r3, [r3, #12]
 800358c:	011b      	lsls	r3, r3, #4
 800358e:	697a      	ldr	r2, [r7, #20]
 8003590:	4313      	orrs	r3, r2
 8003592:	617b      	str	r3, [r7, #20]
 8003594:	697b      	ldr	r3, [r7, #20]
 8003596:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800359a:	617b      	str	r3, [r7, #20]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	4a14      	ldr	r2, [pc, #80]	@ (80035f0 <TIM_OC2_SetConfig+0xd0>)
 80035a0:	4293      	cmp	r3, r2
 80035a2:	d113      	bne.n	80035cc <TIM_OC2_SetConfig+0xac>
 80035a4:	693b      	ldr	r3, [r7, #16]
 80035a6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80035aa:	613b      	str	r3, [r7, #16]
 80035ac:	693b      	ldr	r3, [r7, #16]
 80035ae:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80035b2:	613b      	str	r3, [r7, #16]
 80035b4:	683b      	ldr	r3, [r7, #0]
 80035b6:	695b      	ldr	r3, [r3, #20]
 80035b8:	009b      	lsls	r3, r3, #2
 80035ba:	693a      	ldr	r2, [r7, #16]
 80035bc:	4313      	orrs	r3, r2
 80035be:	613b      	str	r3, [r7, #16]
 80035c0:	683b      	ldr	r3, [r7, #0]
 80035c2:	699b      	ldr	r3, [r3, #24]
 80035c4:	009b      	lsls	r3, r3, #2
 80035c6:	693a      	ldr	r2, [r7, #16]
 80035c8:	4313      	orrs	r3, r2
 80035ca:	613b      	str	r3, [r7, #16]
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	693a      	ldr	r2, [r7, #16]
 80035d0:	605a      	str	r2, [r3, #4]
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	68fa      	ldr	r2, [r7, #12]
 80035d6:	619a      	str	r2, [r3, #24]
 80035d8:	683b      	ldr	r3, [r7, #0]
 80035da:	685a      	ldr	r2, [r3, #4]
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	639a      	str	r2, [r3, #56]	@ 0x38
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	697a      	ldr	r2, [r7, #20]
 80035e4:	621a      	str	r2, [r3, #32]
 80035e6:	bf00      	nop
 80035e8:	371c      	adds	r7, #28
 80035ea:	46bd      	mov	sp, r7
 80035ec:	bc80      	pop	{r7}
 80035ee:	4770      	bx	lr
 80035f0:	40012c00 	.word	0x40012c00

080035f4 <TIM_OC3_SetConfig>:
 80035f4:	b480      	push	{r7}
 80035f6:	b087      	sub	sp, #28
 80035f8:	af00      	add	r7, sp, #0
 80035fa:	6078      	str	r0, [r7, #4]
 80035fc:	6039      	str	r1, [r7, #0]
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	6a1b      	ldr	r3, [r3, #32]
 8003602:	617b      	str	r3, [r7, #20]
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	6a1b      	ldr	r3, [r3, #32]
 8003608:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	621a      	str	r2, [r3, #32]
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	685b      	ldr	r3, [r3, #4]
 8003614:	613b      	str	r3, [r7, #16]
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	69db      	ldr	r3, [r3, #28]
 800361a:	60fb      	str	r3, [r7, #12]
 800361c:	68fb      	ldr	r3, [r7, #12]
 800361e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003622:	60fb      	str	r3, [r7, #12]
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	f023 0303 	bic.w	r3, r3, #3
 800362a:	60fb      	str	r3, [r7, #12]
 800362c:	683b      	ldr	r3, [r7, #0]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	68fa      	ldr	r2, [r7, #12]
 8003632:	4313      	orrs	r3, r2
 8003634:	60fb      	str	r3, [r7, #12]
 8003636:	697b      	ldr	r3, [r7, #20]
 8003638:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800363c:	617b      	str	r3, [r7, #20]
 800363e:	683b      	ldr	r3, [r7, #0]
 8003640:	689b      	ldr	r3, [r3, #8]
 8003642:	021b      	lsls	r3, r3, #8
 8003644:	697a      	ldr	r2, [r7, #20]
 8003646:	4313      	orrs	r3, r2
 8003648:	617b      	str	r3, [r7, #20]
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	4a1d      	ldr	r2, [pc, #116]	@ (80036c4 <TIM_OC3_SetConfig+0xd0>)
 800364e:	4293      	cmp	r3, r2
 8003650:	d10d      	bne.n	800366e <TIM_OC3_SetConfig+0x7a>
 8003652:	697b      	ldr	r3, [r7, #20]
 8003654:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003658:	617b      	str	r3, [r7, #20]
 800365a:	683b      	ldr	r3, [r7, #0]
 800365c:	68db      	ldr	r3, [r3, #12]
 800365e:	021b      	lsls	r3, r3, #8
 8003660:	697a      	ldr	r2, [r7, #20]
 8003662:	4313      	orrs	r3, r2
 8003664:	617b      	str	r3, [r7, #20]
 8003666:	697b      	ldr	r3, [r7, #20]
 8003668:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800366c:	617b      	str	r3, [r7, #20]
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	4a14      	ldr	r2, [pc, #80]	@ (80036c4 <TIM_OC3_SetConfig+0xd0>)
 8003672:	4293      	cmp	r3, r2
 8003674:	d113      	bne.n	800369e <TIM_OC3_SetConfig+0xaa>
 8003676:	693b      	ldr	r3, [r7, #16]
 8003678:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800367c:	613b      	str	r3, [r7, #16]
 800367e:	693b      	ldr	r3, [r7, #16]
 8003680:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003684:	613b      	str	r3, [r7, #16]
 8003686:	683b      	ldr	r3, [r7, #0]
 8003688:	695b      	ldr	r3, [r3, #20]
 800368a:	011b      	lsls	r3, r3, #4
 800368c:	693a      	ldr	r2, [r7, #16]
 800368e:	4313      	orrs	r3, r2
 8003690:	613b      	str	r3, [r7, #16]
 8003692:	683b      	ldr	r3, [r7, #0]
 8003694:	699b      	ldr	r3, [r3, #24]
 8003696:	011b      	lsls	r3, r3, #4
 8003698:	693a      	ldr	r2, [r7, #16]
 800369a:	4313      	orrs	r3, r2
 800369c:	613b      	str	r3, [r7, #16]
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	693a      	ldr	r2, [r7, #16]
 80036a2:	605a      	str	r2, [r3, #4]
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	68fa      	ldr	r2, [r7, #12]
 80036a8:	61da      	str	r2, [r3, #28]
 80036aa:	683b      	ldr	r3, [r7, #0]
 80036ac:	685a      	ldr	r2, [r3, #4]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	697a      	ldr	r2, [r7, #20]
 80036b6:	621a      	str	r2, [r3, #32]
 80036b8:	bf00      	nop
 80036ba:	371c      	adds	r7, #28
 80036bc:	46bd      	mov	sp, r7
 80036be:	bc80      	pop	{r7}
 80036c0:	4770      	bx	lr
 80036c2:	bf00      	nop
 80036c4:	40012c00 	.word	0x40012c00

080036c8 <TIM_OC4_SetConfig>:
 80036c8:	b480      	push	{r7}
 80036ca:	b087      	sub	sp, #28
 80036cc:	af00      	add	r7, sp, #0
 80036ce:	6078      	str	r0, [r7, #4]
 80036d0:	6039      	str	r1, [r7, #0]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	6a1b      	ldr	r3, [r3, #32]
 80036d6:	613b      	str	r3, [r7, #16]
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	6a1b      	ldr	r3, [r3, #32]
 80036dc:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	621a      	str	r2, [r3, #32]
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	685b      	ldr	r3, [r3, #4]
 80036e8:	617b      	str	r3, [r7, #20]
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	69db      	ldr	r3, [r3, #28]
 80036ee:	60fb      	str	r3, [r7, #12]
 80036f0:	68fb      	ldr	r3, [r7, #12]
 80036f2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80036f6:	60fb      	str	r3, [r7, #12]
 80036f8:	68fb      	ldr	r3, [r7, #12]
 80036fa:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80036fe:	60fb      	str	r3, [r7, #12]
 8003700:	683b      	ldr	r3, [r7, #0]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	021b      	lsls	r3, r3, #8
 8003706:	68fa      	ldr	r2, [r7, #12]
 8003708:	4313      	orrs	r3, r2
 800370a:	60fb      	str	r3, [r7, #12]
 800370c:	693b      	ldr	r3, [r7, #16]
 800370e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003712:	613b      	str	r3, [r7, #16]
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	689b      	ldr	r3, [r3, #8]
 8003718:	031b      	lsls	r3, r3, #12
 800371a:	693a      	ldr	r2, [r7, #16]
 800371c:	4313      	orrs	r3, r2
 800371e:	613b      	str	r3, [r7, #16]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	4a0f      	ldr	r2, [pc, #60]	@ (8003760 <TIM_OC4_SetConfig+0x98>)
 8003724:	4293      	cmp	r3, r2
 8003726:	d109      	bne.n	800373c <TIM_OC4_SetConfig+0x74>
 8003728:	697b      	ldr	r3, [r7, #20]
 800372a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800372e:	617b      	str	r3, [r7, #20]
 8003730:	683b      	ldr	r3, [r7, #0]
 8003732:	695b      	ldr	r3, [r3, #20]
 8003734:	019b      	lsls	r3, r3, #6
 8003736:	697a      	ldr	r2, [r7, #20]
 8003738:	4313      	orrs	r3, r2
 800373a:	617b      	str	r3, [r7, #20]
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	697a      	ldr	r2, [r7, #20]
 8003740:	605a      	str	r2, [r3, #4]
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	68fa      	ldr	r2, [r7, #12]
 8003746:	61da      	str	r2, [r3, #28]
 8003748:	683b      	ldr	r3, [r7, #0]
 800374a:	685a      	ldr	r2, [r3, #4]
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	693a      	ldr	r2, [r7, #16]
 8003754:	621a      	str	r2, [r3, #32]
 8003756:	bf00      	nop
 8003758:	371c      	adds	r7, #28
 800375a:	46bd      	mov	sp, r7
 800375c:	bc80      	pop	{r7}
 800375e:	4770      	bx	lr
 8003760:	40012c00 	.word	0x40012c00

08003764 <TIM_SlaveTimer_SetConfig>:
 8003764:	b580      	push	{r7, lr}
 8003766:	b086      	sub	sp, #24
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]
 800376c:	6039      	str	r1, [r7, #0]
 800376e:	2300      	movs	r3, #0
 8003770:	75fb      	strb	r3, [r7, #23]
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	689b      	ldr	r3, [r3, #8]
 8003778:	613b      	str	r3, [r7, #16]
 800377a:	693b      	ldr	r3, [r7, #16]
 800377c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003780:	613b      	str	r3, [r7, #16]
 8003782:	683b      	ldr	r3, [r7, #0]
 8003784:	685b      	ldr	r3, [r3, #4]
 8003786:	693a      	ldr	r2, [r7, #16]
 8003788:	4313      	orrs	r3, r2
 800378a:	613b      	str	r3, [r7, #16]
 800378c:	693b      	ldr	r3, [r7, #16]
 800378e:	f023 0307 	bic.w	r3, r3, #7
 8003792:	613b      	str	r3, [r7, #16]
 8003794:	683b      	ldr	r3, [r7, #0]
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	693a      	ldr	r2, [r7, #16]
 800379a:	4313      	orrs	r3, r2
 800379c:	613b      	str	r3, [r7, #16]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	681b      	ldr	r3, [r3, #0]
 80037a2:	693a      	ldr	r2, [r7, #16]
 80037a4:	609a      	str	r2, [r3, #8]
 80037a6:	683b      	ldr	r3, [r7, #0]
 80037a8:	685b      	ldr	r3, [r3, #4]
 80037aa:	2b70      	cmp	r3, #112	@ 0x70
 80037ac:	d01a      	beq.n	80037e4 <TIM_SlaveTimer_SetConfig+0x80>
 80037ae:	2b70      	cmp	r3, #112	@ 0x70
 80037b0:	d860      	bhi.n	8003874 <TIM_SlaveTimer_SetConfig+0x110>
 80037b2:	2b60      	cmp	r3, #96	@ 0x60
 80037b4:	d054      	beq.n	8003860 <TIM_SlaveTimer_SetConfig+0xfc>
 80037b6:	2b60      	cmp	r3, #96	@ 0x60
 80037b8:	d85c      	bhi.n	8003874 <TIM_SlaveTimer_SetConfig+0x110>
 80037ba:	2b50      	cmp	r3, #80	@ 0x50
 80037bc:	d046      	beq.n	800384c <TIM_SlaveTimer_SetConfig+0xe8>
 80037be:	2b50      	cmp	r3, #80	@ 0x50
 80037c0:	d858      	bhi.n	8003874 <TIM_SlaveTimer_SetConfig+0x110>
 80037c2:	2b40      	cmp	r3, #64	@ 0x40
 80037c4:	d019      	beq.n	80037fa <TIM_SlaveTimer_SetConfig+0x96>
 80037c6:	2b40      	cmp	r3, #64	@ 0x40
 80037c8:	d854      	bhi.n	8003874 <TIM_SlaveTimer_SetConfig+0x110>
 80037ca:	2b30      	cmp	r3, #48	@ 0x30
 80037cc:	d055      	beq.n	800387a <TIM_SlaveTimer_SetConfig+0x116>
 80037ce:	2b30      	cmp	r3, #48	@ 0x30
 80037d0:	d850      	bhi.n	8003874 <TIM_SlaveTimer_SetConfig+0x110>
 80037d2:	2b20      	cmp	r3, #32
 80037d4:	d051      	beq.n	800387a <TIM_SlaveTimer_SetConfig+0x116>
 80037d6:	2b20      	cmp	r3, #32
 80037d8:	d84c      	bhi.n	8003874 <TIM_SlaveTimer_SetConfig+0x110>
 80037da:	2b00      	cmp	r3, #0
 80037dc:	d04d      	beq.n	800387a <TIM_SlaveTimer_SetConfig+0x116>
 80037de:	2b10      	cmp	r3, #16
 80037e0:	d04b      	beq.n	800387a <TIM_SlaveTimer_SetConfig+0x116>
 80037e2:	e047      	b.n	8003874 <TIM_SlaveTimer_SetConfig+0x110>
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	6818      	ldr	r0, [r3, #0]
 80037e8:	683b      	ldr	r3, [r7, #0]
 80037ea:	68d9      	ldr	r1, [r3, #12]
 80037ec:	683b      	ldr	r3, [r7, #0]
 80037ee:	689a      	ldr	r2, [r3, #8]
 80037f0:	683b      	ldr	r3, [r7, #0]
 80037f2:	691b      	ldr	r3, [r3, #16]
 80037f4:	f000 f9cc 	bl	8003b90 <TIM_ETR_SetConfig>
 80037f8:	e040      	b.n	800387c <TIM_SlaveTimer_SetConfig+0x118>
 80037fa:	683b      	ldr	r3, [r7, #0]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	2b05      	cmp	r3, #5
 8003800:	d101      	bne.n	8003806 <TIM_SlaveTimer_SetConfig+0xa2>
 8003802:	2301      	movs	r3, #1
 8003804:	e03b      	b.n	800387e <TIM_SlaveTimer_SetConfig+0x11a>
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	681b      	ldr	r3, [r3, #0]
 800380a:	6a1b      	ldr	r3, [r3, #32]
 800380c:	60fb      	str	r3, [r7, #12]
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	6a1a      	ldr	r2, [r3, #32]
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	f022 0201 	bic.w	r2, r2, #1
 800381c:	621a      	str	r2, [r3, #32]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	699b      	ldr	r3, [r3, #24]
 8003824:	60bb      	str	r3, [r7, #8]
 8003826:	68bb      	ldr	r3, [r7, #8]
 8003828:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800382c:	60bb      	str	r3, [r7, #8]
 800382e:	683b      	ldr	r3, [r7, #0]
 8003830:	691b      	ldr	r3, [r3, #16]
 8003832:	011b      	lsls	r3, r3, #4
 8003834:	68ba      	ldr	r2, [r7, #8]
 8003836:	4313      	orrs	r3, r2
 8003838:	60bb      	str	r3, [r7, #8]
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	68ba      	ldr	r2, [r7, #8]
 8003840:	619a      	str	r2, [r3, #24]
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	68fa      	ldr	r2, [r7, #12]
 8003848:	621a      	str	r2, [r3, #32]
 800384a:	e017      	b.n	800387c <TIM_SlaveTimer_SetConfig+0x118>
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	6818      	ldr	r0, [r3, #0]
 8003850:	683b      	ldr	r3, [r7, #0]
 8003852:	6899      	ldr	r1, [r3, #8]
 8003854:	683b      	ldr	r3, [r7, #0]
 8003856:	691b      	ldr	r3, [r3, #16]
 8003858:	461a      	mov	r2, r3
 800385a:	f000 f86f 	bl	800393c <TIM_TI1_ConfigInputStage>
 800385e:	e00d      	b.n	800387c <TIM_SlaveTimer_SetConfig+0x118>
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	6818      	ldr	r0, [r3, #0]
 8003864:	683b      	ldr	r3, [r7, #0]
 8003866:	6899      	ldr	r1, [r3, #8]
 8003868:	683b      	ldr	r3, [r7, #0]
 800386a:	691b      	ldr	r3, [r3, #16]
 800386c:	461a      	mov	r2, r3
 800386e:	f000 f8cf 	bl	8003a10 <TIM_TI2_ConfigInputStage>
 8003872:	e003      	b.n	800387c <TIM_SlaveTimer_SetConfig+0x118>
 8003874:	2301      	movs	r3, #1
 8003876:	75fb      	strb	r3, [r7, #23]
 8003878:	e000      	b.n	800387c <TIM_SlaveTimer_SetConfig+0x118>
 800387a:	bf00      	nop
 800387c:	7dfb      	ldrb	r3, [r7, #23]
 800387e:	4618      	mov	r0, r3
 8003880:	3718      	adds	r7, #24
 8003882:	46bd      	mov	sp, r7
 8003884:	bd80      	pop	{r7, pc}
	...

08003888 <TIM_TI1_SetConfig>:
 8003888:	b480      	push	{r7}
 800388a:	b087      	sub	sp, #28
 800388c:	af00      	add	r7, sp, #0
 800388e:	60f8      	str	r0, [r7, #12]
 8003890:	60b9      	str	r1, [r7, #8]
 8003892:	607a      	str	r2, [r7, #4]
 8003894:	603b      	str	r3, [r7, #0]
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	6a1b      	ldr	r3, [r3, #32]
 800389a:	613b      	str	r3, [r7, #16]
 800389c:	68fb      	ldr	r3, [r7, #12]
 800389e:	6a1b      	ldr	r3, [r3, #32]
 80038a0:	f023 0201 	bic.w	r2, r3, #1
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	621a      	str	r2, [r3, #32]
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	699b      	ldr	r3, [r3, #24]
 80038ac:	617b      	str	r3, [r7, #20]
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	4a1f      	ldr	r2, [pc, #124]	@ (8003930 <TIM_TI1_SetConfig+0xa8>)
 80038b2:	4293      	cmp	r3, r2
 80038b4:	d00b      	beq.n	80038ce <TIM_TI1_SetConfig+0x46>
 80038b6:	68fb      	ldr	r3, [r7, #12]
 80038b8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80038bc:	d007      	beq.n	80038ce <TIM_TI1_SetConfig+0x46>
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	4a1c      	ldr	r2, [pc, #112]	@ (8003934 <TIM_TI1_SetConfig+0xac>)
 80038c2:	4293      	cmp	r3, r2
 80038c4:	d003      	beq.n	80038ce <TIM_TI1_SetConfig+0x46>
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	4a1b      	ldr	r2, [pc, #108]	@ (8003938 <TIM_TI1_SetConfig+0xb0>)
 80038ca:	4293      	cmp	r3, r2
 80038cc:	d101      	bne.n	80038d2 <TIM_TI1_SetConfig+0x4a>
 80038ce:	2301      	movs	r3, #1
 80038d0:	e000      	b.n	80038d4 <TIM_TI1_SetConfig+0x4c>
 80038d2:	2300      	movs	r3, #0
 80038d4:	2b00      	cmp	r3, #0
 80038d6:	d008      	beq.n	80038ea <TIM_TI1_SetConfig+0x62>
 80038d8:	697b      	ldr	r3, [r7, #20]
 80038da:	f023 0303 	bic.w	r3, r3, #3
 80038de:	617b      	str	r3, [r7, #20]
 80038e0:	697a      	ldr	r2, [r7, #20]
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	4313      	orrs	r3, r2
 80038e6:	617b      	str	r3, [r7, #20]
 80038e8:	e003      	b.n	80038f2 <TIM_TI1_SetConfig+0x6a>
 80038ea:	697b      	ldr	r3, [r7, #20]
 80038ec:	f043 0301 	orr.w	r3, r3, #1
 80038f0:	617b      	str	r3, [r7, #20]
 80038f2:	697b      	ldr	r3, [r7, #20]
 80038f4:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80038f8:	617b      	str	r3, [r7, #20]
 80038fa:	683b      	ldr	r3, [r7, #0]
 80038fc:	011b      	lsls	r3, r3, #4
 80038fe:	b2db      	uxtb	r3, r3
 8003900:	697a      	ldr	r2, [r7, #20]
 8003902:	4313      	orrs	r3, r2
 8003904:	617b      	str	r3, [r7, #20]
 8003906:	693b      	ldr	r3, [r7, #16]
 8003908:	f023 030a 	bic.w	r3, r3, #10
 800390c:	613b      	str	r3, [r7, #16]
 800390e:	68bb      	ldr	r3, [r7, #8]
 8003910:	f003 030a 	and.w	r3, r3, #10
 8003914:	693a      	ldr	r2, [r7, #16]
 8003916:	4313      	orrs	r3, r2
 8003918:	613b      	str	r3, [r7, #16]
 800391a:	68fb      	ldr	r3, [r7, #12]
 800391c:	697a      	ldr	r2, [r7, #20]
 800391e:	619a      	str	r2, [r3, #24]
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	693a      	ldr	r2, [r7, #16]
 8003924:	621a      	str	r2, [r3, #32]
 8003926:	bf00      	nop
 8003928:	371c      	adds	r7, #28
 800392a:	46bd      	mov	sp, r7
 800392c:	bc80      	pop	{r7}
 800392e:	4770      	bx	lr
 8003930:	40012c00 	.word	0x40012c00
 8003934:	40000400 	.word	0x40000400
 8003938:	40000800 	.word	0x40000800

0800393c <TIM_TI1_ConfigInputStage>:
 800393c:	b480      	push	{r7}
 800393e:	b087      	sub	sp, #28
 8003940:	af00      	add	r7, sp, #0
 8003942:	60f8      	str	r0, [r7, #12]
 8003944:	60b9      	str	r1, [r7, #8]
 8003946:	607a      	str	r2, [r7, #4]
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	6a1b      	ldr	r3, [r3, #32]
 800394c:	617b      	str	r3, [r7, #20]
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	6a1b      	ldr	r3, [r3, #32]
 8003952:	f023 0201 	bic.w	r2, r3, #1
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	621a      	str	r2, [r3, #32]
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	699b      	ldr	r3, [r3, #24]
 800395e:	613b      	str	r3, [r7, #16]
 8003960:	693b      	ldr	r3, [r7, #16]
 8003962:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003966:	613b      	str	r3, [r7, #16]
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	011b      	lsls	r3, r3, #4
 800396c:	693a      	ldr	r2, [r7, #16]
 800396e:	4313      	orrs	r3, r2
 8003970:	613b      	str	r3, [r7, #16]
 8003972:	697b      	ldr	r3, [r7, #20]
 8003974:	f023 030a 	bic.w	r3, r3, #10
 8003978:	617b      	str	r3, [r7, #20]
 800397a:	697a      	ldr	r2, [r7, #20]
 800397c:	68bb      	ldr	r3, [r7, #8]
 800397e:	4313      	orrs	r3, r2
 8003980:	617b      	str	r3, [r7, #20]
 8003982:	68fb      	ldr	r3, [r7, #12]
 8003984:	693a      	ldr	r2, [r7, #16]
 8003986:	619a      	str	r2, [r3, #24]
 8003988:	68fb      	ldr	r3, [r7, #12]
 800398a:	697a      	ldr	r2, [r7, #20]
 800398c:	621a      	str	r2, [r3, #32]
 800398e:	bf00      	nop
 8003990:	371c      	adds	r7, #28
 8003992:	46bd      	mov	sp, r7
 8003994:	bc80      	pop	{r7}
 8003996:	4770      	bx	lr

08003998 <TIM_TI2_SetConfig>:
 8003998:	b480      	push	{r7}
 800399a:	b087      	sub	sp, #28
 800399c:	af00      	add	r7, sp, #0
 800399e:	60f8      	str	r0, [r7, #12]
 80039a0:	60b9      	str	r1, [r7, #8]
 80039a2:	607a      	str	r2, [r7, #4]
 80039a4:	603b      	str	r3, [r7, #0]
 80039a6:	68fb      	ldr	r3, [r7, #12]
 80039a8:	6a1b      	ldr	r3, [r3, #32]
 80039aa:	617b      	str	r3, [r7, #20]
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	6a1b      	ldr	r3, [r3, #32]
 80039b0:	f023 0210 	bic.w	r2, r3, #16
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	621a      	str	r2, [r3, #32]
 80039b8:	68fb      	ldr	r3, [r7, #12]
 80039ba:	699b      	ldr	r3, [r3, #24]
 80039bc:	613b      	str	r3, [r7, #16]
 80039be:	693b      	ldr	r3, [r7, #16]
 80039c0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80039c4:	613b      	str	r3, [r7, #16]
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	021b      	lsls	r3, r3, #8
 80039ca:	693a      	ldr	r2, [r7, #16]
 80039cc:	4313      	orrs	r3, r2
 80039ce:	613b      	str	r3, [r7, #16]
 80039d0:	693b      	ldr	r3, [r7, #16]
 80039d2:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80039d6:	613b      	str	r3, [r7, #16]
 80039d8:	683b      	ldr	r3, [r7, #0]
 80039da:	031b      	lsls	r3, r3, #12
 80039dc:	b29b      	uxth	r3, r3
 80039de:	693a      	ldr	r2, [r7, #16]
 80039e0:	4313      	orrs	r3, r2
 80039e2:	613b      	str	r3, [r7, #16]
 80039e4:	697b      	ldr	r3, [r7, #20]
 80039e6:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80039ea:	617b      	str	r3, [r7, #20]
 80039ec:	68bb      	ldr	r3, [r7, #8]
 80039ee:	011b      	lsls	r3, r3, #4
 80039f0:	f003 03a0 	and.w	r3, r3, #160	@ 0xa0
 80039f4:	697a      	ldr	r2, [r7, #20]
 80039f6:	4313      	orrs	r3, r2
 80039f8:	617b      	str	r3, [r7, #20]
 80039fa:	68fb      	ldr	r3, [r7, #12]
 80039fc:	693a      	ldr	r2, [r7, #16]
 80039fe:	619a      	str	r2, [r3, #24]
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	697a      	ldr	r2, [r7, #20]
 8003a04:	621a      	str	r2, [r3, #32]
 8003a06:	bf00      	nop
 8003a08:	371c      	adds	r7, #28
 8003a0a:	46bd      	mov	sp, r7
 8003a0c:	bc80      	pop	{r7}
 8003a0e:	4770      	bx	lr

08003a10 <TIM_TI2_ConfigInputStage>:
 8003a10:	b480      	push	{r7}
 8003a12:	b087      	sub	sp, #28
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	60f8      	str	r0, [r7, #12]
 8003a18:	60b9      	str	r1, [r7, #8]
 8003a1a:	607a      	str	r2, [r7, #4]
 8003a1c:	68fb      	ldr	r3, [r7, #12]
 8003a1e:	6a1b      	ldr	r3, [r3, #32]
 8003a20:	617b      	str	r3, [r7, #20]
 8003a22:	68fb      	ldr	r3, [r7, #12]
 8003a24:	6a1b      	ldr	r3, [r3, #32]
 8003a26:	f023 0210 	bic.w	r2, r3, #16
 8003a2a:	68fb      	ldr	r3, [r7, #12]
 8003a2c:	621a      	str	r2, [r3, #32]
 8003a2e:	68fb      	ldr	r3, [r7, #12]
 8003a30:	699b      	ldr	r3, [r3, #24]
 8003a32:	613b      	str	r3, [r7, #16]
 8003a34:	693b      	ldr	r3, [r7, #16]
 8003a36:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003a3a:	613b      	str	r3, [r7, #16]
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	031b      	lsls	r3, r3, #12
 8003a40:	693a      	ldr	r2, [r7, #16]
 8003a42:	4313      	orrs	r3, r2
 8003a44:	613b      	str	r3, [r7, #16]
 8003a46:	697b      	ldr	r3, [r7, #20]
 8003a48:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8003a4c:	617b      	str	r3, [r7, #20]
 8003a4e:	68bb      	ldr	r3, [r7, #8]
 8003a50:	011b      	lsls	r3, r3, #4
 8003a52:	697a      	ldr	r2, [r7, #20]
 8003a54:	4313      	orrs	r3, r2
 8003a56:	617b      	str	r3, [r7, #20]
 8003a58:	68fb      	ldr	r3, [r7, #12]
 8003a5a:	693a      	ldr	r2, [r7, #16]
 8003a5c:	619a      	str	r2, [r3, #24]
 8003a5e:	68fb      	ldr	r3, [r7, #12]
 8003a60:	697a      	ldr	r2, [r7, #20]
 8003a62:	621a      	str	r2, [r3, #32]
 8003a64:	bf00      	nop
 8003a66:	371c      	adds	r7, #28
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	bc80      	pop	{r7}
 8003a6c:	4770      	bx	lr

08003a6e <TIM_TI3_SetConfig>:
 8003a6e:	b480      	push	{r7}
 8003a70:	b087      	sub	sp, #28
 8003a72:	af00      	add	r7, sp, #0
 8003a74:	60f8      	str	r0, [r7, #12]
 8003a76:	60b9      	str	r1, [r7, #8]
 8003a78:	607a      	str	r2, [r7, #4]
 8003a7a:	603b      	str	r3, [r7, #0]
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	6a1b      	ldr	r3, [r3, #32]
 8003a80:	617b      	str	r3, [r7, #20]
 8003a82:	68fb      	ldr	r3, [r7, #12]
 8003a84:	6a1b      	ldr	r3, [r3, #32]
 8003a86:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003a8a:	68fb      	ldr	r3, [r7, #12]
 8003a8c:	621a      	str	r2, [r3, #32]
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	69db      	ldr	r3, [r3, #28]
 8003a92:	613b      	str	r3, [r7, #16]
 8003a94:	693b      	ldr	r3, [r7, #16]
 8003a96:	f023 0303 	bic.w	r3, r3, #3
 8003a9a:	613b      	str	r3, [r7, #16]
 8003a9c:	693a      	ldr	r2, [r7, #16]
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	4313      	orrs	r3, r2
 8003aa2:	613b      	str	r3, [r7, #16]
 8003aa4:	693b      	ldr	r3, [r7, #16]
 8003aa6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003aaa:	613b      	str	r3, [r7, #16]
 8003aac:	683b      	ldr	r3, [r7, #0]
 8003aae:	011b      	lsls	r3, r3, #4
 8003ab0:	b2db      	uxtb	r3, r3
 8003ab2:	693a      	ldr	r2, [r7, #16]
 8003ab4:	4313      	orrs	r3, r2
 8003ab6:	613b      	str	r3, [r7, #16]
 8003ab8:	697b      	ldr	r3, [r7, #20]
 8003aba:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003abe:	617b      	str	r3, [r7, #20]
 8003ac0:	68bb      	ldr	r3, [r7, #8]
 8003ac2:	021b      	lsls	r3, r3, #8
 8003ac4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003ac8:	697a      	ldr	r2, [r7, #20]
 8003aca:	4313      	orrs	r3, r2
 8003acc:	617b      	str	r3, [r7, #20]
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	693a      	ldr	r2, [r7, #16]
 8003ad2:	61da      	str	r2, [r3, #28]
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	697a      	ldr	r2, [r7, #20]
 8003ad8:	621a      	str	r2, [r3, #32]
 8003ada:	bf00      	nop
 8003adc:	371c      	adds	r7, #28
 8003ade:	46bd      	mov	sp, r7
 8003ae0:	bc80      	pop	{r7}
 8003ae2:	4770      	bx	lr

08003ae4 <TIM_TI4_SetConfig>:
 8003ae4:	b480      	push	{r7}
 8003ae6:	b087      	sub	sp, #28
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	60f8      	str	r0, [r7, #12]
 8003aec:	60b9      	str	r1, [r7, #8]
 8003aee:	607a      	str	r2, [r7, #4]
 8003af0:	603b      	str	r3, [r7, #0]
 8003af2:	68fb      	ldr	r3, [r7, #12]
 8003af4:	6a1b      	ldr	r3, [r3, #32]
 8003af6:	617b      	str	r3, [r7, #20]
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	6a1b      	ldr	r3, [r3, #32]
 8003afc:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	621a      	str	r2, [r3, #32]
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	69db      	ldr	r3, [r3, #28]
 8003b08:	613b      	str	r3, [r7, #16]
 8003b0a:	693b      	ldr	r3, [r7, #16]
 8003b0c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003b10:	613b      	str	r3, [r7, #16]
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	021b      	lsls	r3, r3, #8
 8003b16:	693a      	ldr	r2, [r7, #16]
 8003b18:	4313      	orrs	r3, r2
 8003b1a:	613b      	str	r3, [r7, #16]
 8003b1c:	693b      	ldr	r3, [r7, #16]
 8003b1e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003b22:	613b      	str	r3, [r7, #16]
 8003b24:	683b      	ldr	r3, [r7, #0]
 8003b26:	031b      	lsls	r3, r3, #12
 8003b28:	b29b      	uxth	r3, r3
 8003b2a:	693a      	ldr	r2, [r7, #16]
 8003b2c:	4313      	orrs	r3, r2
 8003b2e:	613b      	str	r3, [r7, #16]
 8003b30:	697b      	ldr	r3, [r7, #20]
 8003b32:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003b36:	617b      	str	r3, [r7, #20]
 8003b38:	68bb      	ldr	r3, [r7, #8]
 8003b3a:	031b      	lsls	r3, r3, #12
 8003b3c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003b40:	697a      	ldr	r2, [r7, #20]
 8003b42:	4313      	orrs	r3, r2
 8003b44:	617b      	str	r3, [r7, #20]
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	693a      	ldr	r2, [r7, #16]
 8003b4a:	61da      	str	r2, [r3, #28]
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	697a      	ldr	r2, [r7, #20]
 8003b50:	621a      	str	r2, [r3, #32]
 8003b52:	bf00      	nop
 8003b54:	371c      	adds	r7, #28
 8003b56:	46bd      	mov	sp, r7
 8003b58:	bc80      	pop	{r7}
 8003b5a:	4770      	bx	lr

08003b5c <TIM_ITRx_SetConfig>:
 8003b5c:	b480      	push	{r7}
 8003b5e:	b085      	sub	sp, #20
 8003b60:	af00      	add	r7, sp, #0
 8003b62:	6078      	str	r0, [r7, #4]
 8003b64:	6039      	str	r1, [r7, #0]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	689b      	ldr	r3, [r3, #8]
 8003b6a:	60fb      	str	r3, [r7, #12]
 8003b6c:	68fb      	ldr	r3, [r7, #12]
 8003b6e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003b72:	60fb      	str	r3, [r7, #12]
 8003b74:	683a      	ldr	r2, [r7, #0]
 8003b76:	68fb      	ldr	r3, [r7, #12]
 8003b78:	4313      	orrs	r3, r2
 8003b7a:	f043 0307 	orr.w	r3, r3, #7
 8003b7e:	60fb      	str	r3, [r7, #12]
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	68fa      	ldr	r2, [r7, #12]
 8003b84:	609a      	str	r2, [r3, #8]
 8003b86:	bf00      	nop
 8003b88:	3714      	adds	r7, #20
 8003b8a:	46bd      	mov	sp, r7
 8003b8c:	bc80      	pop	{r7}
 8003b8e:	4770      	bx	lr

08003b90 <TIM_ETR_SetConfig>:
 8003b90:	b480      	push	{r7}
 8003b92:	b087      	sub	sp, #28
 8003b94:	af00      	add	r7, sp, #0
 8003b96:	60f8      	str	r0, [r7, #12]
 8003b98:	60b9      	str	r1, [r7, #8]
 8003b9a:	607a      	str	r2, [r7, #4]
 8003b9c:	603b      	str	r3, [r7, #0]
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	689b      	ldr	r3, [r3, #8]
 8003ba2:	617b      	str	r3, [r7, #20]
 8003ba4:	697b      	ldr	r3, [r7, #20]
 8003ba6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003baa:	617b      	str	r3, [r7, #20]
 8003bac:	683b      	ldr	r3, [r7, #0]
 8003bae:	021a      	lsls	r2, r3, #8
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	431a      	orrs	r2, r3
 8003bb4:	68bb      	ldr	r3, [r7, #8]
 8003bb6:	4313      	orrs	r3, r2
 8003bb8:	697a      	ldr	r2, [r7, #20]
 8003bba:	4313      	orrs	r3, r2
 8003bbc:	617b      	str	r3, [r7, #20]
 8003bbe:	68fb      	ldr	r3, [r7, #12]
 8003bc0:	697a      	ldr	r2, [r7, #20]
 8003bc2:	609a      	str	r2, [r3, #8]
 8003bc4:	bf00      	nop
 8003bc6:	371c      	adds	r7, #28
 8003bc8:	46bd      	mov	sp, r7
 8003bca:	bc80      	pop	{r7}
 8003bcc:	4770      	bx	lr

08003bce <TIM_CCxChannelCmd>:
 8003bce:	b480      	push	{r7}
 8003bd0:	b087      	sub	sp, #28
 8003bd2:	af00      	add	r7, sp, #0
 8003bd4:	60f8      	str	r0, [r7, #12]
 8003bd6:	60b9      	str	r1, [r7, #8]
 8003bd8:	607a      	str	r2, [r7, #4]
 8003bda:	68bb      	ldr	r3, [r7, #8]
 8003bdc:	f003 031f 	and.w	r3, r3, #31
 8003be0:	2201      	movs	r2, #1
 8003be2:	fa02 f303 	lsl.w	r3, r2, r3
 8003be6:	617b      	str	r3, [r7, #20]
 8003be8:	68fb      	ldr	r3, [r7, #12]
 8003bea:	6a1a      	ldr	r2, [r3, #32]
 8003bec:	697b      	ldr	r3, [r7, #20]
 8003bee:	43db      	mvns	r3, r3
 8003bf0:	401a      	ands	r2, r3
 8003bf2:	68fb      	ldr	r3, [r7, #12]
 8003bf4:	621a      	str	r2, [r3, #32]
 8003bf6:	68fb      	ldr	r3, [r7, #12]
 8003bf8:	6a1a      	ldr	r2, [r3, #32]
 8003bfa:	68bb      	ldr	r3, [r7, #8]
 8003bfc:	f003 031f 	and.w	r3, r3, #31
 8003c00:	6879      	ldr	r1, [r7, #4]
 8003c02:	fa01 f303 	lsl.w	r3, r1, r3
 8003c06:	431a      	orrs	r2, r3
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	621a      	str	r2, [r3, #32]
 8003c0c:	bf00      	nop
 8003c0e:	371c      	adds	r7, #28
 8003c10:	46bd      	mov	sp, r7
 8003c12:	bc80      	pop	{r7}
 8003c14:	4770      	bx	lr
	...

08003c18 <HAL_TIMEx_MasterConfigSynchronization>:
 8003c18:	b480      	push	{r7}
 8003c1a:	b085      	sub	sp, #20
 8003c1c:	af00      	add	r7, sp, #0
 8003c1e:	6078      	str	r0, [r7, #4]
 8003c20:	6039      	str	r1, [r7, #0]
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003c28:	2b01      	cmp	r3, #1
 8003c2a:	d101      	bne.n	8003c30 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003c2c:	2302      	movs	r3, #2
 8003c2e:	e046      	b.n	8003cbe <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	2201      	movs	r2, #1
 8003c34:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	2202      	movs	r2, #2
 8003c3c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	685b      	ldr	r3, [r3, #4]
 8003c46:	60fb      	str	r3, [r7, #12]
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	689b      	ldr	r3, [r3, #8]
 8003c4e:	60bb      	str	r3, [r7, #8]
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003c56:	60fb      	str	r3, [r7, #12]
 8003c58:	683b      	ldr	r3, [r7, #0]
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	68fa      	ldr	r2, [r7, #12]
 8003c5e:	4313      	orrs	r3, r2
 8003c60:	60fb      	str	r3, [r7, #12]
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	68fa      	ldr	r2, [r7, #12]
 8003c68:	605a      	str	r2, [r3, #4]
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	4a16      	ldr	r2, [pc, #88]	@ (8003cc8 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003c70:	4293      	cmp	r3, r2
 8003c72:	d00e      	beq.n	8003c92 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003c7c:	d009      	beq.n	8003c92 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	681b      	ldr	r3, [r3, #0]
 8003c82:	4a12      	ldr	r2, [pc, #72]	@ (8003ccc <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003c84:	4293      	cmp	r3, r2
 8003c86:	d004      	beq.n	8003c92 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	4a10      	ldr	r2, [pc, #64]	@ (8003cd0 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003c8e:	4293      	cmp	r3, r2
 8003c90:	d10c      	bne.n	8003cac <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003c92:	68bb      	ldr	r3, [r7, #8]
 8003c94:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003c98:	60bb      	str	r3, [r7, #8]
 8003c9a:	683b      	ldr	r3, [r7, #0]
 8003c9c:	685b      	ldr	r3, [r3, #4]
 8003c9e:	68ba      	ldr	r2, [r7, #8]
 8003ca0:	4313      	orrs	r3, r2
 8003ca2:	60bb      	str	r3, [r7, #8]
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	68ba      	ldr	r2, [r7, #8]
 8003caa:	609a      	str	r2, [r3, #8]
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	2201      	movs	r2, #1
 8003cb0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	2200      	movs	r2, #0
 8003cb8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	4618      	mov	r0, r3
 8003cc0:	3714      	adds	r7, #20
 8003cc2:	46bd      	mov	sp, r7
 8003cc4:	bc80      	pop	{r7}
 8003cc6:	4770      	bx	lr
 8003cc8:	40012c00 	.word	0x40012c00
 8003ccc:	40000400 	.word	0x40000400
 8003cd0:	40000800 	.word	0x40000800

08003cd4 <HAL_TIMEx_CommutCallback>:
 8003cd4:	b480      	push	{r7}
 8003cd6:	b083      	sub	sp, #12
 8003cd8:	af00      	add	r7, sp, #0
 8003cda:	6078      	str	r0, [r7, #4]
 8003cdc:	bf00      	nop
 8003cde:	370c      	adds	r7, #12
 8003ce0:	46bd      	mov	sp, r7
 8003ce2:	bc80      	pop	{r7}
 8003ce4:	4770      	bx	lr

08003ce6 <HAL_TIMEx_BreakCallback>:
 8003ce6:	b480      	push	{r7}
 8003ce8:	b083      	sub	sp, #12
 8003cea:	af00      	add	r7, sp, #0
 8003cec:	6078      	str	r0, [r7, #4]
 8003cee:	bf00      	nop
 8003cf0:	370c      	adds	r7, #12
 8003cf2:	46bd      	mov	sp, r7
 8003cf4:	bc80      	pop	{r7}
 8003cf6:	4770      	bx	lr

08003cf8 <HAL_UART_Init>:
 8003cf8:	b580      	push	{r7, lr}
 8003cfa:	b082      	sub	sp, #8
 8003cfc:	af00      	add	r7, sp, #0
 8003cfe:	6078      	str	r0, [r7, #4]
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	2b00      	cmp	r3, #0
 8003d04:	d101      	bne.n	8003d0a <HAL_UART_Init+0x12>
 8003d06:	2301      	movs	r3, #1
 8003d08:	e042      	b.n	8003d90 <HAL_UART_Init+0x98>
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003d10:	b2db      	uxtb	r3, r3
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	d106      	bne.n	8003d24 <HAL_UART_Init+0x2c>
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	2200      	movs	r2, #0
 8003d1a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003d1e:	6878      	ldr	r0, [r7, #4]
 8003d20:	f7fd fbd4 	bl	80014cc <HAL_UART_MspInit>
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	2224      	movs	r2, #36	@ 0x24
 8003d28:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	68da      	ldr	r2, [r3, #12]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003d3a:	60da      	str	r2, [r3, #12]
 8003d3c:	6878      	ldr	r0, [r7, #4]
 8003d3e:	f000 fcff 	bl	8004740 <UART_SetConfig>
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	691a      	ldr	r2, [r3, #16]
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003d50:	611a      	str	r2, [r3, #16]
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	695a      	ldr	r2, [r3, #20]
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003d60:	615a      	str	r2, [r3, #20]
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	68da      	ldr	r2, [r3, #12]
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003d70:	60da      	str	r2, [r3, #12]
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	2200      	movs	r2, #0
 8003d76:	645a      	str	r2, [r3, #68]	@ 0x44
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	2220      	movs	r2, #32
 8003d7c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	2220      	movs	r2, #32
 8003d84:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	2200      	movs	r2, #0
 8003d8c:	635a      	str	r2, [r3, #52]	@ 0x34
 8003d8e:	2300      	movs	r3, #0
 8003d90:	4618      	mov	r0, r3
 8003d92:	3708      	adds	r7, #8
 8003d94:	46bd      	mov	sp, r7
 8003d96:	bd80      	pop	{r7, pc}

08003d98 <HAL_UART_Transmit_IT>:
 8003d98:	b480      	push	{r7}
 8003d9a:	b085      	sub	sp, #20
 8003d9c:	af00      	add	r7, sp, #0
 8003d9e:	60f8      	str	r0, [r7, #12]
 8003da0:	60b9      	str	r1, [r7, #8]
 8003da2:	4613      	mov	r3, r2
 8003da4:	80fb      	strh	r3, [r7, #6]
 8003da6:	68fb      	ldr	r3, [r7, #12]
 8003da8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003dac:	b2db      	uxtb	r3, r3
 8003dae:	2b20      	cmp	r3, #32
 8003db0:	d121      	bne.n	8003df6 <HAL_UART_Transmit_IT+0x5e>
 8003db2:	68bb      	ldr	r3, [r7, #8]
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	d002      	beq.n	8003dbe <HAL_UART_Transmit_IT+0x26>
 8003db8:	88fb      	ldrh	r3, [r7, #6]
 8003dba:	2b00      	cmp	r3, #0
 8003dbc:	d101      	bne.n	8003dc2 <HAL_UART_Transmit_IT+0x2a>
 8003dbe:	2301      	movs	r3, #1
 8003dc0:	e01a      	b.n	8003df8 <HAL_UART_Transmit_IT+0x60>
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	68ba      	ldr	r2, [r7, #8]
 8003dc6:	621a      	str	r2, [r3, #32]
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	88fa      	ldrh	r2, [r7, #6]
 8003dcc:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003dce:	68fb      	ldr	r3, [r7, #12]
 8003dd0:	88fa      	ldrh	r2, [r7, #6]
 8003dd2:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003dd4:	68fb      	ldr	r3, [r7, #12]
 8003dd6:	2200      	movs	r2, #0
 8003dd8:	645a      	str	r2, [r3, #68]	@ 0x44
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	2221      	movs	r2, #33	@ 0x21
 8003dde:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	68da      	ldr	r2, [r3, #12]
 8003de8:	68fb      	ldr	r3, [r7, #12]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8003df0:	60da      	str	r2, [r3, #12]
 8003df2:	2300      	movs	r3, #0
 8003df4:	e000      	b.n	8003df8 <HAL_UART_Transmit_IT+0x60>
 8003df6:	2302      	movs	r3, #2
 8003df8:	4618      	mov	r0, r3
 8003dfa:	3714      	adds	r7, #20
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	bc80      	pop	{r7}
 8003e00:	4770      	bx	lr

08003e02 <HAL_UART_Receive_IT>:
 8003e02:	b580      	push	{r7, lr}
 8003e04:	b084      	sub	sp, #16
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	60f8      	str	r0, [r7, #12]
 8003e0a:	60b9      	str	r1, [r7, #8]
 8003e0c:	4613      	mov	r3, r2
 8003e0e:	80fb      	strh	r3, [r7, #6]
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003e16:	b2db      	uxtb	r3, r3
 8003e18:	2b20      	cmp	r3, #32
 8003e1a:	d112      	bne.n	8003e42 <HAL_UART_Receive_IT+0x40>
 8003e1c:	68bb      	ldr	r3, [r7, #8]
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	d002      	beq.n	8003e28 <HAL_UART_Receive_IT+0x26>
 8003e22:	88fb      	ldrh	r3, [r7, #6]
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	d101      	bne.n	8003e2c <HAL_UART_Receive_IT+0x2a>
 8003e28:	2301      	movs	r3, #1
 8003e2a:	e00b      	b.n	8003e44 <HAL_UART_Receive_IT+0x42>
 8003e2c:	68fb      	ldr	r3, [r7, #12]
 8003e2e:	2200      	movs	r2, #0
 8003e30:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e32:	88fb      	ldrh	r3, [r7, #6]
 8003e34:	461a      	mov	r2, r3
 8003e36:	68b9      	ldr	r1, [r7, #8]
 8003e38:	68f8      	ldr	r0, [r7, #12]
 8003e3a:	f000 faad 	bl	8004398 <UART_Start_Receive_IT>
 8003e3e:	4603      	mov	r3, r0
 8003e40:	e000      	b.n	8003e44 <HAL_UART_Receive_IT+0x42>
 8003e42:	2302      	movs	r3, #2
 8003e44:	4618      	mov	r0, r3
 8003e46:	3710      	adds	r7, #16
 8003e48:	46bd      	mov	sp, r7
 8003e4a:	bd80      	pop	{r7, pc}

08003e4c <HAL_UART_IRQHandler>:
 8003e4c:	b580      	push	{r7, lr}
 8003e4e:	b0ba      	sub	sp, #232	@ 0xe8
 8003e50:	af00      	add	r7, sp, #0
 8003e52:	6078      	str	r0, [r7, #4]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	68db      	ldr	r3, [r3, #12]
 8003e64:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	695b      	ldr	r3, [r3, #20]
 8003e6e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8003e72:	2300      	movs	r3, #0
 8003e74:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003e78:	2300      	movs	r3, #0
 8003e7a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003e7e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003e82:	f003 030f 	and.w	r3, r3, #15
 8003e86:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003e8a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d10f      	bne.n	8003eb2 <HAL_UART_IRQHandler+0x66>
 8003e92:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003e96:	f003 0320 	and.w	r3, r3, #32
 8003e9a:	2b00      	cmp	r3, #0
 8003e9c:	d009      	beq.n	8003eb2 <HAL_UART_IRQHandler+0x66>
 8003e9e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003ea2:	f003 0320 	and.w	r3, r3, #32
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d003      	beq.n	8003eb2 <HAL_UART_IRQHandler+0x66>
 8003eaa:	6878      	ldr	r0, [r7, #4]
 8003eac:	f000 fb8a 	bl	80045c4 <UART_Receive_IT>
 8003eb0:	e25b      	b.n	800436a <HAL_UART_IRQHandler+0x51e>
 8003eb2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003eb6:	2b00      	cmp	r3, #0
 8003eb8:	f000 80de 	beq.w	8004078 <HAL_UART_IRQHandler+0x22c>
 8003ebc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003ec0:	f003 0301 	and.w	r3, r3, #1
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	d106      	bne.n	8003ed6 <HAL_UART_IRQHandler+0x8a>
 8003ec8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003ecc:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	f000 80d1 	beq.w	8004078 <HAL_UART_IRQHandler+0x22c>
 8003ed6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003eda:	f003 0301 	and.w	r3, r3, #1
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	d00b      	beq.n	8003efa <HAL_UART_IRQHandler+0xae>
 8003ee2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003ee6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003eea:	2b00      	cmp	r3, #0
 8003eec:	d005      	beq.n	8003efa <HAL_UART_IRQHandler+0xae>
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003ef2:	f043 0201 	orr.w	r2, r3, #1
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	645a      	str	r2, [r3, #68]	@ 0x44
 8003efa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003efe:	f003 0304 	and.w	r3, r3, #4
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d00b      	beq.n	8003f1e <HAL_UART_IRQHandler+0xd2>
 8003f06:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003f0a:	f003 0301 	and.w	r3, r3, #1
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d005      	beq.n	8003f1e <HAL_UART_IRQHandler+0xd2>
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f16:	f043 0202 	orr.w	r2, r3, #2
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	645a      	str	r2, [r3, #68]	@ 0x44
 8003f1e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f22:	f003 0302 	and.w	r3, r3, #2
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	d00b      	beq.n	8003f42 <HAL_UART_IRQHandler+0xf6>
 8003f2a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003f2e:	f003 0301 	and.w	r3, r3, #1
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d005      	beq.n	8003f42 <HAL_UART_IRQHandler+0xf6>
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f3a:	f043 0204 	orr.w	r2, r3, #4
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	645a      	str	r2, [r3, #68]	@ 0x44
 8003f42:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f46:	f003 0308 	and.w	r3, r3, #8
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d011      	beq.n	8003f72 <HAL_UART_IRQHandler+0x126>
 8003f4e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f52:	f003 0320 	and.w	r3, r3, #32
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d105      	bne.n	8003f66 <HAL_UART_IRQHandler+0x11a>
 8003f5a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003f5e:	f003 0301 	and.w	r3, r3, #1
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	d005      	beq.n	8003f72 <HAL_UART_IRQHandler+0x126>
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f6a:	f043 0208 	orr.w	r2, r3, #8
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	645a      	str	r2, [r3, #68]	@ 0x44
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	f000 81f2 	beq.w	8004360 <HAL_UART_IRQHandler+0x514>
 8003f7c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f80:	f003 0320 	and.w	r3, r3, #32
 8003f84:	2b00      	cmp	r3, #0
 8003f86:	d008      	beq.n	8003f9a <HAL_UART_IRQHandler+0x14e>
 8003f88:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f8c:	f003 0320 	and.w	r3, r3, #32
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d002      	beq.n	8003f9a <HAL_UART_IRQHandler+0x14e>
 8003f94:	6878      	ldr	r0, [r7, #4]
 8003f96:	f000 fb15 	bl	80045c4 <UART_Receive_IT>
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	695b      	ldr	r3, [r3, #20]
 8003fa0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	bf14      	ite	ne
 8003fa8:	2301      	movne	r3, #1
 8003faa:	2300      	moveq	r3, #0
 8003fac:	b2db      	uxtb	r3, r3
 8003fae:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fb6:	f003 0308 	and.w	r3, r3, #8
 8003fba:	2b00      	cmp	r3, #0
 8003fbc:	d103      	bne.n	8003fc6 <HAL_UART_IRQHandler+0x17a>
 8003fbe:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d04f      	beq.n	8004066 <HAL_UART_IRQHandler+0x21a>
 8003fc6:	6878      	ldr	r0, [r7, #4]
 8003fc8:	f000 fa1f 	bl	800440a <UART_EndRxTransfer>
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	695b      	ldr	r3, [r3, #20]
 8003fd2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d041      	beq.n	800405e <HAL_UART_IRQHandler+0x212>
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	3314      	adds	r3, #20
 8003fe0:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003fe4:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003fe8:	e853 3f00 	ldrex	r3, [r3]
 8003fec:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003ff0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003ff4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003ff8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	3314      	adds	r3, #20
 8004002:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8004006:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800400a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800400e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8004012:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8004016:	e841 2300 	strex	r3, r2, [r1]
 800401a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800401e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8004022:	2b00      	cmp	r3, #0
 8004024:	d1d9      	bne.n	8003fda <HAL_UART_IRQHandler+0x18e>
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800402a:	2b00      	cmp	r3, #0
 800402c:	d013      	beq.n	8004056 <HAL_UART_IRQHandler+0x20a>
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004032:	4a7e      	ldr	r2, [pc, #504]	@ (800422c <HAL_UART_IRQHandler+0x3e0>)
 8004034:	635a      	str	r2, [r3, #52]	@ 0x34
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800403a:	4618      	mov	r0, r3
 800403c:	f7fd fc80 	bl	8001940 <HAL_DMA_Abort_IT>
 8004040:	4603      	mov	r3, r0
 8004042:	2b00      	cmp	r3, #0
 8004044:	d016      	beq.n	8004074 <HAL_UART_IRQHandler+0x228>
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800404a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800404c:	687a      	ldr	r2, [r7, #4]
 800404e:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8004050:	4610      	mov	r0, r2
 8004052:	4798      	blx	r3
 8004054:	e00e      	b.n	8004074 <HAL_UART_IRQHandler+0x228>
 8004056:	6878      	ldr	r0, [r7, #4]
 8004058:	f000 f98a 	bl	8004370 <HAL_UART_ErrorCallback>
 800405c:	e00a      	b.n	8004074 <HAL_UART_IRQHandler+0x228>
 800405e:	6878      	ldr	r0, [r7, #4]
 8004060:	f000 f986 	bl	8004370 <HAL_UART_ErrorCallback>
 8004064:	e006      	b.n	8004074 <HAL_UART_IRQHandler+0x228>
 8004066:	6878      	ldr	r0, [r7, #4]
 8004068:	f000 f982 	bl	8004370 <HAL_UART_ErrorCallback>
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	2200      	movs	r2, #0
 8004070:	645a      	str	r2, [r3, #68]	@ 0x44
 8004072:	e175      	b.n	8004360 <HAL_UART_IRQHandler+0x514>
 8004074:	bf00      	nop
 8004076:	e173      	b.n	8004360 <HAL_UART_IRQHandler+0x514>
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800407c:	2b01      	cmp	r3, #1
 800407e:	f040 814f 	bne.w	8004320 <HAL_UART_IRQHandler+0x4d4>
 8004082:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004086:	f003 0310 	and.w	r3, r3, #16
 800408a:	2b00      	cmp	r3, #0
 800408c:	f000 8148 	beq.w	8004320 <HAL_UART_IRQHandler+0x4d4>
 8004090:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004094:	f003 0310 	and.w	r3, r3, #16
 8004098:	2b00      	cmp	r3, #0
 800409a:	f000 8141 	beq.w	8004320 <HAL_UART_IRQHandler+0x4d4>
 800409e:	2300      	movs	r3, #0
 80040a0:	60bb      	str	r3, [r7, #8]
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	60bb      	str	r3, [r7, #8]
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	685b      	ldr	r3, [r3, #4]
 80040b0:	60bb      	str	r3, [r7, #8]
 80040b2:	68bb      	ldr	r3, [r7, #8]
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	681b      	ldr	r3, [r3, #0]
 80040b8:	695b      	ldr	r3, [r3, #20]
 80040ba:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80040be:	2b00      	cmp	r3, #0
 80040c0:	f000 80b6 	beq.w	8004230 <HAL_UART_IRQHandler+0x3e4>
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	685b      	ldr	r3, [r3, #4]
 80040cc:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80040d0:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	f000 8145 	beq.w	8004364 <HAL_UART_IRQHandler+0x518>
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80040de:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80040e2:	429a      	cmp	r2, r3
 80040e4:	f080 813e 	bcs.w	8004364 <HAL_UART_IRQHandler+0x518>
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80040ee:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040f4:	699b      	ldr	r3, [r3, #24]
 80040f6:	2b20      	cmp	r3, #32
 80040f8:	f000 8088 	beq.w	800420c <HAL_UART_IRQHandler+0x3c0>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	330c      	adds	r3, #12
 8004102:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004106:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800410a:	e853 3f00 	ldrex	r3, [r3]
 800410e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004112:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004116:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800411a:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	330c      	adds	r3, #12
 8004124:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8004128:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800412c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004130:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8004134:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8004138:	e841 2300 	strex	r3, r2, [r1]
 800413c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004140:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004144:	2b00      	cmp	r3, #0
 8004146:	d1d9      	bne.n	80040fc <HAL_UART_IRQHandler+0x2b0>
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	3314      	adds	r3, #20
 800414e:	677b      	str	r3, [r7, #116]	@ 0x74
 8004150:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004152:	e853 3f00 	ldrex	r3, [r3]
 8004156:	673b      	str	r3, [r7, #112]	@ 0x70
 8004158:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800415a:	f023 0301 	bic.w	r3, r3, #1
 800415e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	3314      	adds	r3, #20
 8004168:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800416c:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8004170:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004172:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8004174:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8004178:	e841 2300 	strex	r3, r2, [r1]
 800417c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800417e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004180:	2b00      	cmp	r3, #0
 8004182:	d1e1      	bne.n	8004148 <HAL_UART_IRQHandler+0x2fc>
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	3314      	adds	r3, #20
 800418a:	663b      	str	r3, [r7, #96]	@ 0x60
 800418c:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800418e:	e853 3f00 	ldrex	r3, [r3]
 8004192:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004194:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004196:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800419a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	3314      	adds	r3, #20
 80041a4:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80041a8:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80041aa:	66bb      	str	r3, [r7, #104]	@ 0x68
 80041ac:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80041ae:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80041b0:	e841 2300 	strex	r3, r2, [r1]
 80041b4:	667b      	str	r3, [r7, #100]	@ 0x64
 80041b6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80041b8:	2b00      	cmp	r3, #0
 80041ba:	d1e3      	bne.n	8004184 <HAL_UART_IRQHandler+0x338>
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	2220      	movs	r2, #32
 80041c0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	2200      	movs	r2, #0
 80041c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	330c      	adds	r3, #12
 80041d0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80041d2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80041d4:	e853 3f00 	ldrex	r3, [r3]
 80041d8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80041da:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80041dc:	f023 0310 	bic.w	r3, r3, #16
 80041e0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	681b      	ldr	r3, [r3, #0]
 80041e8:	330c      	adds	r3, #12
 80041ea:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80041ee:	65ba      	str	r2, [r7, #88]	@ 0x58
 80041f0:	657b      	str	r3, [r7, #84]	@ 0x54
 80041f2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80041f4:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80041f6:	e841 2300 	strex	r3, r2, [r1]
 80041fa:	653b      	str	r3, [r7, #80]	@ 0x50
 80041fc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80041fe:	2b00      	cmp	r3, #0
 8004200:	d1e3      	bne.n	80041ca <HAL_UART_IRQHandler+0x37e>
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004206:	4618      	mov	r0, r3
 8004208:	f7fd fb5f 	bl	80018ca <HAL_DMA_Abort>
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	2202      	movs	r2, #2
 8004210:	635a      	str	r2, [r3, #52]	@ 0x34
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800421a:	b29b      	uxth	r3, r3
 800421c:	1ad3      	subs	r3, r2, r3
 800421e:	b29b      	uxth	r3, r3
 8004220:	4619      	mov	r1, r3
 8004222:	6878      	ldr	r0, [r7, #4]
 8004224:	f000 f8ad 	bl	8004382 <HAL_UARTEx_RxEventCallback>
 8004228:	e09c      	b.n	8004364 <HAL_UART_IRQHandler+0x518>
 800422a:	bf00      	nop
 800422c:	080044cf 	.word	0x080044cf
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004238:	b29b      	uxth	r3, r3
 800423a:	1ad3      	subs	r3, r2, r3
 800423c:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004244:	b29b      	uxth	r3, r3
 8004246:	2b00      	cmp	r3, #0
 8004248:	f000 808e 	beq.w	8004368 <HAL_UART_IRQHandler+0x51c>
 800424c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004250:	2b00      	cmp	r3, #0
 8004252:	f000 8089 	beq.w	8004368 <HAL_UART_IRQHandler+0x51c>
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	330c      	adds	r3, #12
 800425c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800425e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004260:	e853 3f00 	ldrex	r3, [r3]
 8004264:	637b      	str	r3, [r7, #52]	@ 0x34
 8004266:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004268:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800426c:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	330c      	adds	r3, #12
 8004276:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800427a:	647a      	str	r2, [r7, #68]	@ 0x44
 800427c:	643b      	str	r3, [r7, #64]	@ 0x40
 800427e:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004280:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004282:	e841 2300 	strex	r3, r2, [r1]
 8004286:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004288:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800428a:	2b00      	cmp	r3, #0
 800428c:	d1e3      	bne.n	8004256 <HAL_UART_IRQHandler+0x40a>
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	3314      	adds	r3, #20
 8004294:	627b      	str	r3, [r7, #36]	@ 0x24
 8004296:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004298:	e853 3f00 	ldrex	r3, [r3]
 800429c:	623b      	str	r3, [r7, #32]
 800429e:	6a3b      	ldr	r3, [r7, #32]
 80042a0:	f023 0301 	bic.w	r3, r3, #1
 80042a4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	3314      	adds	r3, #20
 80042ae:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80042b2:	633a      	str	r2, [r7, #48]	@ 0x30
 80042b4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80042b6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80042b8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80042ba:	e841 2300 	strex	r3, r2, [r1]
 80042be:	62bb      	str	r3, [r7, #40]	@ 0x28
 80042c0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d1e3      	bne.n	800428e <HAL_UART_IRQHandler+0x442>
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	2220      	movs	r2, #32
 80042ca:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	2200      	movs	r2, #0
 80042d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	330c      	adds	r3, #12
 80042da:	613b      	str	r3, [r7, #16]
 80042dc:	693b      	ldr	r3, [r7, #16]
 80042de:	e853 3f00 	ldrex	r3, [r3]
 80042e2:	60fb      	str	r3, [r7, #12]
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	f023 0310 	bic.w	r3, r3, #16
 80042ea:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	330c      	adds	r3, #12
 80042f4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80042f8:	61fa      	str	r2, [r7, #28]
 80042fa:	61bb      	str	r3, [r7, #24]
 80042fc:	69b9      	ldr	r1, [r7, #24]
 80042fe:	69fa      	ldr	r2, [r7, #28]
 8004300:	e841 2300 	strex	r3, r2, [r1]
 8004304:	617b      	str	r3, [r7, #20]
 8004306:	697b      	ldr	r3, [r7, #20]
 8004308:	2b00      	cmp	r3, #0
 800430a:	d1e3      	bne.n	80042d4 <HAL_UART_IRQHandler+0x488>
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	2202      	movs	r2, #2
 8004310:	635a      	str	r2, [r3, #52]	@ 0x34
 8004312:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8004316:	4619      	mov	r1, r3
 8004318:	6878      	ldr	r0, [r7, #4]
 800431a:	f000 f832 	bl	8004382 <HAL_UARTEx_RxEventCallback>
 800431e:	e023      	b.n	8004368 <HAL_UART_IRQHandler+0x51c>
 8004320:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004324:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004328:	2b00      	cmp	r3, #0
 800432a:	d009      	beq.n	8004340 <HAL_UART_IRQHandler+0x4f4>
 800432c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004330:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004334:	2b00      	cmp	r3, #0
 8004336:	d003      	beq.n	8004340 <HAL_UART_IRQHandler+0x4f4>
 8004338:	6878      	ldr	r0, [r7, #4]
 800433a:	f000 f8dc 	bl	80044f6 <UART_Transmit_IT>
 800433e:	e014      	b.n	800436a <HAL_UART_IRQHandler+0x51e>
 8004340:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004344:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004348:	2b00      	cmp	r3, #0
 800434a:	d00e      	beq.n	800436a <HAL_UART_IRQHandler+0x51e>
 800434c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004350:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004354:	2b00      	cmp	r3, #0
 8004356:	d008      	beq.n	800436a <HAL_UART_IRQHandler+0x51e>
 8004358:	6878      	ldr	r0, [r7, #4]
 800435a:	f000 f91b 	bl	8004594 <UART_EndTransmit_IT>
 800435e:	e004      	b.n	800436a <HAL_UART_IRQHandler+0x51e>
 8004360:	bf00      	nop
 8004362:	e002      	b.n	800436a <HAL_UART_IRQHandler+0x51e>
 8004364:	bf00      	nop
 8004366:	e000      	b.n	800436a <HAL_UART_IRQHandler+0x51e>
 8004368:	bf00      	nop
 800436a:	37e8      	adds	r7, #232	@ 0xe8
 800436c:	46bd      	mov	sp, r7
 800436e:	bd80      	pop	{r7, pc}

08004370 <HAL_UART_ErrorCallback>:
 8004370:	b480      	push	{r7}
 8004372:	b083      	sub	sp, #12
 8004374:	af00      	add	r7, sp, #0
 8004376:	6078      	str	r0, [r7, #4]
 8004378:	bf00      	nop
 800437a:	370c      	adds	r7, #12
 800437c:	46bd      	mov	sp, r7
 800437e:	bc80      	pop	{r7}
 8004380:	4770      	bx	lr

08004382 <HAL_UARTEx_RxEventCallback>:
 8004382:	b480      	push	{r7}
 8004384:	b083      	sub	sp, #12
 8004386:	af00      	add	r7, sp, #0
 8004388:	6078      	str	r0, [r7, #4]
 800438a:	460b      	mov	r3, r1
 800438c:	807b      	strh	r3, [r7, #2]
 800438e:	bf00      	nop
 8004390:	370c      	adds	r7, #12
 8004392:	46bd      	mov	sp, r7
 8004394:	bc80      	pop	{r7}
 8004396:	4770      	bx	lr

08004398 <UART_Start_Receive_IT>:
 8004398:	b480      	push	{r7}
 800439a:	b085      	sub	sp, #20
 800439c:	af00      	add	r7, sp, #0
 800439e:	60f8      	str	r0, [r7, #12]
 80043a0:	60b9      	str	r1, [r7, #8]
 80043a2:	4613      	mov	r3, r2
 80043a4:	80fb      	strh	r3, [r7, #6]
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	68ba      	ldr	r2, [r7, #8]
 80043aa:	629a      	str	r2, [r3, #40]	@ 0x28
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	88fa      	ldrh	r2, [r7, #6]
 80043b0:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80043b2:	68fb      	ldr	r3, [r7, #12]
 80043b4:	88fa      	ldrh	r2, [r7, #6]
 80043b6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80043b8:	68fb      	ldr	r3, [r7, #12]
 80043ba:	2200      	movs	r2, #0
 80043bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80043be:	68fb      	ldr	r3, [r7, #12]
 80043c0:	2222      	movs	r2, #34	@ 0x22
 80043c2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80043c6:	68fb      	ldr	r3, [r7, #12]
 80043c8:	691b      	ldr	r3, [r3, #16]
 80043ca:	2b00      	cmp	r3, #0
 80043cc:	d007      	beq.n	80043de <UART_Start_Receive_IT+0x46>
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	68da      	ldr	r2, [r3, #12]
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80043dc:	60da      	str	r2, [r3, #12]
 80043de:	68fb      	ldr	r3, [r7, #12]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	695a      	ldr	r2, [r3, #20]
 80043e4:	68fb      	ldr	r3, [r7, #12]
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	f042 0201 	orr.w	r2, r2, #1
 80043ec:	615a      	str	r2, [r3, #20]
 80043ee:	68fb      	ldr	r3, [r7, #12]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	68da      	ldr	r2, [r3, #12]
 80043f4:	68fb      	ldr	r3, [r7, #12]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	f042 0220 	orr.w	r2, r2, #32
 80043fc:	60da      	str	r2, [r3, #12]
 80043fe:	2300      	movs	r3, #0
 8004400:	4618      	mov	r0, r3
 8004402:	3714      	adds	r7, #20
 8004404:	46bd      	mov	sp, r7
 8004406:	bc80      	pop	{r7}
 8004408:	4770      	bx	lr

0800440a <UART_EndRxTransfer>:
 800440a:	b480      	push	{r7}
 800440c:	b095      	sub	sp, #84	@ 0x54
 800440e:	af00      	add	r7, sp, #0
 8004410:	6078      	str	r0, [r7, #4]
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	330c      	adds	r3, #12
 8004418:	637b      	str	r3, [r7, #52]	@ 0x34
 800441a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800441c:	e853 3f00 	ldrex	r3, [r3]
 8004420:	633b      	str	r3, [r7, #48]	@ 0x30
 8004422:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004424:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004428:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	330c      	adds	r3, #12
 8004430:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004432:	643a      	str	r2, [r7, #64]	@ 0x40
 8004434:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004436:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004438:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800443a:	e841 2300 	strex	r3, r2, [r1]
 800443e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004440:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004442:	2b00      	cmp	r3, #0
 8004444:	d1e5      	bne.n	8004412 <UART_EndRxTransfer+0x8>
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	3314      	adds	r3, #20
 800444c:	623b      	str	r3, [r7, #32]
 800444e:	6a3b      	ldr	r3, [r7, #32]
 8004450:	e853 3f00 	ldrex	r3, [r3]
 8004454:	61fb      	str	r3, [r7, #28]
 8004456:	69fb      	ldr	r3, [r7, #28]
 8004458:	f023 0301 	bic.w	r3, r3, #1
 800445c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	3314      	adds	r3, #20
 8004464:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8004466:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8004468:	62bb      	str	r3, [r7, #40]	@ 0x28
 800446a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800446c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800446e:	e841 2300 	strex	r3, r2, [r1]
 8004472:	627b      	str	r3, [r7, #36]	@ 0x24
 8004474:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004476:	2b00      	cmp	r3, #0
 8004478:	d1e5      	bne.n	8004446 <UART_EndRxTransfer+0x3c>
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800447e:	2b01      	cmp	r3, #1
 8004480:	d119      	bne.n	80044b6 <UART_EndRxTransfer+0xac>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	330c      	adds	r3, #12
 8004488:	60fb      	str	r3, [r7, #12]
 800448a:	68fb      	ldr	r3, [r7, #12]
 800448c:	e853 3f00 	ldrex	r3, [r3]
 8004490:	60bb      	str	r3, [r7, #8]
 8004492:	68bb      	ldr	r3, [r7, #8]
 8004494:	f023 0310 	bic.w	r3, r3, #16
 8004498:	647b      	str	r3, [r7, #68]	@ 0x44
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	330c      	adds	r3, #12
 80044a0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80044a2:	61ba      	str	r2, [r7, #24]
 80044a4:	617b      	str	r3, [r7, #20]
 80044a6:	6979      	ldr	r1, [r7, #20]
 80044a8:	69ba      	ldr	r2, [r7, #24]
 80044aa:	e841 2300 	strex	r3, r2, [r1]
 80044ae:	613b      	str	r3, [r7, #16]
 80044b0:	693b      	ldr	r3, [r7, #16]
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d1e5      	bne.n	8004482 <UART_EndRxTransfer+0x78>
 80044b6:	687b      	ldr	r3, [r7, #4]
 80044b8:	2220      	movs	r2, #32
 80044ba:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	2200      	movs	r2, #0
 80044c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80044c4:	bf00      	nop
 80044c6:	3754      	adds	r7, #84	@ 0x54
 80044c8:	46bd      	mov	sp, r7
 80044ca:	bc80      	pop	{r7}
 80044cc:	4770      	bx	lr

080044ce <UART_DMAAbortOnError>:
 80044ce:	b580      	push	{r7, lr}
 80044d0:	b084      	sub	sp, #16
 80044d2:	af00      	add	r7, sp, #0
 80044d4:	6078      	str	r0, [r7, #4]
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80044da:	60fb      	str	r3, [r7, #12]
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	2200      	movs	r2, #0
 80044e0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80044e2:	68fb      	ldr	r3, [r7, #12]
 80044e4:	2200      	movs	r2, #0
 80044e6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80044e8:	68f8      	ldr	r0, [r7, #12]
 80044ea:	f7ff ff41 	bl	8004370 <HAL_UART_ErrorCallback>
 80044ee:	bf00      	nop
 80044f0:	3710      	adds	r7, #16
 80044f2:	46bd      	mov	sp, r7
 80044f4:	bd80      	pop	{r7, pc}

080044f6 <UART_Transmit_IT>:
 80044f6:	b480      	push	{r7}
 80044f8:	b085      	sub	sp, #20
 80044fa:	af00      	add	r7, sp, #0
 80044fc:	6078      	str	r0, [r7, #4]
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004504:	b2db      	uxtb	r3, r3
 8004506:	2b21      	cmp	r3, #33	@ 0x21
 8004508:	d13e      	bne.n	8004588 <UART_Transmit_IT+0x92>
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	689b      	ldr	r3, [r3, #8]
 800450e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004512:	d114      	bne.n	800453e <UART_Transmit_IT+0x48>
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	691b      	ldr	r3, [r3, #16]
 8004518:	2b00      	cmp	r3, #0
 800451a:	d110      	bne.n	800453e <UART_Transmit_IT+0x48>
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	6a1b      	ldr	r3, [r3, #32]
 8004520:	60fb      	str	r3, [r7, #12]
 8004522:	68fb      	ldr	r3, [r7, #12]
 8004524:	881b      	ldrh	r3, [r3, #0]
 8004526:	461a      	mov	r2, r3
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004530:	605a      	str	r2, [r3, #4]
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	6a1b      	ldr	r3, [r3, #32]
 8004536:	1c9a      	adds	r2, r3, #2
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	621a      	str	r2, [r3, #32]
 800453c:	e008      	b.n	8004550 <UART_Transmit_IT+0x5a>
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	6a1b      	ldr	r3, [r3, #32]
 8004542:	1c59      	adds	r1, r3, #1
 8004544:	687a      	ldr	r2, [r7, #4]
 8004546:	6211      	str	r1, [r2, #32]
 8004548:	781a      	ldrb	r2, [r3, #0]
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	605a      	str	r2, [r3, #4]
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004554:	b29b      	uxth	r3, r3
 8004556:	3b01      	subs	r3, #1
 8004558:	b29b      	uxth	r3, r3
 800455a:	687a      	ldr	r2, [r7, #4]
 800455c:	4619      	mov	r1, r3
 800455e:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8004560:	2b00      	cmp	r3, #0
 8004562:	d10f      	bne.n	8004584 <UART_Transmit_IT+0x8e>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	68da      	ldr	r2, [r3, #12]
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8004572:	60da      	str	r2, [r3, #12]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	68da      	ldr	r2, [r3, #12]
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004582:	60da      	str	r2, [r3, #12]
 8004584:	2300      	movs	r3, #0
 8004586:	e000      	b.n	800458a <UART_Transmit_IT+0x94>
 8004588:	2302      	movs	r3, #2
 800458a:	4618      	mov	r0, r3
 800458c:	3714      	adds	r7, #20
 800458e:	46bd      	mov	sp, r7
 8004590:	bc80      	pop	{r7}
 8004592:	4770      	bx	lr

08004594 <UART_EndTransmit_IT>:
 8004594:	b580      	push	{r7, lr}
 8004596:	b082      	sub	sp, #8
 8004598:	af00      	add	r7, sp, #0
 800459a:	6078      	str	r0, [r7, #4]
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	68da      	ldr	r2, [r3, #12]
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80045aa:	60da      	str	r2, [r3, #12]
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	2220      	movs	r2, #32
 80045b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80045b4:	6878      	ldr	r0, [r7, #4]
 80045b6:	f7fc f8c1 	bl	800073c <HAL_UART_TxCpltCallback>
 80045ba:	2300      	movs	r3, #0
 80045bc:	4618      	mov	r0, r3
 80045be:	3708      	adds	r7, #8
 80045c0:	46bd      	mov	sp, r7
 80045c2:	bd80      	pop	{r7, pc}

080045c4 <UART_Receive_IT>:
 80045c4:	b580      	push	{r7, lr}
 80045c6:	b08c      	sub	sp, #48	@ 0x30
 80045c8:	af00      	add	r7, sp, #0
 80045ca:	6078      	str	r0, [r7, #4]
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80045d2:	b2db      	uxtb	r3, r3
 80045d4:	2b22      	cmp	r3, #34	@ 0x22
 80045d6:	f040 80ae 	bne.w	8004736 <UART_Receive_IT+0x172>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	689b      	ldr	r3, [r3, #8]
 80045de:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80045e2:	d117      	bne.n	8004614 <UART_Receive_IT+0x50>
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	691b      	ldr	r3, [r3, #16]
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d113      	bne.n	8004614 <UART_Receive_IT+0x50>
 80045ec:	2300      	movs	r3, #0
 80045ee:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80045f4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	685b      	ldr	r3, [r3, #4]
 80045fc:	b29b      	uxth	r3, r3
 80045fe:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004602:	b29a      	uxth	r2, r3
 8004604:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004606:	801a      	strh	r2, [r3, #0]
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800460c:	1c9a      	adds	r2, r3, #2
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	629a      	str	r2, [r3, #40]	@ 0x28
 8004612:	e026      	b.n	8004662 <UART_Receive_IT+0x9e>
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004618:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800461a:	2300      	movs	r3, #0
 800461c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	689b      	ldr	r3, [r3, #8]
 8004622:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004626:	d007      	beq.n	8004638 <UART_Receive_IT+0x74>
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	689b      	ldr	r3, [r3, #8]
 800462c:	2b00      	cmp	r3, #0
 800462e:	d10a      	bne.n	8004646 <UART_Receive_IT+0x82>
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	691b      	ldr	r3, [r3, #16]
 8004634:	2b00      	cmp	r3, #0
 8004636:	d106      	bne.n	8004646 <UART_Receive_IT+0x82>
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	681b      	ldr	r3, [r3, #0]
 800463c:	685b      	ldr	r3, [r3, #4]
 800463e:	b2da      	uxtb	r2, r3
 8004640:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004642:	701a      	strb	r2, [r3, #0]
 8004644:	e008      	b.n	8004658 <UART_Receive_IT+0x94>
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	685b      	ldr	r3, [r3, #4]
 800464c:	b2db      	uxtb	r3, r3
 800464e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8004652:	b2da      	uxtb	r2, r3
 8004654:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004656:	701a      	strb	r2, [r3, #0]
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800465c:	1c5a      	adds	r2, r3, #1
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	629a      	str	r2, [r3, #40]	@ 0x28
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8004666:	b29b      	uxth	r3, r3
 8004668:	3b01      	subs	r3, #1
 800466a:	b29b      	uxth	r3, r3
 800466c:	687a      	ldr	r2, [r7, #4]
 800466e:	4619      	mov	r1, r3
 8004670:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8004672:	2b00      	cmp	r3, #0
 8004674:	d15d      	bne.n	8004732 <UART_Receive_IT+0x16e>
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	68da      	ldr	r2, [r3, #12]
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	f022 0220 	bic.w	r2, r2, #32
 8004684:	60da      	str	r2, [r3, #12]
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	68da      	ldr	r2, [r3, #12]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004694:	60da      	str	r2, [r3, #12]
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	695a      	ldr	r2, [r3, #20]
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	f022 0201 	bic.w	r2, r2, #1
 80046a4:	615a      	str	r2, [r3, #20]
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	2220      	movs	r2, #32
 80046aa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	2200      	movs	r2, #0
 80046b2:	635a      	str	r2, [r3, #52]	@ 0x34
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80046b8:	2b01      	cmp	r3, #1
 80046ba:	d135      	bne.n	8004728 <UART_Receive_IT+0x164>
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	2200      	movs	r2, #0
 80046c0:	631a      	str	r2, [r3, #48]	@ 0x30
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	330c      	adds	r3, #12
 80046c8:	617b      	str	r3, [r7, #20]
 80046ca:	697b      	ldr	r3, [r7, #20]
 80046cc:	e853 3f00 	ldrex	r3, [r3]
 80046d0:	613b      	str	r3, [r7, #16]
 80046d2:	693b      	ldr	r3, [r7, #16]
 80046d4:	f023 0310 	bic.w	r3, r3, #16
 80046d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	330c      	adds	r3, #12
 80046e0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80046e2:	623a      	str	r2, [r7, #32]
 80046e4:	61fb      	str	r3, [r7, #28]
 80046e6:	69f9      	ldr	r1, [r7, #28]
 80046e8:	6a3a      	ldr	r2, [r7, #32]
 80046ea:	e841 2300 	strex	r3, r2, [r1]
 80046ee:	61bb      	str	r3, [r7, #24]
 80046f0:	69bb      	ldr	r3, [r7, #24]
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	d1e5      	bne.n	80046c2 <UART_Receive_IT+0xfe>
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	f003 0310 	and.w	r3, r3, #16
 8004700:	2b10      	cmp	r3, #16
 8004702:	d10a      	bne.n	800471a <UART_Receive_IT+0x156>
 8004704:	2300      	movs	r3, #0
 8004706:	60fb      	str	r3, [r7, #12]
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	60fb      	str	r3, [r7, #12]
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	681b      	ldr	r3, [r3, #0]
 8004714:	685b      	ldr	r3, [r3, #4]
 8004716:	60fb      	str	r3, [r7, #12]
 8004718:	68fb      	ldr	r3, [r7, #12]
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800471e:	4619      	mov	r1, r3
 8004720:	6878      	ldr	r0, [r7, #4]
 8004722:	f7ff fe2e 	bl	8004382 <HAL_UARTEx_RxEventCallback>
 8004726:	e002      	b.n	800472e <UART_Receive_IT+0x16a>
 8004728:	6878      	ldr	r0, [r7, #4]
 800472a:	f7fb ffdb 	bl	80006e4 <HAL_UART_RxCpltCallback>
 800472e:	2300      	movs	r3, #0
 8004730:	e002      	b.n	8004738 <UART_Receive_IT+0x174>
 8004732:	2300      	movs	r3, #0
 8004734:	e000      	b.n	8004738 <UART_Receive_IT+0x174>
 8004736:	2302      	movs	r3, #2
 8004738:	4618      	mov	r0, r3
 800473a:	3730      	adds	r7, #48	@ 0x30
 800473c:	46bd      	mov	sp, r7
 800473e:	bd80      	pop	{r7, pc}

08004740 <UART_SetConfig>:
 8004740:	b580      	push	{r7, lr}
 8004742:	b084      	sub	sp, #16
 8004744:	af00      	add	r7, sp, #0
 8004746:	6078      	str	r0, [r7, #4]
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	691b      	ldr	r3, [r3, #16]
 800474e:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	68da      	ldr	r2, [r3, #12]
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	430a      	orrs	r2, r1
 800475c:	611a      	str	r2, [r3, #16]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	689a      	ldr	r2, [r3, #8]
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	691b      	ldr	r3, [r3, #16]
 8004766:	431a      	orrs	r2, r3
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	695b      	ldr	r3, [r3, #20]
 800476c:	4313      	orrs	r3, r2
 800476e:	60bb      	str	r3, [r7, #8]
 8004770:	687b      	ldr	r3, [r7, #4]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	68db      	ldr	r3, [r3, #12]
 8004776:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 800477a:	f023 030c 	bic.w	r3, r3, #12
 800477e:	687a      	ldr	r2, [r7, #4]
 8004780:	6812      	ldr	r2, [r2, #0]
 8004782:	68b9      	ldr	r1, [r7, #8]
 8004784:	430b      	orrs	r3, r1
 8004786:	60d3      	str	r3, [r2, #12]
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	695b      	ldr	r3, [r3, #20]
 800478e:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	699a      	ldr	r2, [r3, #24]
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	430a      	orrs	r2, r1
 800479c:	615a      	str	r2, [r3, #20]
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	4a2c      	ldr	r2, [pc, #176]	@ (8004854 <UART_SetConfig+0x114>)
 80047a4:	4293      	cmp	r3, r2
 80047a6:	d103      	bne.n	80047b0 <UART_SetConfig+0x70>
 80047a8:	f7fd fef6 	bl	8002598 <HAL_RCC_GetPCLK2Freq>
 80047ac:	60f8      	str	r0, [r7, #12]
 80047ae:	e002      	b.n	80047b6 <UART_SetConfig+0x76>
 80047b0:	f7fd fede 	bl	8002570 <HAL_RCC_GetPCLK1Freq>
 80047b4:	60f8      	str	r0, [r7, #12]
 80047b6:	68fa      	ldr	r2, [r7, #12]
 80047b8:	4613      	mov	r3, r2
 80047ba:	009b      	lsls	r3, r3, #2
 80047bc:	4413      	add	r3, r2
 80047be:	009a      	lsls	r2, r3, #2
 80047c0:	441a      	add	r2, r3
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	685b      	ldr	r3, [r3, #4]
 80047c6:	009b      	lsls	r3, r3, #2
 80047c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80047cc:	4a22      	ldr	r2, [pc, #136]	@ (8004858 <UART_SetConfig+0x118>)
 80047ce:	fba2 2303 	umull	r2, r3, r2, r3
 80047d2:	095b      	lsrs	r3, r3, #5
 80047d4:	0119      	lsls	r1, r3, #4
 80047d6:	68fa      	ldr	r2, [r7, #12]
 80047d8:	4613      	mov	r3, r2
 80047da:	009b      	lsls	r3, r3, #2
 80047dc:	4413      	add	r3, r2
 80047de:	009a      	lsls	r2, r3, #2
 80047e0:	441a      	add	r2, r3
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	685b      	ldr	r3, [r3, #4]
 80047e6:	009b      	lsls	r3, r3, #2
 80047e8:	fbb2 f2f3 	udiv	r2, r2, r3
 80047ec:	4b1a      	ldr	r3, [pc, #104]	@ (8004858 <UART_SetConfig+0x118>)
 80047ee:	fba3 0302 	umull	r0, r3, r3, r2
 80047f2:	095b      	lsrs	r3, r3, #5
 80047f4:	2064      	movs	r0, #100	@ 0x64
 80047f6:	fb00 f303 	mul.w	r3, r0, r3
 80047fa:	1ad3      	subs	r3, r2, r3
 80047fc:	011b      	lsls	r3, r3, #4
 80047fe:	3332      	adds	r3, #50	@ 0x32
 8004800:	4a15      	ldr	r2, [pc, #84]	@ (8004858 <UART_SetConfig+0x118>)
 8004802:	fba2 2303 	umull	r2, r3, r2, r3
 8004806:	095b      	lsrs	r3, r3, #5
 8004808:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800480c:	4419      	add	r1, r3
 800480e:	68fa      	ldr	r2, [r7, #12]
 8004810:	4613      	mov	r3, r2
 8004812:	009b      	lsls	r3, r3, #2
 8004814:	4413      	add	r3, r2
 8004816:	009a      	lsls	r2, r3, #2
 8004818:	441a      	add	r2, r3
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	685b      	ldr	r3, [r3, #4]
 800481e:	009b      	lsls	r3, r3, #2
 8004820:	fbb2 f2f3 	udiv	r2, r2, r3
 8004824:	4b0c      	ldr	r3, [pc, #48]	@ (8004858 <UART_SetConfig+0x118>)
 8004826:	fba3 0302 	umull	r0, r3, r3, r2
 800482a:	095b      	lsrs	r3, r3, #5
 800482c:	2064      	movs	r0, #100	@ 0x64
 800482e:	fb00 f303 	mul.w	r3, r0, r3
 8004832:	1ad3      	subs	r3, r2, r3
 8004834:	011b      	lsls	r3, r3, #4
 8004836:	3332      	adds	r3, #50	@ 0x32
 8004838:	4a07      	ldr	r2, [pc, #28]	@ (8004858 <UART_SetConfig+0x118>)
 800483a:	fba2 2303 	umull	r2, r3, r2, r3
 800483e:	095b      	lsrs	r3, r3, #5
 8004840:	f003 020f 	and.w	r2, r3, #15
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	440a      	add	r2, r1
 800484a:	609a      	str	r2, [r3, #8]
 800484c:	bf00      	nop
 800484e:	3710      	adds	r7, #16
 8004850:	46bd      	mov	sp, r7
 8004852:	bd80      	pop	{r7, pc}
 8004854:	40013800 	.word	0x40013800
 8004858:	51eb851f 	.word	0x51eb851f

0800485c <atoi>:
 800485c:	220a      	movs	r2, #10
 800485e:	2100      	movs	r1, #0
 8004860:	f000 b87a 	b.w	8004958 <strtol>

08004864 <_strtol_l.constprop.0>:
 8004864:	2b24      	cmp	r3, #36	@ 0x24
 8004866:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800486a:	4686      	mov	lr, r0
 800486c:	4690      	mov	r8, r2
 800486e:	d801      	bhi.n	8004874 <_strtol_l.constprop.0+0x10>
 8004870:	2b01      	cmp	r3, #1
 8004872:	d106      	bne.n	8004882 <_strtol_l.constprop.0+0x1e>
 8004874:	f000 f8b4 	bl	80049e0 <__errno>
 8004878:	2316      	movs	r3, #22
 800487a:	6003      	str	r3, [r0, #0]
 800487c:	2000      	movs	r0, #0
 800487e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004882:	460d      	mov	r5, r1
 8004884:	4833      	ldr	r0, [pc, #204]	@ (8004954 <_strtol_l.constprop.0+0xf0>)
 8004886:	462a      	mov	r2, r5
 8004888:	f815 4b01 	ldrb.w	r4, [r5], #1
 800488c:	5d06      	ldrb	r6, [r0, r4]
 800488e:	f016 0608 	ands.w	r6, r6, #8
 8004892:	d1f8      	bne.n	8004886 <_strtol_l.constprop.0+0x22>
 8004894:	2c2d      	cmp	r4, #45	@ 0x2d
 8004896:	d12d      	bne.n	80048f4 <_strtol_l.constprop.0+0x90>
 8004898:	2601      	movs	r6, #1
 800489a:	782c      	ldrb	r4, [r5, #0]
 800489c:	1c95      	adds	r5, r2, #2
 800489e:	f033 0210 	bics.w	r2, r3, #16
 80048a2:	d109      	bne.n	80048b8 <_strtol_l.constprop.0+0x54>
 80048a4:	2c30      	cmp	r4, #48	@ 0x30
 80048a6:	d12a      	bne.n	80048fe <_strtol_l.constprop.0+0x9a>
 80048a8:	782a      	ldrb	r2, [r5, #0]
 80048aa:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80048ae:	2a58      	cmp	r2, #88	@ 0x58
 80048b0:	d125      	bne.n	80048fe <_strtol_l.constprop.0+0x9a>
 80048b2:	2310      	movs	r3, #16
 80048b4:	786c      	ldrb	r4, [r5, #1]
 80048b6:	3502      	adds	r5, #2
 80048b8:	2200      	movs	r2, #0
 80048ba:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 80048be:	f10c 3cff 	add.w	ip, ip, #4294967295
 80048c2:	fbbc f9f3 	udiv	r9, ip, r3
 80048c6:	4610      	mov	r0, r2
 80048c8:	fb03 ca19 	mls	sl, r3, r9, ip
 80048cc:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 80048d0:	2f09      	cmp	r7, #9
 80048d2:	d81b      	bhi.n	800490c <_strtol_l.constprop.0+0xa8>
 80048d4:	463c      	mov	r4, r7
 80048d6:	42a3      	cmp	r3, r4
 80048d8:	dd27      	ble.n	800492a <_strtol_l.constprop.0+0xc6>
 80048da:	1c57      	adds	r7, r2, #1
 80048dc:	d007      	beq.n	80048ee <_strtol_l.constprop.0+0x8a>
 80048de:	4581      	cmp	r9, r0
 80048e0:	d320      	bcc.n	8004924 <_strtol_l.constprop.0+0xc0>
 80048e2:	d101      	bne.n	80048e8 <_strtol_l.constprop.0+0x84>
 80048e4:	45a2      	cmp	sl, r4
 80048e6:	db1d      	blt.n	8004924 <_strtol_l.constprop.0+0xc0>
 80048e8:	2201      	movs	r2, #1
 80048ea:	fb00 4003 	mla	r0, r0, r3, r4
 80048ee:	f815 4b01 	ldrb.w	r4, [r5], #1
 80048f2:	e7eb      	b.n	80048cc <_strtol_l.constprop.0+0x68>
 80048f4:	2c2b      	cmp	r4, #43	@ 0x2b
 80048f6:	bf04      	itt	eq
 80048f8:	782c      	ldrbeq	r4, [r5, #0]
 80048fa:	1c95      	addeq	r5, r2, #2
 80048fc:	e7cf      	b.n	800489e <_strtol_l.constprop.0+0x3a>
 80048fe:	2b00      	cmp	r3, #0
 8004900:	d1da      	bne.n	80048b8 <_strtol_l.constprop.0+0x54>
 8004902:	2c30      	cmp	r4, #48	@ 0x30
 8004904:	bf0c      	ite	eq
 8004906:	2308      	moveq	r3, #8
 8004908:	230a      	movne	r3, #10
 800490a:	e7d5      	b.n	80048b8 <_strtol_l.constprop.0+0x54>
 800490c:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8004910:	2f19      	cmp	r7, #25
 8004912:	d801      	bhi.n	8004918 <_strtol_l.constprop.0+0xb4>
 8004914:	3c37      	subs	r4, #55	@ 0x37
 8004916:	e7de      	b.n	80048d6 <_strtol_l.constprop.0+0x72>
 8004918:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800491c:	2f19      	cmp	r7, #25
 800491e:	d804      	bhi.n	800492a <_strtol_l.constprop.0+0xc6>
 8004920:	3c57      	subs	r4, #87	@ 0x57
 8004922:	e7d8      	b.n	80048d6 <_strtol_l.constprop.0+0x72>
 8004924:	f04f 32ff 	mov.w	r2, #4294967295
 8004928:	e7e1      	b.n	80048ee <_strtol_l.constprop.0+0x8a>
 800492a:	1c53      	adds	r3, r2, #1
 800492c:	d108      	bne.n	8004940 <_strtol_l.constprop.0+0xdc>
 800492e:	2322      	movs	r3, #34	@ 0x22
 8004930:	4660      	mov	r0, ip
 8004932:	f8ce 3000 	str.w	r3, [lr]
 8004936:	f1b8 0f00 	cmp.w	r8, #0
 800493a:	d0a0      	beq.n	800487e <_strtol_l.constprop.0+0x1a>
 800493c:	1e69      	subs	r1, r5, #1
 800493e:	e006      	b.n	800494e <_strtol_l.constprop.0+0xea>
 8004940:	b106      	cbz	r6, 8004944 <_strtol_l.constprop.0+0xe0>
 8004942:	4240      	negs	r0, r0
 8004944:	f1b8 0f00 	cmp.w	r8, #0
 8004948:	d099      	beq.n	800487e <_strtol_l.constprop.0+0x1a>
 800494a:	2a00      	cmp	r2, #0
 800494c:	d1f6      	bne.n	800493c <_strtol_l.constprop.0+0xd8>
 800494e:	f8c8 1000 	str.w	r1, [r8]
 8004952:	e794      	b.n	800487e <_strtol_l.constprop.0+0x1a>
 8004954:	08005393 	.word	0x08005393

08004958 <strtol>:
 8004958:	4613      	mov	r3, r2
 800495a:	460a      	mov	r2, r1
 800495c:	4601      	mov	r1, r0
 800495e:	4802      	ldr	r0, [pc, #8]	@ (8004968 <strtol+0x10>)
 8004960:	6800      	ldr	r0, [r0, #0]
 8004962:	f7ff bf7f 	b.w	8004864 <_strtol_l.constprop.0>
 8004966:	bf00      	nop
 8004968:	20000014 	.word	0x20000014

0800496c <_vsiprintf_r>:
 800496c:	b500      	push	{lr}
 800496e:	b09b      	sub	sp, #108	@ 0x6c
 8004970:	9100      	str	r1, [sp, #0]
 8004972:	9104      	str	r1, [sp, #16]
 8004974:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004978:	9105      	str	r1, [sp, #20]
 800497a:	9102      	str	r1, [sp, #8]
 800497c:	4905      	ldr	r1, [pc, #20]	@ (8004994 <_vsiprintf_r+0x28>)
 800497e:	9103      	str	r1, [sp, #12]
 8004980:	4669      	mov	r1, sp
 8004982:	f000 f9ab 	bl	8004cdc <_svfiprintf_r>
 8004986:	2200      	movs	r2, #0
 8004988:	9b00      	ldr	r3, [sp, #0]
 800498a:	701a      	strb	r2, [r3, #0]
 800498c:	b01b      	add	sp, #108	@ 0x6c
 800498e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004992:	bf00      	nop
 8004994:	ffff0208 	.word	0xffff0208

08004998 <vsiprintf>:
 8004998:	4613      	mov	r3, r2
 800499a:	460a      	mov	r2, r1
 800499c:	4601      	mov	r1, r0
 800499e:	4802      	ldr	r0, [pc, #8]	@ (80049a8 <vsiprintf+0x10>)
 80049a0:	6800      	ldr	r0, [r0, #0]
 80049a2:	f7ff bfe3 	b.w	800496c <_vsiprintf_r>
 80049a6:	bf00      	nop
 80049a8:	20000014 	.word	0x20000014

080049ac <memset>:
 80049ac:	4603      	mov	r3, r0
 80049ae:	4402      	add	r2, r0
 80049b0:	4293      	cmp	r3, r2
 80049b2:	d100      	bne.n	80049b6 <memset+0xa>
 80049b4:	4770      	bx	lr
 80049b6:	f803 1b01 	strb.w	r1, [r3], #1
 80049ba:	e7f9      	b.n	80049b0 <memset+0x4>

080049bc <strncmp>:
 80049bc:	b510      	push	{r4, lr}
 80049be:	b16a      	cbz	r2, 80049dc <strncmp+0x20>
 80049c0:	3901      	subs	r1, #1
 80049c2:	1884      	adds	r4, r0, r2
 80049c4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80049c8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80049cc:	429a      	cmp	r2, r3
 80049ce:	d103      	bne.n	80049d8 <strncmp+0x1c>
 80049d0:	42a0      	cmp	r0, r4
 80049d2:	d001      	beq.n	80049d8 <strncmp+0x1c>
 80049d4:	2a00      	cmp	r2, #0
 80049d6:	d1f5      	bne.n	80049c4 <strncmp+0x8>
 80049d8:	1ad0      	subs	r0, r2, r3
 80049da:	bd10      	pop	{r4, pc}
 80049dc:	4610      	mov	r0, r2
 80049de:	e7fc      	b.n	80049da <strncmp+0x1e>

080049e0 <__errno>:
 80049e0:	4b01      	ldr	r3, [pc, #4]	@ (80049e8 <__errno+0x8>)
 80049e2:	6818      	ldr	r0, [r3, #0]
 80049e4:	4770      	bx	lr
 80049e6:	bf00      	nop
 80049e8:	20000014 	.word	0x20000014

080049ec <__libc_init_array>:
 80049ec:	b570      	push	{r4, r5, r6, lr}
 80049ee:	2600      	movs	r6, #0
 80049f0:	4d0c      	ldr	r5, [pc, #48]	@ (8004a24 <__libc_init_array+0x38>)
 80049f2:	4c0d      	ldr	r4, [pc, #52]	@ (8004a28 <__libc_init_array+0x3c>)
 80049f4:	1b64      	subs	r4, r4, r5
 80049f6:	10a4      	asrs	r4, r4, #2
 80049f8:	42a6      	cmp	r6, r4
 80049fa:	d109      	bne.n	8004a10 <__libc_init_array+0x24>
 80049fc:	f000 fc78 	bl	80052f0 <_init>
 8004a00:	2600      	movs	r6, #0
 8004a02:	4d0a      	ldr	r5, [pc, #40]	@ (8004a2c <__libc_init_array+0x40>)
 8004a04:	4c0a      	ldr	r4, [pc, #40]	@ (8004a30 <__libc_init_array+0x44>)
 8004a06:	1b64      	subs	r4, r4, r5
 8004a08:	10a4      	asrs	r4, r4, #2
 8004a0a:	42a6      	cmp	r6, r4
 8004a0c:	d105      	bne.n	8004a1a <__libc_init_array+0x2e>
 8004a0e:	bd70      	pop	{r4, r5, r6, pc}
 8004a10:	f855 3b04 	ldr.w	r3, [r5], #4
 8004a14:	4798      	blx	r3
 8004a16:	3601      	adds	r6, #1
 8004a18:	e7ee      	b.n	80049f8 <__libc_init_array+0xc>
 8004a1a:	f855 3b04 	ldr.w	r3, [r5], #4
 8004a1e:	4798      	blx	r3
 8004a20:	3601      	adds	r6, #1
 8004a22:	e7f2      	b.n	8004a0a <__libc_init_array+0x1e>
 8004a24:	080054d0 	.word	0x080054d0
 8004a28:	080054d0 	.word	0x080054d0
 8004a2c:	080054d0 	.word	0x080054d0
 8004a30:	080054d4 	.word	0x080054d4

08004a34 <__retarget_lock_acquire_recursive>:
 8004a34:	4770      	bx	lr

08004a36 <__retarget_lock_release_recursive>:
 8004a36:	4770      	bx	lr

08004a38 <_free_r>:
 8004a38:	b538      	push	{r3, r4, r5, lr}
 8004a3a:	4605      	mov	r5, r0
 8004a3c:	2900      	cmp	r1, #0
 8004a3e:	d040      	beq.n	8004ac2 <_free_r+0x8a>
 8004a40:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004a44:	1f0c      	subs	r4, r1, #4
 8004a46:	2b00      	cmp	r3, #0
 8004a48:	bfb8      	it	lt
 8004a4a:	18e4      	addlt	r4, r4, r3
 8004a4c:	f000 f8de 	bl	8004c0c <__malloc_lock>
 8004a50:	4a1c      	ldr	r2, [pc, #112]	@ (8004ac4 <_free_r+0x8c>)
 8004a52:	6813      	ldr	r3, [r2, #0]
 8004a54:	b933      	cbnz	r3, 8004a64 <_free_r+0x2c>
 8004a56:	6063      	str	r3, [r4, #4]
 8004a58:	6014      	str	r4, [r2, #0]
 8004a5a:	4628      	mov	r0, r5
 8004a5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004a60:	f000 b8da 	b.w	8004c18 <__malloc_unlock>
 8004a64:	42a3      	cmp	r3, r4
 8004a66:	d908      	bls.n	8004a7a <_free_r+0x42>
 8004a68:	6820      	ldr	r0, [r4, #0]
 8004a6a:	1821      	adds	r1, r4, r0
 8004a6c:	428b      	cmp	r3, r1
 8004a6e:	bf01      	itttt	eq
 8004a70:	6819      	ldreq	r1, [r3, #0]
 8004a72:	685b      	ldreq	r3, [r3, #4]
 8004a74:	1809      	addeq	r1, r1, r0
 8004a76:	6021      	streq	r1, [r4, #0]
 8004a78:	e7ed      	b.n	8004a56 <_free_r+0x1e>
 8004a7a:	461a      	mov	r2, r3
 8004a7c:	685b      	ldr	r3, [r3, #4]
 8004a7e:	b10b      	cbz	r3, 8004a84 <_free_r+0x4c>
 8004a80:	42a3      	cmp	r3, r4
 8004a82:	d9fa      	bls.n	8004a7a <_free_r+0x42>
 8004a84:	6811      	ldr	r1, [r2, #0]
 8004a86:	1850      	adds	r0, r2, r1
 8004a88:	42a0      	cmp	r0, r4
 8004a8a:	d10b      	bne.n	8004aa4 <_free_r+0x6c>
 8004a8c:	6820      	ldr	r0, [r4, #0]
 8004a8e:	4401      	add	r1, r0
 8004a90:	1850      	adds	r0, r2, r1
 8004a92:	4283      	cmp	r3, r0
 8004a94:	6011      	str	r1, [r2, #0]
 8004a96:	d1e0      	bne.n	8004a5a <_free_r+0x22>
 8004a98:	6818      	ldr	r0, [r3, #0]
 8004a9a:	685b      	ldr	r3, [r3, #4]
 8004a9c:	4408      	add	r0, r1
 8004a9e:	6010      	str	r0, [r2, #0]
 8004aa0:	6053      	str	r3, [r2, #4]
 8004aa2:	e7da      	b.n	8004a5a <_free_r+0x22>
 8004aa4:	d902      	bls.n	8004aac <_free_r+0x74>
 8004aa6:	230c      	movs	r3, #12
 8004aa8:	602b      	str	r3, [r5, #0]
 8004aaa:	e7d6      	b.n	8004a5a <_free_r+0x22>
 8004aac:	6820      	ldr	r0, [r4, #0]
 8004aae:	1821      	adds	r1, r4, r0
 8004ab0:	428b      	cmp	r3, r1
 8004ab2:	bf01      	itttt	eq
 8004ab4:	6819      	ldreq	r1, [r3, #0]
 8004ab6:	685b      	ldreq	r3, [r3, #4]
 8004ab8:	1809      	addeq	r1, r1, r0
 8004aba:	6021      	streq	r1, [r4, #0]
 8004abc:	6063      	str	r3, [r4, #4]
 8004abe:	6054      	str	r4, [r2, #4]
 8004ac0:	e7cb      	b.n	8004a5a <_free_r+0x22>
 8004ac2:	bd38      	pop	{r3, r4, r5, pc}
 8004ac4:	2000141c 	.word	0x2000141c

08004ac8 <sbrk_aligned>:
 8004ac8:	b570      	push	{r4, r5, r6, lr}
 8004aca:	4e0f      	ldr	r6, [pc, #60]	@ (8004b08 <sbrk_aligned+0x40>)
 8004acc:	460c      	mov	r4, r1
 8004ace:	6831      	ldr	r1, [r6, #0]
 8004ad0:	4605      	mov	r5, r0
 8004ad2:	b911      	cbnz	r1, 8004ada <sbrk_aligned+0x12>
 8004ad4:	f000 fbaa 	bl	800522c <_sbrk_r>
 8004ad8:	6030      	str	r0, [r6, #0]
 8004ada:	4621      	mov	r1, r4
 8004adc:	4628      	mov	r0, r5
 8004ade:	f000 fba5 	bl	800522c <_sbrk_r>
 8004ae2:	1c43      	adds	r3, r0, #1
 8004ae4:	d103      	bne.n	8004aee <sbrk_aligned+0x26>
 8004ae6:	f04f 34ff 	mov.w	r4, #4294967295
 8004aea:	4620      	mov	r0, r4
 8004aec:	bd70      	pop	{r4, r5, r6, pc}
 8004aee:	1cc4      	adds	r4, r0, #3
 8004af0:	f024 0403 	bic.w	r4, r4, #3
 8004af4:	42a0      	cmp	r0, r4
 8004af6:	d0f8      	beq.n	8004aea <sbrk_aligned+0x22>
 8004af8:	1a21      	subs	r1, r4, r0
 8004afa:	4628      	mov	r0, r5
 8004afc:	f000 fb96 	bl	800522c <_sbrk_r>
 8004b00:	3001      	adds	r0, #1
 8004b02:	d1f2      	bne.n	8004aea <sbrk_aligned+0x22>
 8004b04:	e7ef      	b.n	8004ae6 <sbrk_aligned+0x1e>
 8004b06:	bf00      	nop
 8004b08:	20001418 	.word	0x20001418

08004b0c <_malloc_r>:
 8004b0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b10:	1ccd      	adds	r5, r1, #3
 8004b12:	f025 0503 	bic.w	r5, r5, #3
 8004b16:	3508      	adds	r5, #8
 8004b18:	2d0c      	cmp	r5, #12
 8004b1a:	bf38      	it	cc
 8004b1c:	250c      	movcc	r5, #12
 8004b1e:	2d00      	cmp	r5, #0
 8004b20:	4606      	mov	r6, r0
 8004b22:	db01      	blt.n	8004b28 <_malloc_r+0x1c>
 8004b24:	42a9      	cmp	r1, r5
 8004b26:	d904      	bls.n	8004b32 <_malloc_r+0x26>
 8004b28:	230c      	movs	r3, #12
 8004b2a:	6033      	str	r3, [r6, #0]
 8004b2c:	2000      	movs	r0, #0
 8004b2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004b32:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004c08 <_malloc_r+0xfc>
 8004b36:	f000 f869 	bl	8004c0c <__malloc_lock>
 8004b3a:	f8d8 3000 	ldr.w	r3, [r8]
 8004b3e:	461c      	mov	r4, r3
 8004b40:	bb44      	cbnz	r4, 8004b94 <_malloc_r+0x88>
 8004b42:	4629      	mov	r1, r5
 8004b44:	4630      	mov	r0, r6
 8004b46:	f7ff ffbf 	bl	8004ac8 <sbrk_aligned>
 8004b4a:	1c43      	adds	r3, r0, #1
 8004b4c:	4604      	mov	r4, r0
 8004b4e:	d158      	bne.n	8004c02 <_malloc_r+0xf6>
 8004b50:	f8d8 4000 	ldr.w	r4, [r8]
 8004b54:	4627      	mov	r7, r4
 8004b56:	2f00      	cmp	r7, #0
 8004b58:	d143      	bne.n	8004be2 <_malloc_r+0xd6>
 8004b5a:	2c00      	cmp	r4, #0
 8004b5c:	d04b      	beq.n	8004bf6 <_malloc_r+0xea>
 8004b5e:	6823      	ldr	r3, [r4, #0]
 8004b60:	4639      	mov	r1, r7
 8004b62:	4630      	mov	r0, r6
 8004b64:	eb04 0903 	add.w	r9, r4, r3
 8004b68:	f000 fb60 	bl	800522c <_sbrk_r>
 8004b6c:	4581      	cmp	r9, r0
 8004b6e:	d142      	bne.n	8004bf6 <_malloc_r+0xea>
 8004b70:	6821      	ldr	r1, [r4, #0]
 8004b72:	4630      	mov	r0, r6
 8004b74:	1a6d      	subs	r5, r5, r1
 8004b76:	4629      	mov	r1, r5
 8004b78:	f7ff ffa6 	bl	8004ac8 <sbrk_aligned>
 8004b7c:	3001      	adds	r0, #1
 8004b7e:	d03a      	beq.n	8004bf6 <_malloc_r+0xea>
 8004b80:	6823      	ldr	r3, [r4, #0]
 8004b82:	442b      	add	r3, r5
 8004b84:	6023      	str	r3, [r4, #0]
 8004b86:	f8d8 3000 	ldr.w	r3, [r8]
 8004b8a:	685a      	ldr	r2, [r3, #4]
 8004b8c:	bb62      	cbnz	r2, 8004be8 <_malloc_r+0xdc>
 8004b8e:	f8c8 7000 	str.w	r7, [r8]
 8004b92:	e00f      	b.n	8004bb4 <_malloc_r+0xa8>
 8004b94:	6822      	ldr	r2, [r4, #0]
 8004b96:	1b52      	subs	r2, r2, r5
 8004b98:	d420      	bmi.n	8004bdc <_malloc_r+0xd0>
 8004b9a:	2a0b      	cmp	r2, #11
 8004b9c:	d917      	bls.n	8004bce <_malloc_r+0xc2>
 8004b9e:	1961      	adds	r1, r4, r5
 8004ba0:	42a3      	cmp	r3, r4
 8004ba2:	6025      	str	r5, [r4, #0]
 8004ba4:	bf18      	it	ne
 8004ba6:	6059      	strne	r1, [r3, #4]
 8004ba8:	6863      	ldr	r3, [r4, #4]
 8004baa:	bf08      	it	eq
 8004bac:	f8c8 1000 	streq.w	r1, [r8]
 8004bb0:	5162      	str	r2, [r4, r5]
 8004bb2:	604b      	str	r3, [r1, #4]
 8004bb4:	4630      	mov	r0, r6
 8004bb6:	f000 f82f 	bl	8004c18 <__malloc_unlock>
 8004bba:	f104 000b 	add.w	r0, r4, #11
 8004bbe:	1d23      	adds	r3, r4, #4
 8004bc0:	f020 0007 	bic.w	r0, r0, #7
 8004bc4:	1ac2      	subs	r2, r0, r3
 8004bc6:	bf1c      	itt	ne
 8004bc8:	1a1b      	subne	r3, r3, r0
 8004bca:	50a3      	strne	r3, [r4, r2]
 8004bcc:	e7af      	b.n	8004b2e <_malloc_r+0x22>
 8004bce:	6862      	ldr	r2, [r4, #4]
 8004bd0:	42a3      	cmp	r3, r4
 8004bd2:	bf0c      	ite	eq
 8004bd4:	f8c8 2000 	streq.w	r2, [r8]
 8004bd8:	605a      	strne	r2, [r3, #4]
 8004bda:	e7eb      	b.n	8004bb4 <_malloc_r+0xa8>
 8004bdc:	4623      	mov	r3, r4
 8004bde:	6864      	ldr	r4, [r4, #4]
 8004be0:	e7ae      	b.n	8004b40 <_malloc_r+0x34>
 8004be2:	463c      	mov	r4, r7
 8004be4:	687f      	ldr	r7, [r7, #4]
 8004be6:	e7b6      	b.n	8004b56 <_malloc_r+0x4a>
 8004be8:	461a      	mov	r2, r3
 8004bea:	685b      	ldr	r3, [r3, #4]
 8004bec:	42a3      	cmp	r3, r4
 8004bee:	d1fb      	bne.n	8004be8 <_malloc_r+0xdc>
 8004bf0:	2300      	movs	r3, #0
 8004bf2:	6053      	str	r3, [r2, #4]
 8004bf4:	e7de      	b.n	8004bb4 <_malloc_r+0xa8>
 8004bf6:	230c      	movs	r3, #12
 8004bf8:	4630      	mov	r0, r6
 8004bfa:	6033      	str	r3, [r6, #0]
 8004bfc:	f000 f80c 	bl	8004c18 <__malloc_unlock>
 8004c00:	e794      	b.n	8004b2c <_malloc_r+0x20>
 8004c02:	6005      	str	r5, [r0, #0]
 8004c04:	e7d6      	b.n	8004bb4 <_malloc_r+0xa8>
 8004c06:	bf00      	nop
 8004c08:	2000141c 	.word	0x2000141c

08004c0c <__malloc_lock>:
 8004c0c:	4801      	ldr	r0, [pc, #4]	@ (8004c14 <__malloc_lock+0x8>)
 8004c0e:	f7ff bf11 	b.w	8004a34 <__retarget_lock_acquire_recursive>
 8004c12:	bf00      	nop
 8004c14:	20001414 	.word	0x20001414

08004c18 <__malloc_unlock>:
 8004c18:	4801      	ldr	r0, [pc, #4]	@ (8004c20 <__malloc_unlock+0x8>)
 8004c1a:	f7ff bf0c 	b.w	8004a36 <__retarget_lock_release_recursive>
 8004c1e:	bf00      	nop
 8004c20:	20001414 	.word	0x20001414

08004c24 <__ssputs_r>:
 8004c24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c28:	461f      	mov	r7, r3
 8004c2a:	688e      	ldr	r6, [r1, #8]
 8004c2c:	4682      	mov	sl, r0
 8004c2e:	42be      	cmp	r6, r7
 8004c30:	460c      	mov	r4, r1
 8004c32:	4690      	mov	r8, r2
 8004c34:	680b      	ldr	r3, [r1, #0]
 8004c36:	d82d      	bhi.n	8004c94 <__ssputs_r+0x70>
 8004c38:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004c3c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8004c40:	d026      	beq.n	8004c90 <__ssputs_r+0x6c>
 8004c42:	6965      	ldr	r5, [r4, #20]
 8004c44:	6909      	ldr	r1, [r1, #16]
 8004c46:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004c4a:	eba3 0901 	sub.w	r9, r3, r1
 8004c4e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004c52:	1c7b      	adds	r3, r7, #1
 8004c54:	444b      	add	r3, r9
 8004c56:	106d      	asrs	r5, r5, #1
 8004c58:	429d      	cmp	r5, r3
 8004c5a:	bf38      	it	cc
 8004c5c:	461d      	movcc	r5, r3
 8004c5e:	0553      	lsls	r3, r2, #21
 8004c60:	d527      	bpl.n	8004cb2 <__ssputs_r+0x8e>
 8004c62:	4629      	mov	r1, r5
 8004c64:	f7ff ff52 	bl	8004b0c <_malloc_r>
 8004c68:	4606      	mov	r6, r0
 8004c6a:	b360      	cbz	r0, 8004cc6 <__ssputs_r+0xa2>
 8004c6c:	464a      	mov	r2, r9
 8004c6e:	6921      	ldr	r1, [r4, #16]
 8004c70:	f000 fafa 	bl	8005268 <memcpy>
 8004c74:	89a3      	ldrh	r3, [r4, #12]
 8004c76:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004c7a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004c7e:	81a3      	strh	r3, [r4, #12]
 8004c80:	6126      	str	r6, [r4, #16]
 8004c82:	444e      	add	r6, r9
 8004c84:	6026      	str	r6, [r4, #0]
 8004c86:	463e      	mov	r6, r7
 8004c88:	6165      	str	r5, [r4, #20]
 8004c8a:	eba5 0509 	sub.w	r5, r5, r9
 8004c8e:	60a5      	str	r5, [r4, #8]
 8004c90:	42be      	cmp	r6, r7
 8004c92:	d900      	bls.n	8004c96 <__ssputs_r+0x72>
 8004c94:	463e      	mov	r6, r7
 8004c96:	4632      	mov	r2, r6
 8004c98:	4641      	mov	r1, r8
 8004c9a:	6820      	ldr	r0, [r4, #0]
 8004c9c:	f000 faac 	bl	80051f8 <memmove>
 8004ca0:	2000      	movs	r0, #0
 8004ca2:	68a3      	ldr	r3, [r4, #8]
 8004ca4:	1b9b      	subs	r3, r3, r6
 8004ca6:	60a3      	str	r3, [r4, #8]
 8004ca8:	6823      	ldr	r3, [r4, #0]
 8004caa:	4433      	add	r3, r6
 8004cac:	6023      	str	r3, [r4, #0]
 8004cae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004cb2:	462a      	mov	r2, r5
 8004cb4:	f000 fae6 	bl	8005284 <_realloc_r>
 8004cb8:	4606      	mov	r6, r0
 8004cba:	2800      	cmp	r0, #0
 8004cbc:	d1e0      	bne.n	8004c80 <__ssputs_r+0x5c>
 8004cbe:	4650      	mov	r0, sl
 8004cc0:	6921      	ldr	r1, [r4, #16]
 8004cc2:	f7ff feb9 	bl	8004a38 <_free_r>
 8004cc6:	230c      	movs	r3, #12
 8004cc8:	f8ca 3000 	str.w	r3, [sl]
 8004ccc:	89a3      	ldrh	r3, [r4, #12]
 8004cce:	f04f 30ff 	mov.w	r0, #4294967295
 8004cd2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004cd6:	81a3      	strh	r3, [r4, #12]
 8004cd8:	e7e9      	b.n	8004cae <__ssputs_r+0x8a>
	...

08004cdc <_svfiprintf_r>:
 8004cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ce0:	4698      	mov	r8, r3
 8004ce2:	898b      	ldrh	r3, [r1, #12]
 8004ce4:	4607      	mov	r7, r0
 8004ce6:	061b      	lsls	r3, r3, #24
 8004ce8:	460d      	mov	r5, r1
 8004cea:	4614      	mov	r4, r2
 8004cec:	b09d      	sub	sp, #116	@ 0x74
 8004cee:	d510      	bpl.n	8004d12 <_svfiprintf_r+0x36>
 8004cf0:	690b      	ldr	r3, [r1, #16]
 8004cf2:	b973      	cbnz	r3, 8004d12 <_svfiprintf_r+0x36>
 8004cf4:	2140      	movs	r1, #64	@ 0x40
 8004cf6:	f7ff ff09 	bl	8004b0c <_malloc_r>
 8004cfa:	6028      	str	r0, [r5, #0]
 8004cfc:	6128      	str	r0, [r5, #16]
 8004cfe:	b930      	cbnz	r0, 8004d0e <_svfiprintf_r+0x32>
 8004d00:	230c      	movs	r3, #12
 8004d02:	603b      	str	r3, [r7, #0]
 8004d04:	f04f 30ff 	mov.w	r0, #4294967295
 8004d08:	b01d      	add	sp, #116	@ 0x74
 8004d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d0e:	2340      	movs	r3, #64	@ 0x40
 8004d10:	616b      	str	r3, [r5, #20]
 8004d12:	2300      	movs	r3, #0
 8004d14:	9309      	str	r3, [sp, #36]	@ 0x24
 8004d16:	2320      	movs	r3, #32
 8004d18:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004d1c:	2330      	movs	r3, #48	@ 0x30
 8004d1e:	f04f 0901 	mov.w	r9, #1
 8004d22:	f8cd 800c 	str.w	r8, [sp, #12]
 8004d26:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8004ec0 <_svfiprintf_r+0x1e4>
 8004d2a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004d2e:	4623      	mov	r3, r4
 8004d30:	469a      	mov	sl, r3
 8004d32:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004d36:	b10a      	cbz	r2, 8004d3c <_svfiprintf_r+0x60>
 8004d38:	2a25      	cmp	r2, #37	@ 0x25
 8004d3a:	d1f9      	bne.n	8004d30 <_svfiprintf_r+0x54>
 8004d3c:	ebba 0b04 	subs.w	fp, sl, r4
 8004d40:	d00b      	beq.n	8004d5a <_svfiprintf_r+0x7e>
 8004d42:	465b      	mov	r3, fp
 8004d44:	4622      	mov	r2, r4
 8004d46:	4629      	mov	r1, r5
 8004d48:	4638      	mov	r0, r7
 8004d4a:	f7ff ff6b 	bl	8004c24 <__ssputs_r>
 8004d4e:	3001      	adds	r0, #1
 8004d50:	f000 80a7 	beq.w	8004ea2 <_svfiprintf_r+0x1c6>
 8004d54:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004d56:	445a      	add	r2, fp
 8004d58:	9209      	str	r2, [sp, #36]	@ 0x24
 8004d5a:	f89a 3000 	ldrb.w	r3, [sl]
 8004d5e:	2b00      	cmp	r3, #0
 8004d60:	f000 809f 	beq.w	8004ea2 <_svfiprintf_r+0x1c6>
 8004d64:	2300      	movs	r3, #0
 8004d66:	f04f 32ff 	mov.w	r2, #4294967295
 8004d6a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004d6e:	f10a 0a01 	add.w	sl, sl, #1
 8004d72:	9304      	str	r3, [sp, #16]
 8004d74:	9307      	str	r3, [sp, #28]
 8004d76:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004d7a:	931a      	str	r3, [sp, #104]	@ 0x68
 8004d7c:	4654      	mov	r4, sl
 8004d7e:	2205      	movs	r2, #5
 8004d80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004d84:	484e      	ldr	r0, [pc, #312]	@ (8004ec0 <_svfiprintf_r+0x1e4>)
 8004d86:	f000 fa61 	bl	800524c <memchr>
 8004d8a:	9a04      	ldr	r2, [sp, #16]
 8004d8c:	b9d8      	cbnz	r0, 8004dc6 <_svfiprintf_r+0xea>
 8004d8e:	06d0      	lsls	r0, r2, #27
 8004d90:	bf44      	itt	mi
 8004d92:	2320      	movmi	r3, #32
 8004d94:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004d98:	0711      	lsls	r1, r2, #28
 8004d9a:	bf44      	itt	mi
 8004d9c:	232b      	movmi	r3, #43	@ 0x2b
 8004d9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004da2:	f89a 3000 	ldrb.w	r3, [sl]
 8004da6:	2b2a      	cmp	r3, #42	@ 0x2a
 8004da8:	d015      	beq.n	8004dd6 <_svfiprintf_r+0xfa>
 8004daa:	4654      	mov	r4, sl
 8004dac:	2000      	movs	r0, #0
 8004dae:	f04f 0c0a 	mov.w	ip, #10
 8004db2:	9a07      	ldr	r2, [sp, #28]
 8004db4:	4621      	mov	r1, r4
 8004db6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004dba:	3b30      	subs	r3, #48	@ 0x30
 8004dbc:	2b09      	cmp	r3, #9
 8004dbe:	d94b      	bls.n	8004e58 <_svfiprintf_r+0x17c>
 8004dc0:	b1b0      	cbz	r0, 8004df0 <_svfiprintf_r+0x114>
 8004dc2:	9207      	str	r2, [sp, #28]
 8004dc4:	e014      	b.n	8004df0 <_svfiprintf_r+0x114>
 8004dc6:	eba0 0308 	sub.w	r3, r0, r8
 8004dca:	fa09 f303 	lsl.w	r3, r9, r3
 8004dce:	4313      	orrs	r3, r2
 8004dd0:	46a2      	mov	sl, r4
 8004dd2:	9304      	str	r3, [sp, #16]
 8004dd4:	e7d2      	b.n	8004d7c <_svfiprintf_r+0xa0>
 8004dd6:	9b03      	ldr	r3, [sp, #12]
 8004dd8:	1d19      	adds	r1, r3, #4
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	9103      	str	r1, [sp, #12]
 8004dde:	2b00      	cmp	r3, #0
 8004de0:	bfbb      	ittet	lt
 8004de2:	425b      	neglt	r3, r3
 8004de4:	f042 0202 	orrlt.w	r2, r2, #2
 8004de8:	9307      	strge	r3, [sp, #28]
 8004dea:	9307      	strlt	r3, [sp, #28]
 8004dec:	bfb8      	it	lt
 8004dee:	9204      	strlt	r2, [sp, #16]
 8004df0:	7823      	ldrb	r3, [r4, #0]
 8004df2:	2b2e      	cmp	r3, #46	@ 0x2e
 8004df4:	d10a      	bne.n	8004e0c <_svfiprintf_r+0x130>
 8004df6:	7863      	ldrb	r3, [r4, #1]
 8004df8:	2b2a      	cmp	r3, #42	@ 0x2a
 8004dfa:	d132      	bne.n	8004e62 <_svfiprintf_r+0x186>
 8004dfc:	9b03      	ldr	r3, [sp, #12]
 8004dfe:	3402      	adds	r4, #2
 8004e00:	1d1a      	adds	r2, r3, #4
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	9203      	str	r2, [sp, #12]
 8004e06:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004e0a:	9305      	str	r3, [sp, #20]
 8004e0c:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8004ec4 <_svfiprintf_r+0x1e8>
 8004e10:	2203      	movs	r2, #3
 8004e12:	4650      	mov	r0, sl
 8004e14:	7821      	ldrb	r1, [r4, #0]
 8004e16:	f000 fa19 	bl	800524c <memchr>
 8004e1a:	b138      	cbz	r0, 8004e2c <_svfiprintf_r+0x150>
 8004e1c:	2240      	movs	r2, #64	@ 0x40
 8004e1e:	9b04      	ldr	r3, [sp, #16]
 8004e20:	eba0 000a 	sub.w	r0, r0, sl
 8004e24:	4082      	lsls	r2, r0
 8004e26:	4313      	orrs	r3, r2
 8004e28:	3401      	adds	r4, #1
 8004e2a:	9304      	str	r3, [sp, #16]
 8004e2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004e30:	2206      	movs	r2, #6
 8004e32:	4825      	ldr	r0, [pc, #148]	@ (8004ec8 <_svfiprintf_r+0x1ec>)
 8004e34:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004e38:	f000 fa08 	bl	800524c <memchr>
 8004e3c:	2800      	cmp	r0, #0
 8004e3e:	d036      	beq.n	8004eae <_svfiprintf_r+0x1d2>
 8004e40:	4b22      	ldr	r3, [pc, #136]	@ (8004ecc <_svfiprintf_r+0x1f0>)
 8004e42:	bb1b      	cbnz	r3, 8004e8c <_svfiprintf_r+0x1b0>
 8004e44:	9b03      	ldr	r3, [sp, #12]
 8004e46:	3307      	adds	r3, #7
 8004e48:	f023 0307 	bic.w	r3, r3, #7
 8004e4c:	3308      	adds	r3, #8
 8004e4e:	9303      	str	r3, [sp, #12]
 8004e50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004e52:	4433      	add	r3, r6
 8004e54:	9309      	str	r3, [sp, #36]	@ 0x24
 8004e56:	e76a      	b.n	8004d2e <_svfiprintf_r+0x52>
 8004e58:	460c      	mov	r4, r1
 8004e5a:	2001      	movs	r0, #1
 8004e5c:	fb0c 3202 	mla	r2, ip, r2, r3
 8004e60:	e7a8      	b.n	8004db4 <_svfiprintf_r+0xd8>
 8004e62:	2300      	movs	r3, #0
 8004e64:	f04f 0c0a 	mov.w	ip, #10
 8004e68:	4619      	mov	r1, r3
 8004e6a:	3401      	adds	r4, #1
 8004e6c:	9305      	str	r3, [sp, #20]
 8004e6e:	4620      	mov	r0, r4
 8004e70:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004e74:	3a30      	subs	r2, #48	@ 0x30
 8004e76:	2a09      	cmp	r2, #9
 8004e78:	d903      	bls.n	8004e82 <_svfiprintf_r+0x1a6>
 8004e7a:	2b00      	cmp	r3, #0
 8004e7c:	d0c6      	beq.n	8004e0c <_svfiprintf_r+0x130>
 8004e7e:	9105      	str	r1, [sp, #20]
 8004e80:	e7c4      	b.n	8004e0c <_svfiprintf_r+0x130>
 8004e82:	4604      	mov	r4, r0
 8004e84:	2301      	movs	r3, #1
 8004e86:	fb0c 2101 	mla	r1, ip, r1, r2
 8004e8a:	e7f0      	b.n	8004e6e <_svfiprintf_r+0x192>
 8004e8c:	ab03      	add	r3, sp, #12
 8004e8e:	9300      	str	r3, [sp, #0]
 8004e90:	462a      	mov	r2, r5
 8004e92:	4638      	mov	r0, r7
 8004e94:	4b0e      	ldr	r3, [pc, #56]	@ (8004ed0 <_svfiprintf_r+0x1f4>)
 8004e96:	a904      	add	r1, sp, #16
 8004e98:	f3af 8000 	nop.w
 8004e9c:	1c42      	adds	r2, r0, #1
 8004e9e:	4606      	mov	r6, r0
 8004ea0:	d1d6      	bne.n	8004e50 <_svfiprintf_r+0x174>
 8004ea2:	89ab      	ldrh	r3, [r5, #12]
 8004ea4:	065b      	lsls	r3, r3, #25
 8004ea6:	f53f af2d 	bmi.w	8004d04 <_svfiprintf_r+0x28>
 8004eaa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004eac:	e72c      	b.n	8004d08 <_svfiprintf_r+0x2c>
 8004eae:	ab03      	add	r3, sp, #12
 8004eb0:	9300      	str	r3, [sp, #0]
 8004eb2:	462a      	mov	r2, r5
 8004eb4:	4638      	mov	r0, r7
 8004eb6:	4b06      	ldr	r3, [pc, #24]	@ (8004ed0 <_svfiprintf_r+0x1f4>)
 8004eb8:	a904      	add	r1, sp, #16
 8004eba:	f000 f87d 	bl	8004fb8 <_printf_i>
 8004ebe:	e7ed      	b.n	8004e9c <_svfiprintf_r+0x1c0>
 8004ec0:	08005493 	.word	0x08005493
 8004ec4:	08005499 	.word	0x08005499
 8004ec8:	0800549d 	.word	0x0800549d
 8004ecc:	00000000 	.word	0x00000000
 8004ed0:	08004c25 	.word	0x08004c25

08004ed4 <_printf_common>:
 8004ed4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ed8:	4616      	mov	r6, r2
 8004eda:	4698      	mov	r8, r3
 8004edc:	688a      	ldr	r2, [r1, #8]
 8004ede:	690b      	ldr	r3, [r1, #16]
 8004ee0:	4607      	mov	r7, r0
 8004ee2:	4293      	cmp	r3, r2
 8004ee4:	bfb8      	it	lt
 8004ee6:	4613      	movlt	r3, r2
 8004ee8:	6033      	str	r3, [r6, #0]
 8004eea:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8004eee:	460c      	mov	r4, r1
 8004ef0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004ef4:	b10a      	cbz	r2, 8004efa <_printf_common+0x26>
 8004ef6:	3301      	adds	r3, #1
 8004ef8:	6033      	str	r3, [r6, #0]
 8004efa:	6823      	ldr	r3, [r4, #0]
 8004efc:	0699      	lsls	r1, r3, #26
 8004efe:	bf42      	ittt	mi
 8004f00:	6833      	ldrmi	r3, [r6, #0]
 8004f02:	3302      	addmi	r3, #2
 8004f04:	6033      	strmi	r3, [r6, #0]
 8004f06:	6825      	ldr	r5, [r4, #0]
 8004f08:	f015 0506 	ands.w	r5, r5, #6
 8004f0c:	d106      	bne.n	8004f1c <_printf_common+0x48>
 8004f0e:	f104 0a19 	add.w	sl, r4, #25
 8004f12:	68e3      	ldr	r3, [r4, #12]
 8004f14:	6832      	ldr	r2, [r6, #0]
 8004f16:	1a9b      	subs	r3, r3, r2
 8004f18:	42ab      	cmp	r3, r5
 8004f1a:	dc2b      	bgt.n	8004f74 <_printf_common+0xa0>
 8004f1c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8004f20:	6822      	ldr	r2, [r4, #0]
 8004f22:	3b00      	subs	r3, #0
 8004f24:	bf18      	it	ne
 8004f26:	2301      	movne	r3, #1
 8004f28:	0692      	lsls	r2, r2, #26
 8004f2a:	d430      	bmi.n	8004f8e <_printf_common+0xba>
 8004f2c:	4641      	mov	r1, r8
 8004f2e:	4638      	mov	r0, r7
 8004f30:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8004f34:	47c8      	blx	r9
 8004f36:	3001      	adds	r0, #1
 8004f38:	d023      	beq.n	8004f82 <_printf_common+0xae>
 8004f3a:	6823      	ldr	r3, [r4, #0]
 8004f3c:	6922      	ldr	r2, [r4, #16]
 8004f3e:	f003 0306 	and.w	r3, r3, #6
 8004f42:	2b04      	cmp	r3, #4
 8004f44:	bf14      	ite	ne
 8004f46:	2500      	movne	r5, #0
 8004f48:	6833      	ldreq	r3, [r6, #0]
 8004f4a:	f04f 0600 	mov.w	r6, #0
 8004f4e:	bf08      	it	eq
 8004f50:	68e5      	ldreq	r5, [r4, #12]
 8004f52:	f104 041a 	add.w	r4, r4, #26
 8004f56:	bf08      	it	eq
 8004f58:	1aed      	subeq	r5, r5, r3
 8004f5a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8004f5e:	bf08      	it	eq
 8004f60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004f64:	4293      	cmp	r3, r2
 8004f66:	bfc4      	itt	gt
 8004f68:	1a9b      	subgt	r3, r3, r2
 8004f6a:	18ed      	addgt	r5, r5, r3
 8004f6c:	42b5      	cmp	r5, r6
 8004f6e:	d11a      	bne.n	8004fa6 <_printf_common+0xd2>
 8004f70:	2000      	movs	r0, #0
 8004f72:	e008      	b.n	8004f86 <_printf_common+0xb2>
 8004f74:	2301      	movs	r3, #1
 8004f76:	4652      	mov	r2, sl
 8004f78:	4641      	mov	r1, r8
 8004f7a:	4638      	mov	r0, r7
 8004f7c:	47c8      	blx	r9
 8004f7e:	3001      	adds	r0, #1
 8004f80:	d103      	bne.n	8004f8a <_printf_common+0xb6>
 8004f82:	f04f 30ff 	mov.w	r0, #4294967295
 8004f86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f8a:	3501      	adds	r5, #1
 8004f8c:	e7c1      	b.n	8004f12 <_printf_common+0x3e>
 8004f8e:	2030      	movs	r0, #48	@ 0x30
 8004f90:	18e1      	adds	r1, r4, r3
 8004f92:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004f96:	1c5a      	adds	r2, r3, #1
 8004f98:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8004f9c:	4422      	add	r2, r4
 8004f9e:	3302      	adds	r3, #2
 8004fa0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004fa4:	e7c2      	b.n	8004f2c <_printf_common+0x58>
 8004fa6:	2301      	movs	r3, #1
 8004fa8:	4622      	mov	r2, r4
 8004faa:	4641      	mov	r1, r8
 8004fac:	4638      	mov	r0, r7
 8004fae:	47c8      	blx	r9
 8004fb0:	3001      	adds	r0, #1
 8004fb2:	d0e6      	beq.n	8004f82 <_printf_common+0xae>
 8004fb4:	3601      	adds	r6, #1
 8004fb6:	e7d9      	b.n	8004f6c <_printf_common+0x98>

08004fb8 <_printf_i>:
 8004fb8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004fbc:	7e0f      	ldrb	r7, [r1, #24]
 8004fbe:	4691      	mov	r9, r2
 8004fc0:	2f78      	cmp	r7, #120	@ 0x78
 8004fc2:	4680      	mov	r8, r0
 8004fc4:	460c      	mov	r4, r1
 8004fc6:	469a      	mov	sl, r3
 8004fc8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004fca:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8004fce:	d807      	bhi.n	8004fe0 <_printf_i+0x28>
 8004fd0:	2f62      	cmp	r7, #98	@ 0x62
 8004fd2:	d80a      	bhi.n	8004fea <_printf_i+0x32>
 8004fd4:	2f00      	cmp	r7, #0
 8004fd6:	f000 80d3 	beq.w	8005180 <_printf_i+0x1c8>
 8004fda:	2f58      	cmp	r7, #88	@ 0x58
 8004fdc:	f000 80ba 	beq.w	8005154 <_printf_i+0x19c>
 8004fe0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004fe4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8004fe8:	e03a      	b.n	8005060 <_printf_i+0xa8>
 8004fea:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8004fee:	2b15      	cmp	r3, #21
 8004ff0:	d8f6      	bhi.n	8004fe0 <_printf_i+0x28>
 8004ff2:	a101      	add	r1, pc, #4	@ (adr r1, 8004ff8 <_printf_i+0x40>)
 8004ff4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004ff8:	08005051 	.word	0x08005051
 8004ffc:	08005065 	.word	0x08005065
 8005000:	08004fe1 	.word	0x08004fe1
 8005004:	08004fe1 	.word	0x08004fe1
 8005008:	08004fe1 	.word	0x08004fe1
 800500c:	08004fe1 	.word	0x08004fe1
 8005010:	08005065 	.word	0x08005065
 8005014:	08004fe1 	.word	0x08004fe1
 8005018:	08004fe1 	.word	0x08004fe1
 800501c:	08004fe1 	.word	0x08004fe1
 8005020:	08004fe1 	.word	0x08004fe1
 8005024:	08005167 	.word	0x08005167
 8005028:	0800508f 	.word	0x0800508f
 800502c:	08005121 	.word	0x08005121
 8005030:	08004fe1 	.word	0x08004fe1
 8005034:	08004fe1 	.word	0x08004fe1
 8005038:	08005189 	.word	0x08005189
 800503c:	08004fe1 	.word	0x08004fe1
 8005040:	0800508f 	.word	0x0800508f
 8005044:	08004fe1 	.word	0x08004fe1
 8005048:	08004fe1 	.word	0x08004fe1
 800504c:	08005129 	.word	0x08005129
 8005050:	6833      	ldr	r3, [r6, #0]
 8005052:	1d1a      	adds	r2, r3, #4
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	6032      	str	r2, [r6, #0]
 8005058:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800505c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005060:	2301      	movs	r3, #1
 8005062:	e09e      	b.n	80051a2 <_printf_i+0x1ea>
 8005064:	6833      	ldr	r3, [r6, #0]
 8005066:	6820      	ldr	r0, [r4, #0]
 8005068:	1d19      	adds	r1, r3, #4
 800506a:	6031      	str	r1, [r6, #0]
 800506c:	0606      	lsls	r6, r0, #24
 800506e:	d501      	bpl.n	8005074 <_printf_i+0xbc>
 8005070:	681d      	ldr	r5, [r3, #0]
 8005072:	e003      	b.n	800507c <_printf_i+0xc4>
 8005074:	0645      	lsls	r5, r0, #25
 8005076:	d5fb      	bpl.n	8005070 <_printf_i+0xb8>
 8005078:	f9b3 5000 	ldrsh.w	r5, [r3]
 800507c:	2d00      	cmp	r5, #0
 800507e:	da03      	bge.n	8005088 <_printf_i+0xd0>
 8005080:	232d      	movs	r3, #45	@ 0x2d
 8005082:	426d      	negs	r5, r5
 8005084:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005088:	230a      	movs	r3, #10
 800508a:	4859      	ldr	r0, [pc, #356]	@ (80051f0 <_printf_i+0x238>)
 800508c:	e011      	b.n	80050b2 <_printf_i+0xfa>
 800508e:	6821      	ldr	r1, [r4, #0]
 8005090:	6833      	ldr	r3, [r6, #0]
 8005092:	0608      	lsls	r0, r1, #24
 8005094:	f853 5b04 	ldr.w	r5, [r3], #4
 8005098:	d402      	bmi.n	80050a0 <_printf_i+0xe8>
 800509a:	0649      	lsls	r1, r1, #25
 800509c:	bf48      	it	mi
 800509e:	b2ad      	uxthmi	r5, r5
 80050a0:	2f6f      	cmp	r7, #111	@ 0x6f
 80050a2:	6033      	str	r3, [r6, #0]
 80050a4:	bf14      	ite	ne
 80050a6:	230a      	movne	r3, #10
 80050a8:	2308      	moveq	r3, #8
 80050aa:	4851      	ldr	r0, [pc, #324]	@ (80051f0 <_printf_i+0x238>)
 80050ac:	2100      	movs	r1, #0
 80050ae:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80050b2:	6866      	ldr	r6, [r4, #4]
 80050b4:	2e00      	cmp	r6, #0
 80050b6:	bfa8      	it	ge
 80050b8:	6821      	ldrge	r1, [r4, #0]
 80050ba:	60a6      	str	r6, [r4, #8]
 80050bc:	bfa4      	itt	ge
 80050be:	f021 0104 	bicge.w	r1, r1, #4
 80050c2:	6021      	strge	r1, [r4, #0]
 80050c4:	b90d      	cbnz	r5, 80050ca <_printf_i+0x112>
 80050c6:	2e00      	cmp	r6, #0
 80050c8:	d04b      	beq.n	8005162 <_printf_i+0x1aa>
 80050ca:	4616      	mov	r6, r2
 80050cc:	fbb5 f1f3 	udiv	r1, r5, r3
 80050d0:	fb03 5711 	mls	r7, r3, r1, r5
 80050d4:	5dc7      	ldrb	r7, [r0, r7]
 80050d6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80050da:	462f      	mov	r7, r5
 80050dc:	42bb      	cmp	r3, r7
 80050de:	460d      	mov	r5, r1
 80050e0:	d9f4      	bls.n	80050cc <_printf_i+0x114>
 80050e2:	2b08      	cmp	r3, #8
 80050e4:	d10b      	bne.n	80050fe <_printf_i+0x146>
 80050e6:	6823      	ldr	r3, [r4, #0]
 80050e8:	07df      	lsls	r7, r3, #31
 80050ea:	d508      	bpl.n	80050fe <_printf_i+0x146>
 80050ec:	6923      	ldr	r3, [r4, #16]
 80050ee:	6861      	ldr	r1, [r4, #4]
 80050f0:	4299      	cmp	r1, r3
 80050f2:	bfde      	ittt	le
 80050f4:	2330      	movle	r3, #48	@ 0x30
 80050f6:	f806 3c01 	strble.w	r3, [r6, #-1]
 80050fa:	f106 36ff 	addle.w	r6, r6, #4294967295
 80050fe:	1b92      	subs	r2, r2, r6
 8005100:	6122      	str	r2, [r4, #16]
 8005102:	464b      	mov	r3, r9
 8005104:	4621      	mov	r1, r4
 8005106:	4640      	mov	r0, r8
 8005108:	f8cd a000 	str.w	sl, [sp]
 800510c:	aa03      	add	r2, sp, #12
 800510e:	f7ff fee1 	bl	8004ed4 <_printf_common>
 8005112:	3001      	adds	r0, #1
 8005114:	d14a      	bne.n	80051ac <_printf_i+0x1f4>
 8005116:	f04f 30ff 	mov.w	r0, #4294967295
 800511a:	b004      	add	sp, #16
 800511c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005120:	6823      	ldr	r3, [r4, #0]
 8005122:	f043 0320 	orr.w	r3, r3, #32
 8005126:	6023      	str	r3, [r4, #0]
 8005128:	2778      	movs	r7, #120	@ 0x78
 800512a:	4832      	ldr	r0, [pc, #200]	@ (80051f4 <_printf_i+0x23c>)
 800512c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005130:	6823      	ldr	r3, [r4, #0]
 8005132:	6831      	ldr	r1, [r6, #0]
 8005134:	061f      	lsls	r7, r3, #24
 8005136:	f851 5b04 	ldr.w	r5, [r1], #4
 800513a:	d402      	bmi.n	8005142 <_printf_i+0x18a>
 800513c:	065f      	lsls	r7, r3, #25
 800513e:	bf48      	it	mi
 8005140:	b2ad      	uxthmi	r5, r5
 8005142:	6031      	str	r1, [r6, #0]
 8005144:	07d9      	lsls	r1, r3, #31
 8005146:	bf44      	itt	mi
 8005148:	f043 0320 	orrmi.w	r3, r3, #32
 800514c:	6023      	strmi	r3, [r4, #0]
 800514e:	b11d      	cbz	r5, 8005158 <_printf_i+0x1a0>
 8005150:	2310      	movs	r3, #16
 8005152:	e7ab      	b.n	80050ac <_printf_i+0xf4>
 8005154:	4826      	ldr	r0, [pc, #152]	@ (80051f0 <_printf_i+0x238>)
 8005156:	e7e9      	b.n	800512c <_printf_i+0x174>
 8005158:	6823      	ldr	r3, [r4, #0]
 800515a:	f023 0320 	bic.w	r3, r3, #32
 800515e:	6023      	str	r3, [r4, #0]
 8005160:	e7f6      	b.n	8005150 <_printf_i+0x198>
 8005162:	4616      	mov	r6, r2
 8005164:	e7bd      	b.n	80050e2 <_printf_i+0x12a>
 8005166:	6833      	ldr	r3, [r6, #0]
 8005168:	6825      	ldr	r5, [r4, #0]
 800516a:	1d18      	adds	r0, r3, #4
 800516c:	6961      	ldr	r1, [r4, #20]
 800516e:	6030      	str	r0, [r6, #0]
 8005170:	062e      	lsls	r6, r5, #24
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	d501      	bpl.n	800517a <_printf_i+0x1c2>
 8005176:	6019      	str	r1, [r3, #0]
 8005178:	e002      	b.n	8005180 <_printf_i+0x1c8>
 800517a:	0668      	lsls	r0, r5, #25
 800517c:	d5fb      	bpl.n	8005176 <_printf_i+0x1be>
 800517e:	8019      	strh	r1, [r3, #0]
 8005180:	2300      	movs	r3, #0
 8005182:	4616      	mov	r6, r2
 8005184:	6123      	str	r3, [r4, #16]
 8005186:	e7bc      	b.n	8005102 <_printf_i+0x14a>
 8005188:	6833      	ldr	r3, [r6, #0]
 800518a:	2100      	movs	r1, #0
 800518c:	1d1a      	adds	r2, r3, #4
 800518e:	6032      	str	r2, [r6, #0]
 8005190:	681e      	ldr	r6, [r3, #0]
 8005192:	6862      	ldr	r2, [r4, #4]
 8005194:	4630      	mov	r0, r6
 8005196:	f000 f859 	bl	800524c <memchr>
 800519a:	b108      	cbz	r0, 80051a0 <_printf_i+0x1e8>
 800519c:	1b80      	subs	r0, r0, r6
 800519e:	6060      	str	r0, [r4, #4]
 80051a0:	6863      	ldr	r3, [r4, #4]
 80051a2:	6123      	str	r3, [r4, #16]
 80051a4:	2300      	movs	r3, #0
 80051a6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80051aa:	e7aa      	b.n	8005102 <_printf_i+0x14a>
 80051ac:	4632      	mov	r2, r6
 80051ae:	4649      	mov	r1, r9
 80051b0:	4640      	mov	r0, r8
 80051b2:	6923      	ldr	r3, [r4, #16]
 80051b4:	47d0      	blx	sl
 80051b6:	3001      	adds	r0, #1
 80051b8:	d0ad      	beq.n	8005116 <_printf_i+0x15e>
 80051ba:	6823      	ldr	r3, [r4, #0]
 80051bc:	079b      	lsls	r3, r3, #30
 80051be:	d413      	bmi.n	80051e8 <_printf_i+0x230>
 80051c0:	68e0      	ldr	r0, [r4, #12]
 80051c2:	9b03      	ldr	r3, [sp, #12]
 80051c4:	4298      	cmp	r0, r3
 80051c6:	bfb8      	it	lt
 80051c8:	4618      	movlt	r0, r3
 80051ca:	e7a6      	b.n	800511a <_printf_i+0x162>
 80051cc:	2301      	movs	r3, #1
 80051ce:	4632      	mov	r2, r6
 80051d0:	4649      	mov	r1, r9
 80051d2:	4640      	mov	r0, r8
 80051d4:	47d0      	blx	sl
 80051d6:	3001      	adds	r0, #1
 80051d8:	d09d      	beq.n	8005116 <_printf_i+0x15e>
 80051da:	3501      	adds	r5, #1
 80051dc:	68e3      	ldr	r3, [r4, #12]
 80051de:	9903      	ldr	r1, [sp, #12]
 80051e0:	1a5b      	subs	r3, r3, r1
 80051e2:	42ab      	cmp	r3, r5
 80051e4:	dcf2      	bgt.n	80051cc <_printf_i+0x214>
 80051e6:	e7eb      	b.n	80051c0 <_printf_i+0x208>
 80051e8:	2500      	movs	r5, #0
 80051ea:	f104 0619 	add.w	r6, r4, #25
 80051ee:	e7f5      	b.n	80051dc <_printf_i+0x224>
 80051f0:	080054a4 	.word	0x080054a4
 80051f4:	080054b5 	.word	0x080054b5

080051f8 <memmove>:
 80051f8:	4288      	cmp	r0, r1
 80051fa:	b510      	push	{r4, lr}
 80051fc:	eb01 0402 	add.w	r4, r1, r2
 8005200:	d902      	bls.n	8005208 <memmove+0x10>
 8005202:	4284      	cmp	r4, r0
 8005204:	4623      	mov	r3, r4
 8005206:	d807      	bhi.n	8005218 <memmove+0x20>
 8005208:	1e43      	subs	r3, r0, #1
 800520a:	42a1      	cmp	r1, r4
 800520c:	d008      	beq.n	8005220 <memmove+0x28>
 800520e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005212:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005216:	e7f8      	b.n	800520a <memmove+0x12>
 8005218:	4601      	mov	r1, r0
 800521a:	4402      	add	r2, r0
 800521c:	428a      	cmp	r2, r1
 800521e:	d100      	bne.n	8005222 <memmove+0x2a>
 8005220:	bd10      	pop	{r4, pc}
 8005222:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005226:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800522a:	e7f7      	b.n	800521c <memmove+0x24>

0800522c <_sbrk_r>:
 800522c:	b538      	push	{r3, r4, r5, lr}
 800522e:	2300      	movs	r3, #0
 8005230:	4d05      	ldr	r5, [pc, #20]	@ (8005248 <_sbrk_r+0x1c>)
 8005232:	4604      	mov	r4, r0
 8005234:	4608      	mov	r0, r1
 8005236:	602b      	str	r3, [r5, #0]
 8005238:	f7fb ff88 	bl	800114c <_sbrk>
 800523c:	1c43      	adds	r3, r0, #1
 800523e:	d102      	bne.n	8005246 <_sbrk_r+0x1a>
 8005240:	682b      	ldr	r3, [r5, #0]
 8005242:	b103      	cbz	r3, 8005246 <_sbrk_r+0x1a>
 8005244:	6023      	str	r3, [r4, #0]
 8005246:	bd38      	pop	{r3, r4, r5, pc}
 8005248:	20001410 	.word	0x20001410

0800524c <memchr>:
 800524c:	4603      	mov	r3, r0
 800524e:	b510      	push	{r4, lr}
 8005250:	b2c9      	uxtb	r1, r1
 8005252:	4402      	add	r2, r0
 8005254:	4293      	cmp	r3, r2
 8005256:	4618      	mov	r0, r3
 8005258:	d101      	bne.n	800525e <memchr+0x12>
 800525a:	2000      	movs	r0, #0
 800525c:	e003      	b.n	8005266 <memchr+0x1a>
 800525e:	7804      	ldrb	r4, [r0, #0]
 8005260:	3301      	adds	r3, #1
 8005262:	428c      	cmp	r4, r1
 8005264:	d1f6      	bne.n	8005254 <memchr+0x8>
 8005266:	bd10      	pop	{r4, pc}

08005268 <memcpy>:
 8005268:	440a      	add	r2, r1
 800526a:	4291      	cmp	r1, r2
 800526c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005270:	d100      	bne.n	8005274 <memcpy+0xc>
 8005272:	4770      	bx	lr
 8005274:	b510      	push	{r4, lr}
 8005276:	f811 4b01 	ldrb.w	r4, [r1], #1
 800527a:	4291      	cmp	r1, r2
 800527c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005280:	d1f9      	bne.n	8005276 <memcpy+0xe>
 8005282:	bd10      	pop	{r4, pc}

08005284 <_realloc_r>:
 8005284:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005288:	4680      	mov	r8, r0
 800528a:	4615      	mov	r5, r2
 800528c:	460c      	mov	r4, r1
 800528e:	b921      	cbnz	r1, 800529a <_realloc_r+0x16>
 8005290:	4611      	mov	r1, r2
 8005292:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005296:	f7ff bc39 	b.w	8004b0c <_malloc_r>
 800529a:	b92a      	cbnz	r2, 80052a8 <_realloc_r+0x24>
 800529c:	f7ff fbcc 	bl	8004a38 <_free_r>
 80052a0:	2400      	movs	r4, #0
 80052a2:	4620      	mov	r0, r4
 80052a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052a8:	f000 f81a 	bl	80052e0 <_malloc_usable_size_r>
 80052ac:	4285      	cmp	r5, r0
 80052ae:	4606      	mov	r6, r0
 80052b0:	d802      	bhi.n	80052b8 <_realloc_r+0x34>
 80052b2:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80052b6:	d8f4      	bhi.n	80052a2 <_realloc_r+0x1e>
 80052b8:	4629      	mov	r1, r5
 80052ba:	4640      	mov	r0, r8
 80052bc:	f7ff fc26 	bl	8004b0c <_malloc_r>
 80052c0:	4607      	mov	r7, r0
 80052c2:	2800      	cmp	r0, #0
 80052c4:	d0ec      	beq.n	80052a0 <_realloc_r+0x1c>
 80052c6:	42b5      	cmp	r5, r6
 80052c8:	462a      	mov	r2, r5
 80052ca:	4621      	mov	r1, r4
 80052cc:	bf28      	it	cs
 80052ce:	4632      	movcs	r2, r6
 80052d0:	f7ff ffca 	bl	8005268 <memcpy>
 80052d4:	4621      	mov	r1, r4
 80052d6:	4640      	mov	r0, r8
 80052d8:	f7ff fbae 	bl	8004a38 <_free_r>
 80052dc:	463c      	mov	r4, r7
 80052de:	e7e0      	b.n	80052a2 <_realloc_r+0x1e>

080052e0 <_malloc_usable_size_r>:
 80052e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80052e4:	1f18      	subs	r0, r3, #4
 80052e6:	2b00      	cmp	r3, #0
 80052e8:	bfbc      	itt	lt
 80052ea:	580b      	ldrlt	r3, [r1, r0]
 80052ec:	18c0      	addlt	r0, r0, r3
 80052ee:	4770      	bx	lr

080052f0 <_init>:
 80052f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052f2:	bf00      	nop
 80052f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80052f6:	bc08      	pop	{r3}
 80052f8:	469e      	mov	lr, r3
 80052fa:	4770      	bx	lr

080052fc <_fini>:
 80052fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052fe:	bf00      	nop
 8005300:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005302:	bc08      	pop	{r3}
 8005304:	469e      	mov	lr, r3
 8005306:	4770      	bx	lr
