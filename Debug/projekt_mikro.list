
projekt_mikro.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000042c4  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000204  080043d0  080043d0  000053d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080045d4  080045d4  0000605c  2**0
                  CONTENTS
  4 .ARM          00000008  080045d4  080045d4  000055d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080045dc  080045dc  0000605c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080045dc  080045dc  000055dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080045e0  080045e0  000055e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080045e4  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000007a4  2000005c  08004640  0000605c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000800  08004640  00006800  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000605c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c913  00000000  00000000  00006085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000218b  00000000  00000000  00012998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000c98  00000000  00000000  00014b28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000009ea  00000000  00000000  000157c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000180fd  00000000  00000000  000161aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000f36c  00000000  00000000  0002e2a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008aaed  00000000  00000000  0003d613  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c8100  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003988  00000000  00000000  000c8144  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  000cbacc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000005c 	.word	0x2000005c
 8000128:	00000000 	.word	0x00000000
 800012c:	080043b8 	.word	0x080043b8

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000060 	.word	0x20000060
 8000148:	080043b8 	.word	0x080043b8

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <MX_GPIO_Init>:
 800015c:	b580      	push	{r7, lr}
 800015e:	b088      	sub	sp, #32
 8000160:	af00      	add	r7, sp, #0
 8000162:	f107 0310 	add.w	r3, r7, #16
 8000166:	2200      	movs	r2, #0
 8000168:	601a      	str	r2, [r3, #0]
 800016a:	605a      	str	r2, [r3, #4]
 800016c:	609a      	str	r2, [r3, #8]
 800016e:	60da      	str	r2, [r3, #12]
 8000170:	4b2d      	ldr	r3, [pc, #180]	@ (8000228 <MX_GPIO_Init+0xcc>)
 8000172:	699b      	ldr	r3, [r3, #24]
 8000174:	4a2c      	ldr	r2, [pc, #176]	@ (8000228 <MX_GPIO_Init+0xcc>)
 8000176:	f043 0310 	orr.w	r3, r3, #16
 800017a:	6193      	str	r3, [r2, #24]
 800017c:	4b2a      	ldr	r3, [pc, #168]	@ (8000228 <MX_GPIO_Init+0xcc>)
 800017e:	699b      	ldr	r3, [r3, #24]
 8000180:	f003 0310 	and.w	r3, r3, #16
 8000184:	60fb      	str	r3, [r7, #12]
 8000186:	68fb      	ldr	r3, [r7, #12]
 8000188:	4b27      	ldr	r3, [pc, #156]	@ (8000228 <MX_GPIO_Init+0xcc>)
 800018a:	699b      	ldr	r3, [r3, #24]
 800018c:	4a26      	ldr	r2, [pc, #152]	@ (8000228 <MX_GPIO_Init+0xcc>)
 800018e:	f043 0320 	orr.w	r3, r3, #32
 8000192:	6193      	str	r3, [r2, #24]
 8000194:	4b24      	ldr	r3, [pc, #144]	@ (8000228 <MX_GPIO_Init+0xcc>)
 8000196:	699b      	ldr	r3, [r3, #24]
 8000198:	f003 0320 	and.w	r3, r3, #32
 800019c:	60bb      	str	r3, [r7, #8]
 800019e:	68bb      	ldr	r3, [r7, #8]
 80001a0:	4b21      	ldr	r3, [pc, #132]	@ (8000228 <MX_GPIO_Init+0xcc>)
 80001a2:	699b      	ldr	r3, [r3, #24]
 80001a4:	4a20      	ldr	r2, [pc, #128]	@ (8000228 <MX_GPIO_Init+0xcc>)
 80001a6:	f043 0304 	orr.w	r3, r3, #4
 80001aa:	6193      	str	r3, [r2, #24]
 80001ac:	4b1e      	ldr	r3, [pc, #120]	@ (8000228 <MX_GPIO_Init+0xcc>)
 80001ae:	699b      	ldr	r3, [r3, #24]
 80001b0:	f003 0304 	and.w	r3, r3, #4
 80001b4:	607b      	str	r3, [r7, #4]
 80001b6:	687b      	ldr	r3, [r7, #4]
 80001b8:	4b1b      	ldr	r3, [pc, #108]	@ (8000228 <MX_GPIO_Init+0xcc>)
 80001ba:	699b      	ldr	r3, [r3, #24]
 80001bc:	4a1a      	ldr	r2, [pc, #104]	@ (8000228 <MX_GPIO_Init+0xcc>)
 80001be:	f043 0308 	orr.w	r3, r3, #8
 80001c2:	6193      	str	r3, [r2, #24]
 80001c4:	4b18      	ldr	r3, [pc, #96]	@ (8000228 <MX_GPIO_Init+0xcc>)
 80001c6:	699b      	ldr	r3, [r3, #24]
 80001c8:	f003 0308 	and.w	r3, r3, #8
 80001cc:	603b      	str	r3, [r7, #0]
 80001ce:	683b      	ldr	r3, [r7, #0]
 80001d0:	2200      	movs	r2, #0
 80001d2:	2120      	movs	r1, #32
 80001d4:	4815      	ldr	r0, [pc, #84]	@ (800022c <MX_GPIO_Init+0xd0>)
 80001d6:	f001 fb2b 	bl	8001830 <HAL_GPIO_WritePin>
 80001da:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80001de:	613b      	str	r3, [r7, #16]
 80001e0:	4b13      	ldr	r3, [pc, #76]	@ (8000230 <MX_GPIO_Init+0xd4>)
 80001e2:	617b      	str	r3, [r7, #20]
 80001e4:	2300      	movs	r3, #0
 80001e6:	61bb      	str	r3, [r7, #24]
 80001e8:	f107 0310 	add.w	r3, r7, #16
 80001ec:	4619      	mov	r1, r3
 80001ee:	4811      	ldr	r0, [pc, #68]	@ (8000234 <MX_GPIO_Init+0xd8>)
 80001f0:	f001 f99a 	bl	8001528 <HAL_GPIO_Init>
 80001f4:	2320      	movs	r3, #32
 80001f6:	613b      	str	r3, [r7, #16]
 80001f8:	2301      	movs	r3, #1
 80001fa:	617b      	str	r3, [r7, #20]
 80001fc:	2300      	movs	r3, #0
 80001fe:	61bb      	str	r3, [r7, #24]
 8000200:	2302      	movs	r3, #2
 8000202:	61fb      	str	r3, [r7, #28]
 8000204:	f107 0310 	add.w	r3, r7, #16
 8000208:	4619      	mov	r1, r3
 800020a:	4808      	ldr	r0, [pc, #32]	@ (800022c <MX_GPIO_Init+0xd0>)
 800020c:	f001 f98c 	bl	8001528 <HAL_GPIO_Init>
 8000210:	2200      	movs	r2, #0
 8000212:	2100      	movs	r1, #0
 8000214:	2028      	movs	r0, #40	@ 0x28
 8000216:	f001 f89e 	bl	8001356 <HAL_NVIC_SetPriority>
 800021a:	2028      	movs	r0, #40	@ 0x28
 800021c:	f001 f8b7 	bl	800138e <HAL_NVIC_EnableIRQ>
 8000220:	bf00      	nop
 8000222:	3720      	adds	r7, #32
 8000224:	46bd      	mov	sp, r7
 8000226:	bd80      	pop	{r7, pc}
 8000228:	40021000 	.word	0x40021000
 800022c:	40010800 	.word	0x40010800
 8000230:	10110000 	.word	0x10110000
 8000234:	40011000 	.word	0x40011000

08000238 <calculate_crc_byte>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

/* === CRC === */
uint16_t calculate_crc_byte(uint16_t crc, uint8_t data) {
 8000238:	b480      	push	{r7}
 800023a:	b085      	sub	sp, #20
 800023c:	af00      	add	r7, sp, #0
 800023e:	4603      	mov	r3, r0
 8000240:	460a      	mov	r2, r1
 8000242:	80fb      	strh	r3, [r7, #6]
 8000244:	4613      	mov	r3, r2
 8000246:	717b      	strb	r3, [r7, #5]
	crc ^= (data << 8);
 8000248:	797b      	ldrb	r3, [r7, #5]
 800024a:	021b      	lsls	r3, r3, #8
 800024c:	b21a      	sxth	r2, r3
 800024e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000252:	4053      	eors	r3, r2
 8000254:	b21b      	sxth	r3, r3
 8000256:	80fb      	strh	r3, [r7, #6]
	for (uint8_t i = 0; i < 8; i++) {
 8000258:	2300      	movs	r3, #0
 800025a:	73fb      	strb	r3, [r7, #15]
 800025c:	e013      	b.n	8000286 <calculate_crc_byte+0x4e>
		if (crc & 0x8000) crc = (crc << 1) ^ 0x1021;
 800025e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000262:	2b00      	cmp	r3, #0
 8000264:	da09      	bge.n	800027a <calculate_crc_byte+0x42>
 8000266:	88fb      	ldrh	r3, [r7, #6]
 8000268:	005b      	lsls	r3, r3, #1
 800026a:	b21b      	sxth	r3, r3
 800026c:	f483 5381 	eor.w	r3, r3, #4128	@ 0x1020
 8000270:	f083 0301 	eor.w	r3, r3, #1
 8000274:	b21b      	sxth	r3, r3
 8000276:	80fb      	strh	r3, [r7, #6]
 8000278:	e002      	b.n	8000280 <calculate_crc_byte+0x48>
		else crc <<= 1;
 800027a:	88fb      	ldrh	r3, [r7, #6]
 800027c:	005b      	lsls	r3, r3, #1
 800027e:	80fb      	strh	r3, [r7, #6]
	for (uint8_t i = 0; i < 8; i++) {
 8000280:	7bfb      	ldrb	r3, [r7, #15]
 8000282:	3301      	adds	r3, #1
 8000284:	73fb      	strb	r3, [r7, #15]
 8000286:	7bfb      	ldrb	r3, [r7, #15]
 8000288:	2b07      	cmp	r3, #7
 800028a:	d9e8      	bls.n	800025e <calculate_crc_byte+0x26>
	}
	return crc;
 800028c:	88fb      	ldrh	r3, [r7, #6]
}
 800028e:	4618      	mov	r0, r3
 8000290:	3714      	adds	r7, #20
 8000292:	46bd      	mov	sp, r7
 8000294:	bc80      	pop	{r7}
 8000296:	4770      	bx	lr

08000298 <USART_fsend>:
	} else {
		return 1;
	}
}

void USART_fsend(char* format, ...) {
 8000298:	b40f      	push	{r0, r1, r2, r3}
 800029a:	b580      	push	{r7, lr}
 800029c:	b0c4      	sub	sp, #272	@ 0x110
 800029e:	af00      	add	r7, sp, #0
	char tmp[256];
	va_list arglist;
	va_start(arglist, format);
 80002a0:	f507 728e 	add.w	r2, r7, #284	@ 0x11c
 80002a4:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80002a8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80002ac:	601a      	str	r2, [r3, #0]
	vsprintf(tmp, format, arglist);
 80002ae:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80002b2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80002b6:	f107 000c 	add.w	r0, r7, #12
 80002ba:	681a      	ldr	r2, [r3, #0]
 80002bc:	f8d7 1118 	ldr.w	r1, [r7, #280]	@ 0x118
 80002c0:	f003 fbce 	bl	8003a60 <vsiprintf>
	va_end(arglist);
	volatile int idx = USART_TX_EMPTY;
 80002c4:	4b44      	ldr	r3, [pc, #272]	@ (80003d8 <USART_fsend+0x140>)
 80002c6:	881b      	ldrh	r3, [r3, #0]
 80002c8:	b29b      	uxth	r3, r3
 80002ca:	461a      	mov	r2, r3
 80002cc:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80002d0:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80002d4:	601a      	str	r2, [r3, #0]
	for (int i = 0; i < strlen(tmp); i++) {
 80002d6:	2300      	movs	r3, #0
 80002d8:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 80002dc:	e025      	b.n	800032a <USART_fsend+0x92>
		USART_BUF_TX[idx] = tmp[i];
 80002de:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80002e2:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 80002ec:	f5a2 7182 	sub.w	r1, r2, #260	@ 0x104
 80002f0:	f8d7 210c 	ldr.w	r2, [r7, #268]	@ 0x10c
 80002f4:	440a      	add	r2, r1
 80002f6:	7811      	ldrb	r1, [r2, #0]
 80002f8:	4a38      	ldr	r2, [pc, #224]	@ (80003dc <USART_fsend+0x144>)
 80002fa:	54d1      	strb	r1, [r2, r3]
		idx = (idx + 1) % USART_TXBUF_SIZE;
 80002fc:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000300:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	3301      	adds	r3, #1
 8000308:	425a      	negs	r2, r3
 800030a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800030e:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8000312:	bf58      	it	pl
 8000314:	4253      	negpl	r3, r2
 8000316:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 800031a:	f5a2 7286 	sub.w	r2, r2, #268	@ 0x10c
 800031e:	6013      	str	r3, [r2, #0]
	for (int i = 0; i < strlen(tmp); i++) {
 8000320:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8000324:	3301      	adds	r3, #1
 8000326:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 800032a:	f107 030c 	add.w	r3, r7, #12
 800032e:	4618      	mov	r0, r3
 8000330:	f7ff ff0c 	bl	800014c <strlen>
 8000334:	4602      	mov	r2, r0
 8000336:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 800033a:	429a      	cmp	r2, r3
 800033c:	d8cf      	bhi.n	80002de <USART_fsend+0x46>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800033e:	b672      	cpsid	i
}
 8000340:	bf00      	nop
	}

	__disable_irq();
	if (USART_TX_EMPTY == USART_TX_BUSY && __HAL_UART_GET_FLAG(&huart2, UART_FLAG_TXE) == SET) {
 8000342:	4b25      	ldr	r3, [pc, #148]	@ (80003d8 <USART_fsend+0x140>)
 8000344:	881b      	ldrh	r3, [r3, #0]
 8000346:	b29a      	uxth	r2, r3
 8000348:	4b25      	ldr	r3, [pc, #148]	@ (80003e0 <USART_fsend+0x148>)
 800034a:	881b      	ldrh	r3, [r3, #0]
 800034c:	b29b      	uxth	r3, r3
 800034e:	429a      	cmp	r2, r3
 8000350:	d130      	bne.n	80003b4 <USART_fsend+0x11c>
 8000352:	4b24      	ldr	r3, [pc, #144]	@ (80003e4 <USART_fsend+0x14c>)
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800035c:	2b80      	cmp	r3, #128	@ 0x80
 800035e:	d129      	bne.n	80003b4 <USART_fsend+0x11c>
		USART_TX_EMPTY = idx;
 8000360:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000364:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	b29a      	uxth	r2, r3
 800036c:	4b1a      	ldr	r3, [pc, #104]	@ (80003d8 <USART_fsend+0x140>)
 800036e:	801a      	strh	r2, [r3, #0]
		uint8_t tmp = USART_BUF_TX[USART_TX_BUSY];
 8000370:	4b1b      	ldr	r3, [pc, #108]	@ (80003e0 <USART_fsend+0x148>)
 8000372:	881b      	ldrh	r3, [r3, #0]
 8000374:	b29b      	uxth	r3, r3
 8000376:	461a      	mov	r2, r3
 8000378:	4b18      	ldr	r3, [pc, #96]	@ (80003dc <USART_fsend+0x144>)
 800037a:	5c9a      	ldrb	r2, [r3, r2]
 800037c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8000380:	f2a3 130d 	subw	r3, r3, #269	@ 0x10d
 8000384:	701a      	strb	r2, [r3, #0]
		USART_TX_BUSY++;
 8000386:	4b16      	ldr	r3, [pc, #88]	@ (80003e0 <USART_fsend+0x148>)
 8000388:	881b      	ldrh	r3, [r3, #0]
 800038a:	b29b      	uxth	r3, r3
 800038c:	3301      	adds	r3, #1
 800038e:	b29a      	uxth	r2, r3
 8000390:	4b13      	ldr	r3, [pc, #76]	@ (80003e0 <USART_fsend+0x148>)
 8000392:	801a      	strh	r2, [r3, #0]
		if (USART_TX_BUSY >= USART_TXBUF_SIZE) USART_TX_BUSY = 0;
 8000394:	4b12      	ldr	r3, [pc, #72]	@ (80003e0 <USART_fsend+0x148>)
 8000396:	881b      	ldrh	r3, [r3, #0]
 8000398:	b29b      	uxth	r3, r3
 800039a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800039e:	d302      	bcc.n	80003a6 <USART_fsend+0x10e>
 80003a0:	4b0f      	ldr	r3, [pc, #60]	@ (80003e0 <USART_fsend+0x148>)
 80003a2:	2200      	movs	r2, #0
 80003a4:	801a      	strh	r2, [r3, #0]
		HAL_UART_Transmit_IT(&huart2, &tmp, 1);
 80003a6:	1cfb      	adds	r3, r7, #3
 80003a8:	2201      	movs	r2, #1
 80003aa:	4619      	mov	r1, r3
 80003ac:	480d      	ldr	r0, [pc, #52]	@ (80003e4 <USART_fsend+0x14c>)
 80003ae:	f002 fd57 	bl	8002e60 <HAL_UART_Transmit_IT>
	if (USART_TX_EMPTY == USART_TX_BUSY && __HAL_UART_GET_FLAG(&huart2, UART_FLAG_TXE) == SET) {
 80003b2:	e007      	b.n	80003c4 <USART_fsend+0x12c>
	}
	else USART_TX_EMPTY = idx;
 80003b4:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80003b8:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	b29a      	uxth	r2, r3
 80003c0:	4b05      	ldr	r3, [pc, #20]	@ (80003d8 <USART_fsend+0x140>)
 80003c2:	801a      	strh	r2, [r3, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 80003c4:	b662      	cpsie	i
}
 80003c6:	bf00      	nop
	__enable_irq();
}
 80003c8:	bf00      	nop
 80003ca:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 80003ce:	46bd      	mov	sp, r7
 80003d0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003d4:	b004      	add	sp, #16
 80003d6:	4770      	bx	lr
 80003d8:	200004fc 	.word	0x200004fc
 80003dc:	200000fc 	.word	0x200000fc
 80003e0:	200004fe 	.word	0x200004fe
 80003e4:	2000066c 	.word	0x2000066c

080003e8 <HAL_UART_RxCpltCallback>:

/* === USART CALLBACK RECEIVE === */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 80003e8:	b580      	push	{r7, lr}
 80003ea:	b082      	sub	sp, #8
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	6078      	str	r0, [r7, #4]
	if (huart == &huart2) {
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a10      	ldr	r2, [pc, #64]	@ (8000434 <HAL_UART_RxCpltCallback+0x4c>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d119      	bne.n	800042c <HAL_UART_RxCpltCallback+0x44>
		USART_RX_EMPTY++;
 80003f8:	4b0f      	ldr	r3, [pc, #60]	@ (8000438 <HAL_UART_RxCpltCallback+0x50>)
 80003fa:	881b      	ldrh	r3, [r3, #0]
 80003fc:	b29b      	uxth	r3, r3
 80003fe:	3301      	adds	r3, #1
 8000400:	b29a      	uxth	r2, r3
 8000402:	4b0d      	ldr	r3, [pc, #52]	@ (8000438 <HAL_UART_RxCpltCallback+0x50>)
 8000404:	801a      	strh	r2, [r3, #0]
		if (USART_RX_EMPTY >= USART_RXBUF_SIZE) USART_RX_EMPTY = 0;
 8000406:	4b0c      	ldr	r3, [pc, #48]	@ (8000438 <HAL_UART_RxCpltCallback+0x50>)
 8000408:	881b      	ldrh	r3, [r3, #0]
 800040a:	b29b      	uxth	r3, r3
 800040c:	2b7f      	cmp	r3, #127	@ 0x7f
 800040e:	d902      	bls.n	8000416 <HAL_UART_RxCpltCallback+0x2e>
 8000410:	4b09      	ldr	r3, [pc, #36]	@ (8000438 <HAL_UART_RxCpltCallback+0x50>)
 8000412:	2200      	movs	r2, #0
 8000414:	801a      	strh	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart2, &USART_BUF_RX[USART_RX_EMPTY], 1);
 8000416:	4b08      	ldr	r3, [pc, #32]	@ (8000438 <HAL_UART_RxCpltCallback+0x50>)
 8000418:	881b      	ldrh	r3, [r3, #0]
 800041a:	b29b      	uxth	r3, r3
 800041c:	461a      	mov	r2, r3
 800041e:	4b07      	ldr	r3, [pc, #28]	@ (800043c <HAL_UART_RxCpltCallback+0x54>)
 8000420:	4413      	add	r3, r2
 8000422:	2201      	movs	r2, #1
 8000424:	4619      	mov	r1, r3
 8000426:	4803      	ldr	r0, [pc, #12]	@ (8000434 <HAL_UART_RxCpltCallback+0x4c>)
 8000428:	f002 fd4f 	bl	8002eca <HAL_UART_Receive_IT>
	}
}
 800042c:	bf00      	nop
 800042e:	3708      	adds	r7, #8
 8000430:	46bd      	mov	sp, r7
 8000432:	bd80      	pop	{r7, pc}
 8000434:	2000066c 	.word	0x2000066c
 8000438:	200000f8 	.word	0x200000f8
 800043c:	20000078 	.word	0x20000078

08000440 <HAL_UART_TxCpltCallback>:

/* === USART TRANSMIT CALLBACK === */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 8000440:	b580      	push	{r7, lr}
 8000442:	b084      	sub	sp, #16
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
    if (huart == &huart2) {
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a16      	ldr	r2, [pc, #88]	@ (80004a4 <HAL_UART_TxCpltCallback+0x64>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d125      	bne.n	800049c <HAL_UART_TxCpltCallback+0x5c>
        // sprawdzenie, czy są dane do wysłania
        if (USART_TX_EMPTY != USART_TX_BUSY) {
 8000450:	4b15      	ldr	r3, [pc, #84]	@ (80004a8 <HAL_UART_TxCpltCallback+0x68>)
 8000452:	881b      	ldrh	r3, [r3, #0]
 8000454:	b29a      	uxth	r2, r3
 8000456:	4b15      	ldr	r3, [pc, #84]	@ (80004ac <HAL_UART_TxCpltCallback+0x6c>)
 8000458:	881b      	ldrh	r3, [r3, #0]
 800045a:	b29b      	uxth	r3, r3
 800045c:	429a      	cmp	r2, r3
 800045e:	d01d      	beq.n	800049c <HAL_UART_TxCpltCallback+0x5c>
        	uint8_t tmp = USART_BUF_TX[USART_TX_BUSY];
 8000460:	4b12      	ldr	r3, [pc, #72]	@ (80004ac <HAL_UART_TxCpltCallback+0x6c>)
 8000462:	881b      	ldrh	r3, [r3, #0]
 8000464:	b29b      	uxth	r3, r3
 8000466:	461a      	mov	r2, r3
 8000468:	4b11      	ldr	r3, [pc, #68]	@ (80004b0 <HAL_UART_TxCpltCallback+0x70>)
 800046a:	5c9b      	ldrb	r3, [r3, r2]
 800046c:	73fb      	strb	r3, [r7, #15]
        	USART_TX_BUSY++;
 800046e:	4b0f      	ldr	r3, [pc, #60]	@ (80004ac <HAL_UART_TxCpltCallback+0x6c>)
 8000470:	881b      	ldrh	r3, [r3, #0]
 8000472:	b29b      	uxth	r3, r3
 8000474:	3301      	adds	r3, #1
 8000476:	b29a      	uxth	r2, r3
 8000478:	4b0c      	ldr	r3, [pc, #48]	@ (80004ac <HAL_UART_TxCpltCallback+0x6c>)
 800047a:	801a      	strh	r2, [r3, #0]
        	if (USART_TX_BUSY >= USART_TXBUF_SIZE) USART_TX_BUSY = 0;
 800047c:	4b0b      	ldr	r3, [pc, #44]	@ (80004ac <HAL_UART_TxCpltCallback+0x6c>)
 800047e:	881b      	ldrh	r3, [r3, #0]
 8000480:	b29b      	uxth	r3, r3
 8000482:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8000486:	d302      	bcc.n	800048e <HAL_UART_TxCpltCallback+0x4e>
 8000488:	4b08      	ldr	r3, [pc, #32]	@ (80004ac <HAL_UART_TxCpltCallback+0x6c>)
 800048a:	2200      	movs	r2, #0
 800048c:	801a      	strh	r2, [r3, #0]
            HAL_UART_Transmit_IT(&huart2, &tmp, 1); // bajt wysłany, można wysłać następny
 800048e:	f107 030f 	add.w	r3, r7, #15
 8000492:	2201      	movs	r2, #1
 8000494:	4619      	mov	r1, r3
 8000496:	4803      	ldr	r0, [pc, #12]	@ (80004a4 <HAL_UART_TxCpltCallback+0x64>)
 8000498:	f002 fce2 	bl	8002e60 <HAL_UART_Transmit_IT>
        }
    }
}
 800049c:	bf00      	nop
 800049e:	3710      	adds	r7, #16
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bd80      	pop	{r7, pc}
 80004a4:	2000066c 	.word	0x2000066c
 80004a8:	200004fc 	.word	0x200004fc
 80004ac:	200004fe 	.word	0x200004fe
 80004b0:	200000fc 	.word	0x200000fc

080004b4 <USART_getchar>:

int16_t USART_getchar(){
 80004b4:	b480      	push	{r7}
 80004b6:	b083      	sub	sp, #12
 80004b8:	af00      	add	r7, sp, #0
	int16_t tmp;
	if (USART_RX_EMPTY != USART_RX_BUSY) {
 80004ba:	4b14      	ldr	r3, [pc, #80]	@ (800050c <USART_getchar+0x58>)
 80004bc:	881b      	ldrh	r3, [r3, #0]
 80004be:	b29a      	uxth	r2, r3
 80004c0:	4b13      	ldr	r3, [pc, #76]	@ (8000510 <USART_getchar+0x5c>)
 80004c2:	881b      	ldrh	r3, [r3, #0]
 80004c4:	b29b      	uxth	r3, r3
 80004c6:	429a      	cmp	r2, r3
 80004c8:	d018      	beq.n	80004fc <USART_getchar+0x48>
		 tmp = USART_BUF_RX[USART_RX_BUSY];
 80004ca:	4b11      	ldr	r3, [pc, #68]	@ (8000510 <USART_getchar+0x5c>)
 80004cc:	881b      	ldrh	r3, [r3, #0]
 80004ce:	b29b      	uxth	r3, r3
 80004d0:	461a      	mov	r2, r3
 80004d2:	4b10      	ldr	r3, [pc, #64]	@ (8000514 <USART_getchar+0x60>)
 80004d4:	5c9b      	ldrb	r3, [r3, r2]
 80004d6:	80fb      	strh	r3, [r7, #6]
		 USART_RX_BUSY++;
 80004d8:	4b0d      	ldr	r3, [pc, #52]	@ (8000510 <USART_getchar+0x5c>)
 80004da:	881b      	ldrh	r3, [r3, #0]
 80004dc:	b29b      	uxth	r3, r3
 80004de:	3301      	adds	r3, #1
 80004e0:	b29a      	uxth	r2, r3
 80004e2:	4b0b      	ldr	r3, [pc, #44]	@ (8000510 <USART_getchar+0x5c>)
 80004e4:	801a      	strh	r2, [r3, #0]
		 if (USART_RX_BUSY >= USART_RXBUF_SIZE) USART_RX_BUSY = 0;
 80004e6:	4b0a      	ldr	r3, [pc, #40]	@ (8000510 <USART_getchar+0x5c>)
 80004e8:	881b      	ldrh	r3, [r3, #0]
 80004ea:	b29b      	uxth	r3, r3
 80004ec:	2b7f      	cmp	r3, #127	@ 0x7f
 80004ee:	d902      	bls.n	80004f6 <USART_getchar+0x42>
 80004f0:	4b07      	ldr	r3, [pc, #28]	@ (8000510 <USART_getchar+0x5c>)
 80004f2:	2200      	movs	r2, #0
 80004f4:	801a      	strh	r2, [r3, #0]
		 return tmp;
 80004f6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80004fa:	e001      	b.n	8000500 <USART_getchar+0x4c>
	} else return -1;
 80004fc:	f04f 33ff 	mov.w	r3, #4294967295

}
 8000500:	4618      	mov	r0, r3
 8000502:	370c      	adds	r7, #12
 8000504:	46bd      	mov	sp, r7
 8000506:	bc80      	pop	{r7}
 8000508:	4770      	bx	lr
 800050a:	bf00      	nop
 800050c:	200000f8 	.word	0x200000f8
 8000510:	200000fa 	.word	0x200000fa
 8000514:	20000078 	.word	0x20000078

08000518 <validate_and_atoi>:

uint16_t validate_and_atoi(const char *str, size_t length) {
 8000518:	b480      	push	{r7}
 800051a:	b085      	sub	sp, #20
 800051c:	af00      	add	r7, sp, #0
 800051e:	6078      	str	r0, [r7, #4]
 8000520:	6039      	str	r1, [r7, #0]
    uint16_t result = 0;
 8000522:	2300      	movs	r3, #0
 8000524:	81fb      	strh	r3, [r7, #14]

    // sprawdzanie czy kazdy znak to cyfra
    for (size_t i = 0; i < length; i++) {
 8000526:	2300      	movs	r3, #0
 8000528:	60bb      	str	r3, [r7, #8]
 800052a:	e01e      	b.n	800056a <validate_and_atoi+0x52>
        if (str[i] < '0' || str[i] > '9') {
 800052c:	687a      	ldr	r2, [r7, #4]
 800052e:	68bb      	ldr	r3, [r7, #8]
 8000530:	4413      	add	r3, r2
 8000532:	781b      	ldrb	r3, [r3, #0]
 8000534:	2b2f      	cmp	r3, #47	@ 0x2f
 8000536:	d905      	bls.n	8000544 <validate_and_atoi+0x2c>
 8000538:	687a      	ldr	r2, [r7, #4]
 800053a:	68bb      	ldr	r3, [r7, #8]
 800053c:	4413      	add	r3, r2
 800053e:	781b      	ldrb	r3, [r3, #0]
 8000540:	2b39      	cmp	r3, #57	@ 0x39
 8000542:	d901      	bls.n	8000548 <validate_and_atoi+0x30>
            //USART_fsend("invalid char '%c' during atoi\n", str[i]);
            return 0; // kod bledu
 8000544:	2300      	movs	r3, #0
 8000546:	e015      	b.n	8000574 <validate_and_atoi+0x5c>
        }
        result = (result * 10) + (str[i] - '0');
 8000548:	89fb      	ldrh	r3, [r7, #14]
 800054a:	461a      	mov	r2, r3
 800054c:	0092      	lsls	r2, r2, #2
 800054e:	4413      	add	r3, r2
 8000550:	005b      	lsls	r3, r3, #1
 8000552:	b29b      	uxth	r3, r3
 8000554:	6879      	ldr	r1, [r7, #4]
 8000556:	68ba      	ldr	r2, [r7, #8]
 8000558:	440a      	add	r2, r1
 800055a:	7812      	ldrb	r2, [r2, #0]
 800055c:	4413      	add	r3, r2
 800055e:	b29b      	uxth	r3, r3
 8000560:	3b30      	subs	r3, #48	@ 0x30
 8000562:	81fb      	strh	r3, [r7, #14]
    for (size_t i = 0; i < length; i++) {
 8000564:	68bb      	ldr	r3, [r7, #8]
 8000566:	3301      	adds	r3, #1
 8000568:	60bb      	str	r3, [r7, #8]
 800056a:	68ba      	ldr	r2, [r7, #8]
 800056c:	683b      	ldr	r3, [r7, #0]
 800056e:	429a      	cmp	r2, r3
 8000570:	d3dc      	bcc.n	800052c <validate_and_atoi+0x14>
    }

    return result;
 8000572:	89fb      	ldrh	r3, [r7, #14]
}
 8000574:	4618      	mov	r0, r3
 8000576:	3714      	adds	r7, #20
 8000578:	46bd      	mov	sp, r7
 800057a:	bc80      	pop	{r7}
 800057c:	4770      	bx	lr
	...

08000580 <process_frame>:

void process_frame() {
 8000580:	b580      	push	{r7, lr}
 8000582:	b086      	sub	sp, #24
 8000584:	af00      	add	r7, sp, #0


	if (frame.length_int < 5 || frame.length_int > 256) {
 8000586:	4b4c      	ldr	r3, [pc, #304]	@ (80006b8 <process_frame+0x138>)
 8000588:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 800058c:	2b04      	cmp	r3, #4
 800058e:	f240 8089 	bls.w	80006a4 <process_frame+0x124>
 8000592:	4b49      	ldr	r3, [pc, #292]	@ (80006b8 <process_frame+0x138>)
 8000594:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000598:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800059c:	f200 8082 	bhi.w	80006a4 <process_frame+0x124>
		//err01();
		return;
	}

	uint8_t length = frame.length_int - frame.masked_counter; // dla odkodowanej ramki dlugosc musi byc pomniejszona o ilosc zamaskowanych znakow
 80005a0:	4b45      	ldr	r3, [pc, #276]	@ (80006b8 <process_frame+0x138>)
 80005a2:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 80005a6:	b2da      	uxtb	r2, r3
 80005a8:	4b43      	ldr	r3, [pc, #268]	@ (80006b8 <process_frame+0x138>)
 80005aa:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 80005ae:	b2db      	uxtb	r3, r3
 80005b0:	1ad3      	subs	r3, r2, r3
 80005b2:	75fb      	strb	r3, [r7, #23]


	if (strncmp((char *)frame.data, "READ", 4) == 0) {
 80005b4:	2204      	movs	r2, #4
 80005b6:	4941      	ldr	r1, [pc, #260]	@ (80006bc <process_frame+0x13c>)
 80005b8:	4841      	ldr	r0, [pc, #260]	@ (80006c0 <process_frame+0x140>)
 80005ba:	f003 fa63 	bl	8003a84 <strncmp>
 80005be:	4603      	mov	r3, r0
 80005c0:	2b00      	cmp	r3, #0
 80005c2:	d127      	bne.n	8000614 <process_frame+0x94>
		if (length != 7) {
 80005c4:	7dfb      	ldrb	r3, [r7, #23]
 80005c6:	2b07      	cmp	r3, #7
 80005c8:	d003      	beq.n	80005d2 <process_frame+0x52>
			USART_fsend("wrong parameter");
 80005ca:	483e      	ldr	r0, [pc, #248]	@ (80006c4 <process_frame+0x144>)
 80005cc:	f7ff fe64 	bl	8000298 <USART_fsend>
			//err03();
			return;
 80005d0:	e06f      	b.n	80006b2 <process_frame+0x132>
		}

		char parameter_str[4] = {frame.data[4], frame.data[5], frame.data[6]};
 80005d2:	2300      	movs	r3, #0
 80005d4:	60fb      	str	r3, [r7, #12]
 80005d6:	4b38      	ldr	r3, [pc, #224]	@ (80006b8 <process_frame+0x138>)
 80005d8:	7b9b      	ldrb	r3, [r3, #14]
 80005da:	733b      	strb	r3, [r7, #12]
 80005dc:	4b36      	ldr	r3, [pc, #216]	@ (80006b8 <process_frame+0x138>)
 80005de:	7bdb      	ldrb	r3, [r3, #15]
 80005e0:	737b      	strb	r3, [r7, #13]
 80005e2:	4b35      	ldr	r3, [pc, #212]	@ (80006b8 <process_frame+0x138>)
 80005e4:	7c1b      	ldrb	r3, [r3, #16]
 80005e6:	73bb      	strb	r3, [r7, #14]
		uint16_t parameter = validate_and_atoi(parameter_str, 3);
 80005e8:	f107 030c 	add.w	r3, r7, #12
 80005ec:	2103      	movs	r1, #3
 80005ee:	4618      	mov	r0, r3
 80005f0:	f7ff ff92 	bl	8000518 <validate_and_atoi>
 80005f4:	4603      	mov	r3, r0
 80005f6:	827b      	strh	r3, [r7, #18]

		if (parameter < 1 || parameter > 750) {
 80005f8:	8a7b      	ldrh	r3, [r7, #18]
 80005fa:	2b00      	cmp	r3, #0
 80005fc:	d054      	beq.n	80006a8 <process_frame+0x128>
 80005fe:	8a7b      	ldrh	r3, [r7, #18]
 8000600:	f240 22ee 	movw	r2, #750	@ 0x2ee
 8000604:	4293      	cmp	r3, r2
 8000606:	d84f      	bhi.n	80006a8 <process_frame+0x128>
//			printf ("not enough data in buffer");
//			err04();
//			return;
//		}
		else {
			USART_fsend("%d\n", parameter);
 8000608:	8a7b      	ldrh	r3, [r7, #18]
 800060a:	4619      	mov	r1, r3
 800060c:	482e      	ldr	r0, [pc, #184]	@ (80006c8 <process_frame+0x148>)
 800060e:	f7ff fe43 	bl	8000298 <USART_fsend>
			//read(length);
			return;
 8000612:	e04e      	b.n	80006b2 <process_frame+0x132>
		}
	}
	else if (strncmp((char *)frame.data, "COUNT_DATA", 10) == 0) {
 8000614:	220a      	movs	r2, #10
 8000616:	492d      	ldr	r1, [pc, #180]	@ (80006cc <process_frame+0x14c>)
 8000618:	4829      	ldr	r0, [pc, #164]	@ (80006c0 <process_frame+0x140>)
 800061a:	f003 fa33 	bl	8003a84 <strncmp>
 800061e:	4603      	mov	r3, r0
 8000620:	2b00      	cmp	r3, #0
 8000622:	d104      	bne.n	800062e <process_frame+0xae>
		if (frame.length_int != 10) {
 8000624:	4b24      	ldr	r3, [pc, #144]	@ (80006b8 <process_frame+0x138>)
 8000626:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 800062a:	2b0a      	cmp	r3, #10
 800062c:	e041      	b.n	80006b2 <process_frame+0x132>
//			count_data();
//			return;
//		}
	}

	else if (strncmp((char *)frame.data, "SET_INTERVAL", 12) == 0) {
 800062e:	220c      	movs	r2, #12
 8000630:	4927      	ldr	r1, [pc, #156]	@ (80006d0 <process_frame+0x150>)
 8000632:	4823      	ldr	r0, [pc, #140]	@ (80006c0 <process_frame+0x140>)
 8000634:	f003 fa26 	bl	8003a84 <strncmp>
 8000638:	4603      	mov	r3, r0
 800063a:	2b00      	cmp	r3, #0
 800063c:	d125      	bne.n	800068a <process_frame+0x10a>
		if (frame.length_int != 17) {
 800063e:	4b1e      	ldr	r3, [pc, #120]	@ (80006b8 <process_frame+0x138>)
 8000640:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000644:	2b11      	cmp	r3, #17
 8000646:	d131      	bne.n	80006ac <process_frame+0x12c>
			//USART_fsend("wrong command");
			//err02();
			return;
		}

		char parameter_str[6] = { frame.data[12], frame.data[13], frame.data[14], frame.data[15], frame.data[16], '\0' };
 8000648:	4b1b      	ldr	r3, [pc, #108]	@ (80006b8 <process_frame+0x138>)
 800064a:	7d9b      	ldrb	r3, [r3, #22]
 800064c:	713b      	strb	r3, [r7, #4]
 800064e:	4b1a      	ldr	r3, [pc, #104]	@ (80006b8 <process_frame+0x138>)
 8000650:	7ddb      	ldrb	r3, [r3, #23]
 8000652:	717b      	strb	r3, [r7, #5]
 8000654:	4b18      	ldr	r3, [pc, #96]	@ (80006b8 <process_frame+0x138>)
 8000656:	7e1b      	ldrb	r3, [r3, #24]
 8000658:	71bb      	strb	r3, [r7, #6]
 800065a:	4b17      	ldr	r3, [pc, #92]	@ (80006b8 <process_frame+0x138>)
 800065c:	7e5b      	ldrb	r3, [r3, #25]
 800065e:	71fb      	strb	r3, [r7, #7]
 8000660:	4b15      	ldr	r3, [pc, #84]	@ (80006b8 <process_frame+0x138>)
 8000662:	7e9b      	ldrb	r3, [r3, #26]
 8000664:	723b      	strb	r3, [r7, #8]
 8000666:	2300      	movs	r3, #0
 8000668:	727b      	strb	r3, [r7, #9]
		uint16_t parameter = validate_and_atoi(parameter_str, 5);
 800066a:	1d3b      	adds	r3, r7, #4
 800066c:	2105      	movs	r1, #5
 800066e:	4618      	mov	r0, r3
 8000670:	f7ff ff52 	bl	8000518 <validate_and_atoi>
 8000674:	4603      	mov	r3, r0
 8000676:	82bb      	strh	r3, [r7, #20]

		if (parameter < 2000 || parameter > 20000) {
 8000678:	8abb      	ldrh	r3, [r7, #20]
 800067a:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 800067e:	d317      	bcc.n	80006b0 <process_frame+0x130>
 8000680:	8abb      	ldrh	r3, [r7, #20]
 8000682:	f644 6220 	movw	r2, #20000	@ 0x4e20
 8000686:	4293      	cmp	r3, r2
 8000688:	e013      	b.n	80006b2 <process_frame+0x132>
//			set_interval(parameter);
//			return;
//		}
	}

	else if (strncmp((char *)frame.data, "GET_INTERVAL", 12) == 0) {
 800068a:	220c      	movs	r2, #12
 800068c:	4911      	ldr	r1, [pc, #68]	@ (80006d4 <process_frame+0x154>)
 800068e:	480c      	ldr	r0, [pc, #48]	@ (80006c0 <process_frame+0x140>)
 8000690:	f003 f9f8 	bl	8003a84 <strncmp>
 8000694:	4603      	mov	r3, r0
 8000696:	2b00      	cmp	r3, #0
 8000698:	d10b      	bne.n	80006b2 <process_frame+0x132>
		if (frame.length_int != 12) {
 800069a:	4b07      	ldr	r3, [pc, #28]	@ (80006b8 <process_frame+0x138>)
 800069c:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 80006a0:	2b0c      	cmp	r3, #12
 80006a2:	e006      	b.n	80006b2 <process_frame+0x132>
		return;
 80006a4:	bf00      	nop
 80006a6:	e004      	b.n	80006b2 <process_frame+0x132>
			return;
 80006a8:	bf00      	nop
 80006aa:	e002      	b.n	80006b2 <process_frame+0x132>
			return;
 80006ac:	bf00      	nop
 80006ae:	e000      	b.n	80006b2 <process_frame+0x132>
			return;
 80006b0:	bf00      	nop
//		else {
//			get_interval();
//			return
//		}
	}
}
 80006b2:	3718      	adds	r7, #24
 80006b4:	46bd      	mov	sp, r7
 80006b6:	bd80      	pop	{r7, pc}
 80006b8:	20000500 	.word	0x20000500
 80006bc:	080043d0 	.word	0x080043d0
 80006c0:	2000050a 	.word	0x2000050a
 80006c4:	080043d8 	.word	0x080043d8
 80006c8:	080043e8 	.word	0x080043e8
 80006cc:	080043ec 	.word	0x080043ec
 80006d0:	080043f8 	.word	0x080043f8
 80006d4:	08004408 	.word	0x08004408

080006d8 <reset_frame>:

void reset_frame() {
 80006d8:	b580      	push	{r7, lr}
 80006da:	af00      	add	r7, sp, #0
	memset(&frame, 0, sizeof(Frame));
 80006dc:	f44f 7290 	mov.w	r2, #288	@ 0x120
 80006e0:	2100      	movs	r1, #0
 80006e2:	4807      	ldr	r0, [pc, #28]	@ (8000700 <reset_frame+0x28>)
 80006e4:	f003 f9c6 	bl	8003a74 <memset>
	frame.state = FIND_START;
 80006e8:	4b05      	ldr	r3, [pc, #20]	@ (8000700 <reset_frame+0x28>)
 80006ea:	2200      	movs	r2, #0
 80006ec:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
	frame.crc_calculated = 0xFFFF;
 80006f0:	4b03      	ldr	r3, [pc, #12]	@ (8000700 <reset_frame+0x28>)
 80006f2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80006f6:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110
}
 80006fa:	bf00      	nop
 80006fc:	bd80      	pop	{r7, pc}
 80006fe:	bf00      	nop
 8000700:	20000500 	.word	0x20000500

08000704 <get_frame>:

void get_frame(uint8_t ch) {
 8000704:	b580      	push	{r7, lr}
 8000706:	b082      	sub	sp, #8
 8000708:	af00      	add	r7, sp, #0
 800070a:	4603      	mov	r3, r0
 800070c:	71fb      	strb	r3, [r7, #7]

	if (ch == '\0') {
 800070e:	79fb      	ldrb	r3, [r7, #7]
 8000710:	2b00      	cmp	r3, #0
 8000712:	d104      	bne.n	800071e <get_frame+0x1a>
		frame.state = FIND_START;
 8000714:	4bb1      	ldr	r3, [pc, #708]	@ (80009dc <get_frame+0x2d8>)
 8000716:	2200      	movs	r2, #0
 8000718:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 800071c:	e21c      	b.n	8000b58 <get_frame+0x454>
	}

	switch (frame.state) {
 800071e:	4baf      	ldr	r3, [pc, #700]	@ (80009dc <get_frame+0x2d8>)
 8000720:	f893 311e 	ldrb.w	r3, [r3, #286]	@ 0x11e
 8000724:	2b07      	cmp	r3, #7
 8000726:	f200 8217 	bhi.w	8000b58 <get_frame+0x454>
 800072a:	a201      	add	r2, pc, #4	@ (adr r2, 8000730 <get_frame+0x2c>)
 800072c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000730:	08000751 	.word	0x08000751
 8000734:	08000767 	.word	0x08000767
 8000738:	080007d9 	.word	0x080007d9
 800073c:	0800084d 	.word	0x0800084d
 8000740:	080008b7 	.word	0x080008b7
 8000744:	08000aa5 	.word	0x08000aa5
 8000748:	08000b2f 	.word	0x08000b2f
 800074c:	08000981 	.word	0x08000981
	case FIND_START: {
		if (ch == FRAME_START) {
 8000750:	79fb      	ldrb	r3, [r7, #7]
 8000752:	2b3a      	cmp	r3, #58	@ 0x3a
 8000754:	f040 81fd 	bne.w	8000b52 <get_frame+0x44e>
			reset_frame();
 8000758:	f7ff ffbe 	bl	80006d8 <reset_frame>
			frame.state = FIND_SENDER;
 800075c:	4b9f      	ldr	r3, [pc, #636]	@ (80009dc <get_frame+0x2d8>)
 800075e:	2201      	movs	r2, #1
 8000760:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		}
		return;
 8000764:	e1f5      	b.n	8000b52 <get_frame+0x44e>
	}

	case FIND_SENDER: {
		if (ch >= 'A' && ch <= 'Z') {
 8000766:	79fb      	ldrb	r3, [r7, #7]
 8000768:	2b40      	cmp	r3, #64	@ 0x40
 800076a:	d930      	bls.n	80007ce <get_frame+0xca>
 800076c:	79fb      	ldrb	r3, [r7, #7]
 800076e:	2b5a      	cmp	r3, #90	@ 0x5a
 8000770:	d82d      	bhi.n	80007ce <get_frame+0xca>
			frame.sender[frame.sender_id] = ch;
 8000772:	4b9a      	ldr	r3, [pc, #616]	@ (80009dc <get_frame+0x2d8>)
 8000774:	f893 3112 	ldrb.w	r3, [r3, #274]	@ 0x112
 8000778:	4619      	mov	r1, r3
 800077a:	4a98      	ldr	r2, [pc, #608]	@ (80009dc <get_frame+0x2d8>)
 800077c:	79fb      	ldrb	r3, [r7, #7]
 800077e:	5453      	strb	r3, [r2, r1]
			if (frame.sender_id == 1) {
 8000780:	4b96      	ldr	r3, [pc, #600]	@ (80009dc <get_frame+0x2d8>)
 8000782:	f893 3112 	ldrb.w	r3, [r3, #274]	@ 0x112
 8000786:	2b01      	cmp	r3, #1
 8000788:	d117      	bne.n	80007ba <get_frame+0xb6>
				frame.sender[2] = '\0';
 800078a:	4b94      	ldr	r3, [pc, #592]	@ (80009dc <get_frame+0x2d8>)
 800078c:	2200      	movs	r2, #0
 800078e:	709a      	strb	r2, [r3, #2]
				if (strncmp((char *)frame.sender, SENDER, 2) == 0){
 8000790:	2202      	movs	r2, #2
 8000792:	4993      	ldr	r1, [pc, #588]	@ (80009e0 <get_frame+0x2dc>)
 8000794:	4891      	ldr	r0, [pc, #580]	@ (80009dc <get_frame+0x2d8>)
 8000796:	f003 f975 	bl	8003a84 <strncmp>
 800079a:	4603      	mov	r3, r0
 800079c:	2b00      	cmp	r3, #0
 800079e:	d107      	bne.n	80007b0 <get_frame+0xac>
					USART_fsend("sender ok");
 80007a0:	4890      	ldr	r0, [pc, #576]	@ (80009e4 <get_frame+0x2e0>)
 80007a2:	f7ff fd79 	bl	8000298 <USART_fsend>
					frame.state = FIND_RECEIVER;
 80007a6:	4b8d      	ldr	r3, [pc, #564]	@ (80009dc <get_frame+0x2d8>)
 80007a8:	2202      	movs	r2, #2
 80007aa:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 80007ae:	e1d3      	b.n	8000b58 <get_frame+0x454>
				}
				else {
					frame.state = FIND_START;
 80007b0:	4b8a      	ldr	r3, [pc, #552]	@ (80009dc <get_frame+0x2d8>)
 80007b2:	2200      	movs	r2, #0
 80007b4:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 80007b8:	e1ce      	b.n	8000b58 <get_frame+0x454>
				}
			}
			else frame.sender_id++;
 80007ba:	4b88      	ldr	r3, [pc, #544]	@ (80009dc <get_frame+0x2d8>)
 80007bc:	f893 3112 	ldrb.w	r3, [r3, #274]	@ 0x112
 80007c0:	3301      	adds	r3, #1
 80007c2:	b2da      	uxtb	r2, r3
 80007c4:	4b85      	ldr	r3, [pc, #532]	@ (80009dc <get_frame+0x2d8>)
 80007c6:	f883 2112 	strb.w	r2, [r3, #274]	@ 0x112
			if (frame.sender_id == 1) {
 80007ca:	bf00      	nop
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = FIND_START;
		return;
 80007cc:	e1c4      	b.n	8000b58 <get_frame+0x454>
		else frame.state = FIND_START;
 80007ce:	4b83      	ldr	r3, [pc, #524]	@ (80009dc <get_frame+0x2d8>)
 80007d0:	2200      	movs	r2, #0
 80007d2:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 80007d6:	e1bf      	b.n	8000b58 <get_frame+0x454>
	}

	case FIND_RECEIVER: {
		if (ch >= 'A' && ch <= 'Z') {
 80007d8:	79fb      	ldrb	r3, [r7, #7]
 80007da:	2b40      	cmp	r3, #64	@ 0x40
 80007dc:	d931      	bls.n	8000842 <get_frame+0x13e>
 80007de:	79fb      	ldrb	r3, [r7, #7]
 80007e0:	2b5a      	cmp	r3, #90	@ 0x5a
 80007e2:	d82e      	bhi.n	8000842 <get_frame+0x13e>
			frame.receiver[frame.receiver_id] = ch;
 80007e4:	4b7d      	ldr	r3, [pc, #500]	@ (80009dc <get_frame+0x2d8>)
 80007e6:	f893 3113 	ldrb.w	r3, [r3, #275]	@ 0x113
 80007ea:	461a      	mov	r2, r3
 80007ec:	4b7b      	ldr	r3, [pc, #492]	@ (80009dc <get_frame+0x2d8>)
 80007ee:	4413      	add	r3, r2
 80007f0:	79fa      	ldrb	r2, [r7, #7]
 80007f2:	70da      	strb	r2, [r3, #3]
			if (frame.receiver_id == 1) {
 80007f4:	4b79      	ldr	r3, [pc, #484]	@ (80009dc <get_frame+0x2d8>)
 80007f6:	f893 3113 	ldrb.w	r3, [r3, #275]	@ 0x113
 80007fa:	2b01      	cmp	r3, #1
 80007fc:	d117      	bne.n	800082e <get_frame+0x12a>
				frame.receiver[2] = '\0';
 80007fe:	4b77      	ldr	r3, [pc, #476]	@ (80009dc <get_frame+0x2d8>)
 8000800:	2200      	movs	r2, #0
 8000802:	715a      	strb	r2, [r3, #5]
				if (strncmp((char *)frame.receiver, RECEIVER, 2) == 0) {
 8000804:	2202      	movs	r2, #2
 8000806:	4978      	ldr	r1, [pc, #480]	@ (80009e8 <get_frame+0x2e4>)
 8000808:	4878      	ldr	r0, [pc, #480]	@ (80009ec <get_frame+0x2e8>)
 800080a:	f003 f93b 	bl	8003a84 <strncmp>
 800080e:	4603      	mov	r3, r0
 8000810:	2b00      	cmp	r3, #0
 8000812:	d107      	bne.n	8000824 <get_frame+0x120>
					USART_fsend("receiver ok");
 8000814:	4876      	ldr	r0, [pc, #472]	@ (80009f0 <get_frame+0x2ec>)
 8000816:	f7ff fd3f 	bl	8000298 <USART_fsend>
					frame.state = FIND_LENGTH;
 800081a:	4b70      	ldr	r3, [pc, #448]	@ (80009dc <get_frame+0x2d8>)
 800081c:	2203      	movs	r2, #3
 800081e:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000822:	e199      	b.n	8000b58 <get_frame+0x454>
				}
				else {
					frame.state = FIND_START;
 8000824:	4b6d      	ldr	r3, [pc, #436]	@ (80009dc <get_frame+0x2d8>)
 8000826:	2200      	movs	r2, #0
 8000828:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 800082c:	e194      	b.n	8000b58 <get_frame+0x454>
				}
			}
			else frame.receiver_id++;
 800082e:	4b6b      	ldr	r3, [pc, #428]	@ (80009dc <get_frame+0x2d8>)
 8000830:	f893 3113 	ldrb.w	r3, [r3, #275]	@ 0x113
 8000834:	3301      	adds	r3, #1
 8000836:	b2da      	uxtb	r2, r3
 8000838:	4b68      	ldr	r3, [pc, #416]	@ (80009dc <get_frame+0x2d8>)
 800083a:	f883 2113 	strb.w	r2, [r3, #275]	@ 0x113
			if (frame.receiver_id == 1) {
 800083e:	bf00      	nop
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = FRAME_START;
		return;
 8000840:	e18a      	b.n	8000b58 <get_frame+0x454>
		else frame.state = FRAME_START;
 8000842:	4b66      	ldr	r3, [pc, #408]	@ (80009dc <get_frame+0x2d8>)
 8000844:	223a      	movs	r2, #58	@ 0x3a
 8000846:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 800084a:	e185      	b.n	8000b58 <get_frame+0x454>
	}

	case FIND_LENGTH: {
		if (ch >= '0' && ch <= '9') {
 800084c:	79fb      	ldrb	r3, [r7, #7]
 800084e:	2b2f      	cmp	r3, #47	@ 0x2f
 8000850:	d92c      	bls.n	80008ac <get_frame+0x1a8>
 8000852:	79fb      	ldrb	r3, [r7, #7]
 8000854:	2b39      	cmp	r3, #57	@ 0x39
 8000856:	d829      	bhi.n	80008ac <get_frame+0x1a8>
			frame.length[frame.length_id] = ch;
 8000858:	4b60      	ldr	r3, [pc, #384]	@ (80009dc <get_frame+0x2d8>)
 800085a:	f893 3114 	ldrb.w	r3, [r3, #276]	@ 0x114
 800085e:	461a      	mov	r2, r3
 8000860:	4b5e      	ldr	r3, [pc, #376]	@ (80009dc <get_frame+0x2d8>)
 8000862:	4413      	add	r3, r2
 8000864:	79fa      	ldrb	r2, [r7, #7]
 8000866:	719a      	strb	r2, [r3, #6]
			if (frame.length_id == 2) {
 8000868:	4b5c      	ldr	r3, [pc, #368]	@ (80009dc <get_frame+0x2d8>)
 800086a:	f893 3114 	ldrb.w	r3, [r3, #276]	@ 0x114
 800086e:	2b02      	cmp	r3, #2
 8000870:	d112      	bne.n	8000898 <get_frame+0x194>
				frame.length[3] = '\0';
 8000872:	4b5a      	ldr	r3, [pc, #360]	@ (80009dc <get_frame+0x2d8>)
 8000874:	2200      	movs	r2, #0
 8000876:	725a      	strb	r2, [r3, #9]
				frame.length_int = atoi((char *)frame.length);
 8000878:	485e      	ldr	r0, [pc, #376]	@ (80009f4 <get_frame+0x2f0>)
 800087a:	f003 f853 	bl	8003924 <atoi>
 800087e:	4603      	mov	r3, r0
 8000880:	b29a      	uxth	r2, r3
 8000882:	4b56      	ldr	r3, [pc, #344]	@ (80009dc <get_frame+0x2d8>)
 8000884:	f8a3 211a 	strh.w	r2, [r3, #282]	@ 0x11a
				USART_fsend("length ok");
 8000888:	485b      	ldr	r0, [pc, #364]	@ (80009f8 <get_frame+0x2f4>)
 800088a:	f7ff fd05 	bl	8000298 <USART_fsend>
				frame.state = FIND_DATA;
 800088e:	4b53      	ldr	r3, [pc, #332]	@ (80009dc <get_frame+0x2d8>)
 8000890:	2204      	movs	r2, #4
 8000892:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
				return;
 8000896:	e15f      	b.n	8000b58 <get_frame+0x454>
			}
			else frame.length_id++;
 8000898:	4b50      	ldr	r3, [pc, #320]	@ (80009dc <get_frame+0x2d8>)
 800089a:	f893 3114 	ldrb.w	r3, [r3, #276]	@ 0x114
 800089e:	3301      	adds	r3, #1
 80008a0:	b2da      	uxtb	r2, r3
 80008a2:	4b4e      	ldr	r3, [pc, #312]	@ (80009dc <get_frame+0x2d8>)
 80008a4:	f883 2114 	strb.w	r2, [r3, #276]	@ 0x114
			if (frame.length_id == 2) {
 80008a8:	bf00      	nop
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = FRAME_START;
		return;
 80008aa:	e155      	b.n	8000b58 <get_frame+0x454>
		else frame.state = FRAME_START;
 80008ac:	4b4b      	ldr	r3, [pc, #300]	@ (80009dc <get_frame+0x2d8>)
 80008ae:	223a      	movs	r2, #58	@ 0x3a
 80008b0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 80008b4:	e150      	b.n	8000b58 <get_frame+0x454>
	}

	case FIND_DATA: {

		if (frame.data_id + frame.masked_counter < frame.length_int) {
 80008b6:	4b49      	ldr	r3, [pc, #292]	@ (80009dc <get_frame+0x2d8>)
 80008b8:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 80008bc:	461a      	mov	r2, r3
 80008be:	4b47      	ldr	r3, [pc, #284]	@ (80009dc <get_frame+0x2d8>)
 80008c0:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 80008c4:	4413      	add	r3, r2
 80008c6:	4a45      	ldr	r2, [pc, #276]	@ (80009dc <get_frame+0x2d8>)
 80008c8:	f8b2 211a 	ldrh.w	r2, [r2, #282]	@ 0x11a
 80008cc:	4293      	cmp	r3, r2
 80008ce:	da52      	bge.n	8000976 <get_frame+0x272>

			if (ch == FRAME_START || ch == FRAME_END) {
 80008d0:	79fb      	ldrb	r3, [r7, #7]
 80008d2:	2b3a      	cmp	r3, #58	@ 0x3a
 80008d4:	d002      	beq.n	80008dc <get_frame+0x1d8>
 80008d6:	79fb      	ldrb	r3, [r7, #7]
 80008d8:	2b3b      	cmp	r3, #59	@ 0x3b
 80008da:	d104      	bne.n	80008e6 <get_frame+0x1e2>
				frame.state = FIND_START;
 80008dc:	4b3f      	ldr	r3, [pc, #252]	@ (80009dc <get_frame+0x2d8>)
 80008de:	2200      	movs	r2, #0
 80008e0:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
				return;
 80008e4:	e138      	b.n	8000b58 <get_frame+0x454>
			}

			frame.crc_calculated = calculate_crc_byte(frame.crc_calculated, ch);
 80008e6:	4b3d      	ldr	r3, [pc, #244]	@ (80009dc <get_frame+0x2d8>)
 80008e8:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 80008ec:	79fa      	ldrb	r2, [r7, #7]
 80008ee:	4611      	mov	r1, r2
 80008f0:	4618      	mov	r0, r3
 80008f2:	f7ff fca1 	bl	8000238 <calculate_crc_byte>
 80008f6:	4603      	mov	r3, r0
 80008f8:	461a      	mov	r2, r3
 80008fa:	4b38      	ldr	r3, [pc, #224]	@ (80009dc <get_frame+0x2d8>)
 80008fc:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110

			if (ch == MASK) {
 8000900:	79fb      	ldrb	r3, [r7, #7]
 8000902:	2b2f      	cmp	r3, #47	@ 0x2f
 8000904:	d10c      	bne.n	8000920 <get_frame+0x21c>
				frame.masked_counter++;
 8000906:	4b35      	ldr	r3, [pc, #212]	@ (80009dc <get_frame+0x2d8>)
 8000908:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 800090c:	3301      	adds	r3, #1
 800090e:	b29a      	uxth	r2, r3
 8000910:	4b32      	ldr	r3, [pc, #200]	@ (80009dc <get_frame+0x2d8>)
 8000912:	f8a3 211c 	strh.w	r2, [r3, #284]	@ 0x11c
				frame.state = FIND_MASKED;
 8000916:	4b31      	ldr	r3, [pc, #196]	@ (80009dc <get_frame+0x2d8>)
 8000918:	2207      	movs	r2, #7
 800091a:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
				return;
 800091e:	e11b      	b.n	8000b58 <get_frame+0x454>
			}

			frame.data[frame.data_id++] = ch;
 8000920:	4b2e      	ldr	r3, [pc, #184]	@ (80009dc <get_frame+0x2d8>)
 8000922:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000926:	1c5a      	adds	r2, r3, #1
 8000928:	b291      	uxth	r1, r2
 800092a:	4a2c      	ldr	r2, [pc, #176]	@ (80009dc <get_frame+0x2d8>)
 800092c:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 8000930:	461a      	mov	r2, r3
 8000932:	4b2a      	ldr	r3, [pc, #168]	@ (80009dc <get_frame+0x2d8>)
 8000934:	4413      	add	r3, r2
 8000936:	79fa      	ldrb	r2, [r7, #7]
 8000938:	729a      	strb	r2, [r3, #10]

			if (frame.data_id + frame.masked_counter == frame.length_int) {
 800093a:	4b28      	ldr	r3, [pc, #160]	@ (80009dc <get_frame+0x2d8>)
 800093c:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000940:	461a      	mov	r2, r3
 8000942:	4b26      	ldr	r3, [pc, #152]	@ (80009dc <get_frame+0x2d8>)
 8000944:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 8000948:	4413      	add	r3, r2
 800094a:	4a24      	ldr	r2, [pc, #144]	@ (80009dc <get_frame+0x2d8>)
 800094c:	f8b2 211a 	ldrh.w	r2, [r2, #282]	@ 0x11a
 8000950:	4293      	cmp	r3, r2
 8000952:	f040 8100 	bne.w	8000b56 <get_frame+0x452>
				frame.data[frame.data_id] = '\0';
 8000956:	4b21      	ldr	r3, [pc, #132]	@ (80009dc <get_frame+0x2d8>)
 8000958:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 800095c:	461a      	mov	r2, r3
 800095e:	4b1f      	ldr	r3, [pc, #124]	@ (80009dc <get_frame+0x2d8>)
 8000960:	4413      	add	r3, r2
 8000962:	2200      	movs	r2, #0
 8000964:	729a      	strb	r2, [r3, #10]
				USART_fsend("data ok");
 8000966:	4825      	ldr	r0, [pc, #148]	@ (80009fc <get_frame+0x2f8>)
 8000968:	f7ff fc96 	bl	8000298 <USART_fsend>
				frame.state = FIND_CRC;
 800096c:	4b1b      	ldr	r3, [pc, #108]	@ (80009dc <get_frame+0x2d8>)
 800096e:	2205      	movs	r2, #5
 8000970:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			}

			return;
 8000974:	e0ef      	b.n	8000b56 <get_frame+0x452>
		}


		else {
			frame.state = FIND_START;
 8000976:	4b19      	ldr	r3, [pc, #100]	@ (80009dc <get_frame+0x2d8>)
 8000978:	2200      	movs	r2, #0
 800097a:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			return;
 800097e:	e0eb      	b.n	8000b58 <get_frame+0x454>
		}
	}

	case FIND_MASKED: {

		if (frame.data_id + frame.masked_counter >= frame.length_int) {
 8000980:	4b16      	ldr	r3, [pc, #88]	@ (80009dc <get_frame+0x2d8>)
 8000982:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000986:	461a      	mov	r2, r3
 8000988:	4b14      	ldr	r3, [pc, #80]	@ (80009dc <get_frame+0x2d8>)
 800098a:	f8b3 311c 	ldrh.w	r3, [r3, #284]	@ 0x11c
 800098e:	4413      	add	r3, r2
 8000990:	4a12      	ldr	r2, [pc, #72]	@ (80009dc <get_frame+0x2d8>)
 8000992:	f8b2 211a 	ldrh.w	r2, [r2, #282]	@ 0x11a
 8000996:	4293      	cmp	r3, r2
 8000998:	db04      	blt.n	80009a4 <get_frame+0x2a0>
			frame.state = FIND_START;
 800099a:	4b10      	ldr	r3, [pc, #64]	@ (80009dc <get_frame+0x2d8>)
 800099c:	2200      	movs	r2, #0
 800099e:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			return;
 80009a2:	e0d9      	b.n	8000b58 <get_frame+0x454>
		}

		switch(ch) {
 80009a4:	79fb      	ldrb	r3, [r7, #7]
 80009a6:	2b2f      	cmp	r3, #47	@ 0x2f
 80009a8:	d03c      	beq.n	8000a24 <get_frame+0x320>
 80009aa:	2b2f      	cmp	r3, #47	@ 0x2f
 80009ac:	dc4c      	bgt.n	8000a48 <get_frame+0x344>
 80009ae:	2b2c      	cmp	r3, #44	@ 0x2c
 80009b0:	d026      	beq.n	8000a00 <get_frame+0x2fc>
 80009b2:	2b2e      	cmp	r3, #46	@ 0x2e
 80009b4:	d148      	bne.n	8000a48 <get_frame+0x344>
		case MASKED_START: {
			frame.data[frame.data_id++] = FRAME_START;
 80009b6:	4b09      	ldr	r3, [pc, #36]	@ (80009dc <get_frame+0x2d8>)
 80009b8:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 80009bc:	1c5a      	adds	r2, r3, #1
 80009be:	b291      	uxth	r1, r2
 80009c0:	4a06      	ldr	r2, [pc, #24]	@ (80009dc <get_frame+0x2d8>)
 80009c2:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 80009c6:	461a      	mov	r2, r3
 80009c8:	4b04      	ldr	r3, [pc, #16]	@ (80009dc <get_frame+0x2d8>)
 80009ca:	4413      	add	r3, r2
 80009cc:	223a      	movs	r2, #58	@ 0x3a
 80009ce:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_DATA;
 80009d0:	4b02      	ldr	r3, [pc, #8]	@ (80009dc <get_frame+0x2d8>)
 80009d2:	2204      	movs	r2, #4
 80009d4:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			break;
 80009d8:	e03b      	b.n	8000a52 <get_frame+0x34e>
 80009da:	bf00      	nop
 80009dc:	20000500 	.word	0x20000500
 80009e0:	08004418 	.word	0x08004418
 80009e4:	0800441c 	.word	0x0800441c
 80009e8:	08004428 	.word	0x08004428
 80009ec:	20000503 	.word	0x20000503
 80009f0:	0800442c 	.word	0x0800442c
 80009f4:	20000506 	.word	0x20000506
 80009f8:	08004438 	.word	0x08004438
 80009fc:	08004444 	.word	0x08004444
		}
		case MASKED_END: {
			frame.data[frame.data_id++] = FRAME_END;
 8000a00:	4b57      	ldr	r3, [pc, #348]	@ (8000b60 <get_frame+0x45c>)
 8000a02:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000a06:	1c5a      	adds	r2, r3, #1
 8000a08:	b291      	uxth	r1, r2
 8000a0a:	4a55      	ldr	r2, [pc, #340]	@ (8000b60 <get_frame+0x45c>)
 8000a0c:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 8000a10:	461a      	mov	r2, r3
 8000a12:	4b53      	ldr	r3, [pc, #332]	@ (8000b60 <get_frame+0x45c>)
 8000a14:	4413      	add	r3, r2
 8000a16:	223b      	movs	r2, #59	@ 0x3b
 8000a18:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_DATA;
 8000a1a:	4b51      	ldr	r3, [pc, #324]	@ (8000b60 <get_frame+0x45c>)
 8000a1c:	2204      	movs	r2, #4
 8000a1e:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			break;
 8000a22:	e016      	b.n	8000a52 <get_frame+0x34e>
		}
		case MASK: {
			frame.data[frame.data_id++] = MASK;
 8000a24:	4b4e      	ldr	r3, [pc, #312]	@ (8000b60 <get_frame+0x45c>)
 8000a26:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000a2a:	1c5a      	adds	r2, r3, #1
 8000a2c:	b291      	uxth	r1, r2
 8000a2e:	4a4c      	ldr	r2, [pc, #304]	@ (8000b60 <get_frame+0x45c>)
 8000a30:	f8a2 1116 	strh.w	r1, [r2, #278]	@ 0x116
 8000a34:	461a      	mov	r2, r3
 8000a36:	4b4a      	ldr	r3, [pc, #296]	@ (8000b60 <get_frame+0x45c>)
 8000a38:	4413      	add	r3, r2
 8000a3a:	222f      	movs	r2, #47	@ 0x2f
 8000a3c:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_DATA;
 8000a3e:	4b48      	ldr	r3, [pc, #288]	@ (8000b60 <get_frame+0x45c>)
 8000a40:	2204      	movs	r2, #4
 8000a42:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			break;
 8000a46:	e004      	b.n	8000a52 <get_frame+0x34e>
		}
		default: { // błąd, powrót do początku
			frame.state = FIND_START;
 8000a48:	4b45      	ldr	r3, [pc, #276]	@ (8000b60 <get_frame+0x45c>)
 8000a4a:	2200      	movs	r2, #0
 8000a4c:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
			return;
 8000a50:	e082      	b.n	8000b58 <get_frame+0x454>
		}
		}

		frame.crc_calculated = calculate_crc_byte(frame.crc_calculated, ch);
 8000a52:	4b43      	ldr	r3, [pc, #268]	@ (8000b60 <get_frame+0x45c>)
 8000a54:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000a58:	79fa      	ldrb	r2, [r7, #7]
 8000a5a:	4611      	mov	r1, r2
 8000a5c:	4618      	mov	r0, r3
 8000a5e:	f7ff fbeb 	bl	8000238 <calculate_crc_byte>
 8000a62:	4603      	mov	r3, r0
 8000a64:	461a      	mov	r2, r3
 8000a66:	4b3e      	ldr	r3, [pc, #248]	@ (8000b60 <get_frame+0x45c>)
 8000a68:	f8a3 2110 	strh.w	r2, [r3, #272]	@ 0x110

		if (frame.data_id < frame.length_int - 1) {
 8000a6c:	4b3c      	ldr	r3, [pc, #240]	@ (8000b60 <get_frame+0x45c>)
 8000a6e:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000a72:	461a      	mov	r2, r3
 8000a74:	4b3a      	ldr	r3, [pc, #232]	@ (8000b60 <get_frame+0x45c>)
 8000a76:	f8b3 311a 	ldrh.w	r3, [r3, #282]	@ 0x11a
 8000a7a:	3b01      	subs	r3, #1
 8000a7c:	429a      	cmp	r2, r3
 8000a7e:	da04      	bge.n	8000a8a <get_frame+0x386>
			frame.state = FIND_DATA;
 8000a80:	4b37      	ldr	r3, [pc, #220]	@ (8000b60 <get_frame+0x45c>)
 8000a82:	2204      	movs	r2, #4
 8000a84:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		} else {
			frame.data[frame.data_id] = '\0';
			frame.state = FIND_CRC;
		}

		return;
 8000a88:	e066      	b.n	8000b58 <get_frame+0x454>
			frame.data[frame.data_id] = '\0';
 8000a8a:	4b35      	ldr	r3, [pc, #212]	@ (8000b60 <get_frame+0x45c>)
 8000a8c:	f8b3 3116 	ldrh.w	r3, [r3, #278]	@ 0x116
 8000a90:	461a      	mov	r2, r3
 8000a92:	4b33      	ldr	r3, [pc, #204]	@ (8000b60 <get_frame+0x45c>)
 8000a94:	4413      	add	r3, r2
 8000a96:	2200      	movs	r2, #0
 8000a98:	729a      	strb	r2, [r3, #10]
			frame.state = FIND_CRC;
 8000a9a:	4b31      	ldr	r3, [pc, #196]	@ (8000b60 <get_frame+0x45c>)
 8000a9c:	2205      	movs	r2, #5
 8000a9e:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000aa2:	e059      	b.n	8000b58 <get_frame+0x454>
	}

	case FIND_CRC: {
		if ((ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'F')) {
 8000aa4:	79fb      	ldrb	r3, [r7, #7]
 8000aa6:	2b2f      	cmp	r3, #47	@ 0x2f
 8000aa8:	d902      	bls.n	8000ab0 <get_frame+0x3ac>
 8000aaa:	79fb      	ldrb	r3, [r7, #7]
 8000aac:	2b39      	cmp	r3, #57	@ 0x39
 8000aae:	d905      	bls.n	8000abc <get_frame+0x3b8>
 8000ab0:	79fb      	ldrb	r3, [r7, #7]
 8000ab2:	2b40      	cmp	r3, #64	@ 0x40
 8000ab4:	d935      	bls.n	8000b22 <get_frame+0x41e>
 8000ab6:	79fb      	ldrb	r3, [r7, #7]
 8000ab8:	2b46      	cmp	r3, #70	@ 0x46
 8000aba:	d832      	bhi.n	8000b22 <get_frame+0x41e>
			frame.crc_frame[frame.crc_id++] = ch;
 8000abc:	4b28      	ldr	r3, [pc, #160]	@ (8000b60 <get_frame+0x45c>)
 8000abe:	f893 3118 	ldrb.w	r3, [r3, #280]	@ 0x118
 8000ac2:	1c5a      	adds	r2, r3, #1
 8000ac4:	b2d1      	uxtb	r1, r2
 8000ac6:	4a26      	ldr	r2, [pc, #152]	@ (8000b60 <get_frame+0x45c>)
 8000ac8:	f882 1118 	strb.w	r1, [r2, #280]	@ 0x118
 8000acc:	461a      	mov	r2, r3
 8000ace:	4b24      	ldr	r3, [pc, #144]	@ (8000b60 <get_frame+0x45c>)
 8000ad0:	4413      	add	r3, r2
 8000ad2:	79fa      	ldrb	r2, [r7, #7]
 8000ad4:	f883 210b 	strb.w	r2, [r3, #267]	@ 0x10b
			if (frame.crc_id == 4) {
 8000ad8:	4b21      	ldr	r3, [pc, #132]	@ (8000b60 <get_frame+0x45c>)
 8000ada:	f893 3118 	ldrb.w	r3, [r3, #280]	@ 0x118
 8000ade:	2b04      	cmp	r3, #4
 8000ae0:	d124      	bne.n	8000b2c <get_frame+0x428>
				frame.crc_frame[4] = '\0';
 8000ae2:	4b1f      	ldr	r3, [pc, #124]	@ (8000b60 <get_frame+0x45c>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	f883 210f 	strb.w	r2, [r3, #271]	@ 0x10f
				if ((uint16_t)strtol((char *)frame.crc_frame, NULL, 16) == frame.crc_calculated) {
 8000aea:	2210      	movs	r2, #16
 8000aec:	2100      	movs	r1, #0
 8000aee:	481d      	ldr	r0, [pc, #116]	@ (8000b64 <get_frame+0x460>)
 8000af0:	f002 ff96 	bl	8003a20 <strtol>
 8000af4:	4603      	mov	r3, r0
 8000af6:	b29a      	uxth	r2, r3
 8000af8:	4b19      	ldr	r3, [pc, #100]	@ (8000b60 <get_frame+0x45c>)
 8000afa:	f8b3 3110 	ldrh.w	r3, [r3, #272]	@ 0x110
 8000afe:	429a      	cmp	r2, r3
 8000b00:	d107      	bne.n	8000b12 <get_frame+0x40e>
					USART_fsend("crc ok");
 8000b02:	4819      	ldr	r0, [pc, #100]	@ (8000b68 <get_frame+0x464>)
 8000b04:	f7ff fbc8 	bl	8000298 <USART_fsend>
					frame.state = FIND_END;
 8000b08:	4b15      	ldr	r3, [pc, #84]	@ (8000b60 <get_frame+0x45c>)
 8000b0a:	2206      	movs	r2, #6
 8000b0c:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000b10:	e022      	b.n	8000b58 <get_frame+0x454>
				}
				else {
					USART_fsend("crc blad");
 8000b12:	4816      	ldr	r0, [pc, #88]	@ (8000b6c <get_frame+0x468>)
 8000b14:	f7ff fbc0 	bl	8000298 <USART_fsend>
					frame.state = FIND_START;
 8000b18:	4b11      	ldr	r3, [pc, #68]	@ (8000b60 <get_frame+0x45c>)
 8000b1a:	2200      	movs	r2, #0
 8000b1c:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
					return;
 8000b20:	e01a      	b.n	8000b58 <get_frame+0x454>
				}
			}
		}
		//else if (ch == FRAME_START || ch == FRAME_END) frame.state = FIND_START;
		else frame.state = FIND_START;
 8000b22:	4b0f      	ldr	r3, [pc, #60]	@ (8000b60 <get_frame+0x45c>)
 8000b24:	2200      	movs	r2, #0
 8000b26:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000b2a:	e015      	b.n	8000b58 <get_frame+0x454>
 8000b2c:	e014      	b.n	8000b58 <get_frame+0x454>
	}

	case FIND_END: {
		if (ch == FRAME_END) {
 8000b2e:	79fb      	ldrb	r3, [r7, #7]
 8000b30:	2b3b      	cmp	r3, #59	@ 0x3b
 8000b32:	d109      	bne.n	8000b48 <get_frame+0x444>
			frame.complete = true;
 8000b34:	4b0a      	ldr	r3, [pc, #40]	@ (8000b60 <get_frame+0x45c>)
 8000b36:	2201      	movs	r2, #1
 8000b38:	f883 211f 	strb.w	r2, [r3, #287]	@ 0x11f
			USART_fsend("ramka ok");
 8000b3c:	480c      	ldr	r0, [pc, #48]	@ (8000b70 <get_frame+0x46c>)
 8000b3e:	f7ff fbab 	bl	8000298 <USART_fsend>
			process_frame();
 8000b42:	f7ff fd1d 	bl	8000580 <process_frame>
			return;
 8000b46:	e007      	b.n	8000b58 <get_frame+0x454>
		}
		//else if (ch == FRAME_START) frame.state = FIND_START;
		else frame.state = FIND_START;
 8000b48:	4b05      	ldr	r3, [pc, #20]	@ (8000b60 <get_frame+0x45c>)
 8000b4a:	2200      	movs	r2, #0
 8000b4c:	f883 211e 	strb.w	r2, [r3, #286]	@ 0x11e
		return;
 8000b50:	e002      	b.n	8000b58 <get_frame+0x454>
		return;
 8000b52:	bf00      	nop
 8000b54:	e000      	b.n	8000b58 <get_frame+0x454>
			return;
 8000b56:	bf00      	nop
	}
	}
}
 8000b58:	3708      	adds	r7, #8
 8000b5a:	46bd      	mov	sp, r7
 8000b5c:	bd80      	pop	{r7, pc}
 8000b5e:	bf00      	nop
 8000b60:	20000500 	.word	0x20000500
 8000b64:	2000060b 	.word	0x2000060b
 8000b68:	0800444c 	.word	0x0800444c
 8000b6c:	08004454 	.word	0x08004454
 8000b70:	08004460 	.word	0x08004460

08000b74 <handle_char>:

void handle_char() {
 8000b74:	b580      	push	{r7, lr}
 8000b76:	b082      	sub	sp, #8
 8000b78:	af00      	add	r7, sp, #0

//	is_handling = 1;

	int16_t ch;
	if ((ch = USART_getchar()) >= 0) {
 8000b7a:	f7ff fc9b 	bl	80004b4 <USART_getchar>
 8000b7e:	4603      	mov	r3, r0
 8000b80:	80fb      	strh	r3, [r7, #6]
 8000b82:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	db04      	blt.n	8000b94 <handle_char+0x20>
		//USART_fsend("  |%c|  ", ch);
		get_frame((uint8_t)ch);
 8000b8a:	88fb      	ldrh	r3, [r7, #6]
 8000b8c:	b2db      	uxtb	r3, r3
 8000b8e:	4618      	mov	r0, r3
 8000b90:	f7ff fdb8 	bl	8000704 <get_frame>
	}

//	is_handling = 0;
}
 8000b94:	bf00      	nop
 8000b96:	3708      	adds	r7, #8
 8000b98:	46bd      	mov	sp, r7
 8000b9a:	bd80      	pop	{r7, pc}

08000b9c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ba0:	f000 faa0 	bl	80010e4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ba4:	f000 f824 	bl	8000bf0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ba8:	f7ff fad8 	bl	800015c <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000bac:	f000 fa04 	bl	8000fb8 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 8000bb0:	f000 f922 	bl	8000df8 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_UART_Receive_IT(&huart2, &USART_BUF_RX[USART_RX_EMPTY], 1);
 8000bb4:	4b0a      	ldr	r3, [pc, #40]	@ (8000be0 <main+0x44>)
 8000bb6:	881b      	ldrh	r3, [r3, #0]
 8000bb8:	b29b      	uxth	r3, r3
 8000bba:	461a      	mov	r2, r3
 8000bbc:	4b09      	ldr	r3, [pc, #36]	@ (8000be4 <main+0x48>)
 8000bbe:	4413      	add	r3, r2
 8000bc0:	2201      	movs	r2, #1
 8000bc2:	4619      	mov	r1, r3
 8000bc4:	4808      	ldr	r0, [pc, #32]	@ (8000be8 <main+0x4c>)
 8000bc6:	f002 f980 	bl	8002eca <HAL_UART_Receive_IT>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  // jeśli bufor nie jest pusty
	  if (USART_RX_EMPTY != USART_RX_BUSY) {
 8000bca:	4b05      	ldr	r3, [pc, #20]	@ (8000be0 <main+0x44>)
 8000bcc:	881b      	ldrh	r3, [r3, #0]
 8000bce:	b29a      	uxth	r2, r3
 8000bd0:	4b06      	ldr	r3, [pc, #24]	@ (8000bec <main+0x50>)
 8000bd2:	881b      	ldrh	r3, [r3, #0]
 8000bd4:	b29b      	uxth	r3, r3
 8000bd6:	429a      	cmp	r2, r3
 8000bd8:	d0f7      	beq.n	8000bca <main+0x2e>
		  handle_char();
 8000bda:	f7ff ffcb 	bl	8000b74 <handle_char>
	  if (USART_RX_EMPTY != USART_RX_BUSY) {
 8000bde:	e7f4      	b.n	8000bca <main+0x2e>
 8000be0:	200000f8 	.word	0x200000f8
 8000be4:	20000078 	.word	0x20000078
 8000be8:	2000066c 	.word	0x2000066c
 8000bec:	200000fa 	.word	0x200000fa

08000bf0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b090      	sub	sp, #64	@ 0x40
 8000bf4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000bf6:	f107 0318 	add.w	r3, r7, #24
 8000bfa:	2228      	movs	r2, #40	@ 0x28
 8000bfc:	2100      	movs	r1, #0
 8000bfe:	4618      	mov	r0, r3
 8000c00:	f002 ff38 	bl	8003a74 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000c04:	1d3b      	adds	r3, r7, #4
 8000c06:	2200      	movs	r2, #0
 8000c08:	601a      	str	r2, [r3, #0]
 8000c0a:	605a      	str	r2, [r3, #4]
 8000c0c:	609a      	str	r2, [r3, #8]
 8000c0e:	60da      	str	r2, [r3, #12]
 8000c10:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000c12:	2302      	movs	r3, #2
 8000c14:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000c16:	2301      	movs	r3, #1
 8000c18:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000c1a:	2310      	movs	r3, #16
 8000c1c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000c1e:	2302      	movs	r3, #2
 8000c20:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000c22:	2300      	movs	r3, #0
 8000c24:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000c26:	f44f 1360 	mov.w	r3, #3670016	@ 0x380000
 8000c2a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c2c:	f107 0318 	add.w	r3, r7, #24
 8000c30:	4618      	mov	r0, r3
 8000c32:	f000 fe37 	bl	80018a4 <HAL_RCC_OscConfig>
 8000c36:	4603      	mov	r3, r0
 8000c38:	2b00      	cmp	r3, #0
 8000c3a:	d001      	beq.n	8000c40 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000c3c:	f000 f81a 	bl	8000c74 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c40:	230f      	movs	r3, #15
 8000c42:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000c44:	2302      	movs	r3, #2
 8000c46:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000c48:	2300      	movs	r3, #0
 8000c4a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000c4c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c50:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000c52:	2300      	movs	r3, #0
 8000c54:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000c56:	1d3b      	adds	r3, r7, #4
 8000c58:	2102      	movs	r1, #2
 8000c5a:	4618      	mov	r0, r3
 8000c5c:	f001 f8a4 	bl	8001da8 <HAL_RCC_ClockConfig>
 8000c60:	4603      	mov	r3, r0
 8000c62:	2b00      	cmp	r3, #0
 8000c64:	d001      	beq.n	8000c6a <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000c66:	f000 f805 	bl	8000c74 <Error_Handler>
  }
}
 8000c6a:	bf00      	nop
 8000c6c:	3740      	adds	r7, #64	@ 0x40
 8000c6e:	46bd      	mov	sp, r7
 8000c70:	bd80      	pop	{r7, pc}
	...

08000c74 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000c74:	b580      	push	{r7, lr}
 8000c76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	USART_fsend("problem");
 8000c78:	4803      	ldr	r0, [pc, #12]	@ (8000c88 <Error_Handler+0x14>)
 8000c7a:	f7ff fb0d 	bl	8000298 <USART_fsend>
  __ASM volatile ("cpsid i" : : : "memory");
 8000c7e:	b672      	cpsid	i
}
 8000c80:	bf00      	nop
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000c82:	bf00      	nop
 8000c84:	e7fd      	b.n	8000c82 <Error_Handler+0xe>
 8000c86:	bf00      	nop
 8000c88:	0800446c 	.word	0x0800446c

08000c8c <HAL_MspInit>:
 8000c8c:	b480      	push	{r7}
 8000c8e:	b085      	sub	sp, #20
 8000c90:	af00      	add	r7, sp, #0
 8000c92:	4b15      	ldr	r3, [pc, #84]	@ (8000ce8 <HAL_MspInit+0x5c>)
 8000c94:	699b      	ldr	r3, [r3, #24]
 8000c96:	4a14      	ldr	r2, [pc, #80]	@ (8000ce8 <HAL_MspInit+0x5c>)
 8000c98:	f043 0301 	orr.w	r3, r3, #1
 8000c9c:	6193      	str	r3, [r2, #24]
 8000c9e:	4b12      	ldr	r3, [pc, #72]	@ (8000ce8 <HAL_MspInit+0x5c>)
 8000ca0:	699b      	ldr	r3, [r3, #24]
 8000ca2:	f003 0301 	and.w	r3, r3, #1
 8000ca6:	60bb      	str	r3, [r7, #8]
 8000ca8:	68bb      	ldr	r3, [r7, #8]
 8000caa:	4b0f      	ldr	r3, [pc, #60]	@ (8000ce8 <HAL_MspInit+0x5c>)
 8000cac:	69db      	ldr	r3, [r3, #28]
 8000cae:	4a0e      	ldr	r2, [pc, #56]	@ (8000ce8 <HAL_MspInit+0x5c>)
 8000cb0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000cb4:	61d3      	str	r3, [r2, #28]
 8000cb6:	4b0c      	ldr	r3, [pc, #48]	@ (8000ce8 <HAL_MspInit+0x5c>)
 8000cb8:	69db      	ldr	r3, [r3, #28]
 8000cba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000cbe:	607b      	str	r3, [r7, #4]
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	4b0a      	ldr	r3, [pc, #40]	@ (8000cec <HAL_MspInit+0x60>)
 8000cc4:	685b      	ldr	r3, [r3, #4]
 8000cc6:	60fb      	str	r3, [r7, #12]
 8000cc8:	68fb      	ldr	r3, [r7, #12]
 8000cca:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000cce:	60fb      	str	r3, [r7, #12]
 8000cd0:	68fb      	ldr	r3, [r7, #12]
 8000cd2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000cd6:	60fb      	str	r3, [r7, #12]
 8000cd8:	4a04      	ldr	r2, [pc, #16]	@ (8000cec <HAL_MspInit+0x60>)
 8000cda:	68fb      	ldr	r3, [r7, #12]
 8000cdc:	6053      	str	r3, [r2, #4]
 8000cde:	bf00      	nop
 8000ce0:	3714      	adds	r7, #20
 8000ce2:	46bd      	mov	sp, r7
 8000ce4:	bc80      	pop	{r7}
 8000ce6:	4770      	bx	lr
 8000ce8:	40021000 	.word	0x40021000
 8000cec:	40010000 	.word	0x40010000

08000cf0 <NMI_Handler>:
 8000cf0:	b480      	push	{r7}
 8000cf2:	af00      	add	r7, sp, #0
 8000cf4:	bf00      	nop
 8000cf6:	e7fd      	b.n	8000cf4 <NMI_Handler+0x4>

08000cf8 <HardFault_Handler>:
 8000cf8:	b480      	push	{r7}
 8000cfa:	af00      	add	r7, sp, #0
 8000cfc:	bf00      	nop
 8000cfe:	e7fd      	b.n	8000cfc <HardFault_Handler+0x4>

08000d00 <MemManage_Handler>:
 8000d00:	b480      	push	{r7}
 8000d02:	af00      	add	r7, sp, #0
 8000d04:	bf00      	nop
 8000d06:	e7fd      	b.n	8000d04 <MemManage_Handler+0x4>

08000d08 <BusFault_Handler>:
 8000d08:	b480      	push	{r7}
 8000d0a:	af00      	add	r7, sp, #0
 8000d0c:	bf00      	nop
 8000d0e:	e7fd      	b.n	8000d0c <BusFault_Handler+0x4>

08000d10 <UsageFault_Handler>:
 8000d10:	b480      	push	{r7}
 8000d12:	af00      	add	r7, sp, #0
 8000d14:	bf00      	nop
 8000d16:	e7fd      	b.n	8000d14 <UsageFault_Handler+0x4>

08000d18 <SVC_Handler>:
 8000d18:	b480      	push	{r7}
 8000d1a:	af00      	add	r7, sp, #0
 8000d1c:	bf00      	nop
 8000d1e:	46bd      	mov	sp, r7
 8000d20:	bc80      	pop	{r7}
 8000d22:	4770      	bx	lr

08000d24 <DebugMon_Handler>:
 8000d24:	b480      	push	{r7}
 8000d26:	af00      	add	r7, sp, #0
 8000d28:	bf00      	nop
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	bc80      	pop	{r7}
 8000d2e:	4770      	bx	lr

08000d30 <PendSV_Handler>:
 8000d30:	b480      	push	{r7}
 8000d32:	af00      	add	r7, sp, #0
 8000d34:	bf00      	nop
 8000d36:	46bd      	mov	sp, r7
 8000d38:	bc80      	pop	{r7}
 8000d3a:	4770      	bx	lr

08000d3c <SysTick_Handler>:
 8000d3c:	b580      	push	{r7, lr}
 8000d3e:	af00      	add	r7, sp, #0
 8000d40:	f000 fa16 	bl	8001170 <HAL_IncTick>
 8000d44:	bf00      	nop
 8000d46:	bd80      	pop	{r7, pc}

08000d48 <TIM2_IRQHandler>:
 8000d48:	b580      	push	{r7, lr}
 8000d4a:	af00      	add	r7, sp, #0
 8000d4c:	4802      	ldr	r0, [pc, #8]	@ (8000d58 <TIM2_IRQHandler+0x10>)
 8000d4e:	f001 fa60 	bl	8002212 <HAL_TIM_IRQHandler>
 8000d52:	bf00      	nop
 8000d54:	bd80      	pop	{r7, pc}
 8000d56:	bf00      	nop
 8000d58:	20000624 	.word	0x20000624

08000d5c <USART2_IRQHandler>:
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	af00      	add	r7, sp, #0
 8000d60:	4802      	ldr	r0, [pc, #8]	@ (8000d6c <USART2_IRQHandler+0x10>)
 8000d62:	f002 f8d7 	bl	8002f14 <HAL_UART_IRQHandler>
 8000d66:	bf00      	nop
 8000d68:	bd80      	pop	{r7, pc}
 8000d6a:	bf00      	nop
 8000d6c:	2000066c 	.word	0x2000066c

08000d70 <EXTI15_10_IRQHandler>:
 8000d70:	b580      	push	{r7, lr}
 8000d72:	af00      	add	r7, sp, #0
 8000d74:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8000d78:	f000 fd72 	bl	8001860 <HAL_GPIO_EXTI_IRQHandler>
 8000d7c:	bf00      	nop
 8000d7e:	bd80      	pop	{r7, pc}

08000d80 <_sbrk>:
 8000d80:	b580      	push	{r7, lr}
 8000d82:	b086      	sub	sp, #24
 8000d84:	af00      	add	r7, sp, #0
 8000d86:	6078      	str	r0, [r7, #4]
 8000d88:	4a14      	ldr	r2, [pc, #80]	@ (8000ddc <_sbrk+0x5c>)
 8000d8a:	4b15      	ldr	r3, [pc, #84]	@ (8000de0 <_sbrk+0x60>)
 8000d8c:	1ad3      	subs	r3, r2, r3
 8000d8e:	617b      	str	r3, [r7, #20]
 8000d90:	697b      	ldr	r3, [r7, #20]
 8000d92:	613b      	str	r3, [r7, #16]
 8000d94:	4b13      	ldr	r3, [pc, #76]	@ (8000de4 <_sbrk+0x64>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	2b00      	cmp	r3, #0
 8000d9a:	d102      	bne.n	8000da2 <_sbrk+0x22>
 8000d9c:	4b11      	ldr	r3, [pc, #68]	@ (8000de4 <_sbrk+0x64>)
 8000d9e:	4a12      	ldr	r2, [pc, #72]	@ (8000de8 <_sbrk+0x68>)
 8000da0:	601a      	str	r2, [r3, #0]
 8000da2:	4b10      	ldr	r3, [pc, #64]	@ (8000de4 <_sbrk+0x64>)
 8000da4:	681a      	ldr	r2, [r3, #0]
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	4413      	add	r3, r2
 8000daa:	693a      	ldr	r2, [r7, #16]
 8000dac:	429a      	cmp	r2, r3
 8000dae:	d207      	bcs.n	8000dc0 <_sbrk+0x40>
 8000db0:	f002 fe7a 	bl	8003aa8 <__errno>
 8000db4:	4603      	mov	r3, r0
 8000db6:	220c      	movs	r2, #12
 8000db8:	601a      	str	r2, [r3, #0]
 8000dba:	f04f 33ff 	mov.w	r3, #4294967295
 8000dbe:	e009      	b.n	8000dd4 <_sbrk+0x54>
 8000dc0:	4b08      	ldr	r3, [pc, #32]	@ (8000de4 <_sbrk+0x64>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	60fb      	str	r3, [r7, #12]
 8000dc6:	4b07      	ldr	r3, [pc, #28]	@ (8000de4 <_sbrk+0x64>)
 8000dc8:	681a      	ldr	r2, [r3, #0]
 8000dca:	687b      	ldr	r3, [r7, #4]
 8000dcc:	4413      	add	r3, r2
 8000dce:	4a05      	ldr	r2, [pc, #20]	@ (8000de4 <_sbrk+0x64>)
 8000dd0:	6013      	str	r3, [r2, #0]
 8000dd2:	68fb      	ldr	r3, [r7, #12]
 8000dd4:	4618      	mov	r0, r3
 8000dd6:	3718      	adds	r7, #24
 8000dd8:	46bd      	mov	sp, r7
 8000dda:	bd80      	pop	{r7, pc}
 8000ddc:	20005000 	.word	0x20005000
 8000de0:	00000400 	.word	0x00000400
 8000de4:	20000620 	.word	0x20000620
 8000de8:	20000800 	.word	0x20000800

08000dec <SystemInit>:
 8000dec:	b480      	push	{r7}
 8000dee:	af00      	add	r7, sp, #0
 8000df0:	bf00      	nop
 8000df2:	46bd      	mov	sp, r7
 8000df4:	bc80      	pop	{r7}
 8000df6:	4770      	bx	lr

08000df8 <MX_TIM2_Init>:
 8000df8:	b580      	push	{r7, lr}
 8000dfa:	b090      	sub	sp, #64	@ 0x40
 8000dfc:	af00      	add	r7, sp, #0
 8000dfe:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000e02:	2200      	movs	r2, #0
 8000e04:	601a      	str	r2, [r3, #0]
 8000e06:	605a      	str	r2, [r3, #4]
 8000e08:	609a      	str	r2, [r3, #8]
 8000e0a:	60da      	str	r2, [r3, #12]
 8000e0c:	f107 031c 	add.w	r3, r7, #28
 8000e10:	2200      	movs	r2, #0
 8000e12:	601a      	str	r2, [r3, #0]
 8000e14:	605a      	str	r2, [r3, #4]
 8000e16:	609a      	str	r2, [r3, #8]
 8000e18:	60da      	str	r2, [r3, #12]
 8000e1a:	611a      	str	r2, [r3, #16]
 8000e1c:	f107 030c 	add.w	r3, r7, #12
 8000e20:	2200      	movs	r2, #0
 8000e22:	601a      	str	r2, [r3, #0]
 8000e24:	605a      	str	r2, [r3, #4]
 8000e26:	609a      	str	r2, [r3, #8]
 8000e28:	60da      	str	r2, [r3, #12]
 8000e2a:	1d3b      	adds	r3, r7, #4
 8000e2c:	2200      	movs	r2, #0
 8000e2e:	601a      	str	r2, [r3, #0]
 8000e30:	605a      	str	r2, [r3, #4]
 8000e32:	4b3e      	ldr	r3, [pc, #248]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e34:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000e38:	601a      	str	r2, [r3, #0]
 8000e3a:	4b3c      	ldr	r3, [pc, #240]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e3c:	221f      	movs	r2, #31
 8000e3e:	605a      	str	r2, [r3, #4]
 8000e40:	4b3a      	ldr	r3, [pc, #232]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e42:	2200      	movs	r2, #0
 8000e44:	609a      	str	r2, [r3, #8]
 8000e46:	4b39      	ldr	r3, [pc, #228]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e48:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000e4c:	60da      	str	r2, [r3, #12]
 8000e4e:	4b37      	ldr	r3, [pc, #220]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e50:	2200      	movs	r2, #0
 8000e52:	611a      	str	r2, [r3, #16]
 8000e54:	4b35      	ldr	r3, [pc, #212]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e56:	2200      	movs	r2, #0
 8000e58:	619a      	str	r2, [r3, #24]
 8000e5a:	4834      	ldr	r0, [pc, #208]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e5c:	f001 f932 	bl	80020c4 <HAL_TIM_Base_Init>
 8000e60:	4603      	mov	r3, r0
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	d001      	beq.n	8000e6a <MX_TIM2_Init+0x72>
 8000e66:	f7ff ff05 	bl	8000c74 <Error_Handler>
 8000e6a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000e6e:	633b      	str	r3, [r7, #48]	@ 0x30
 8000e70:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000e74:	4619      	mov	r1, r3
 8000e76:	482d      	ldr	r0, [pc, #180]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e78:	f001 fb57 	bl	800252a <HAL_TIM_ConfigClockSource>
 8000e7c:	4603      	mov	r3, r0
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	d001      	beq.n	8000e86 <MX_TIM2_Init+0x8e>
 8000e82:	f7ff fef7 	bl	8000c74 <Error_Handler>
 8000e86:	4829      	ldr	r0, [pc, #164]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000e88:	f001 f96b 	bl	8002162 <HAL_TIM_IC_Init>
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	2b00      	cmp	r3, #0
 8000e90:	d001      	beq.n	8000e96 <MX_TIM2_Init+0x9e>
 8000e92:	f7ff feef 	bl	8000c74 <Error_Handler>
 8000e96:	2304      	movs	r3, #4
 8000e98:	61fb      	str	r3, [r7, #28]
 8000e9a:	2350      	movs	r3, #80	@ 0x50
 8000e9c:	623b      	str	r3, [r7, #32]
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	627b      	str	r3, [r7, #36]	@ 0x24
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000eaa:	f107 031c 	add.w	r3, r7, #28
 8000eae:	4619      	mov	r1, r3
 8000eb0:	481e      	ldr	r0, [pc, #120]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000eb2:	f001 fc01 	bl	80026b8 <HAL_TIM_SlaveConfigSynchro>
 8000eb6:	4603      	mov	r3, r0
 8000eb8:	2b00      	cmp	r3, #0
 8000eba:	d001      	beq.n	8000ec0 <MX_TIM2_Init+0xc8>
 8000ebc:	f7ff feda 	bl	8000c74 <Error_Handler>
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	60fb      	str	r3, [r7, #12]
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	613b      	str	r3, [r7, #16]
 8000ec8:	2300      	movs	r3, #0
 8000eca:	617b      	str	r3, [r7, #20]
 8000ecc:	2300      	movs	r3, #0
 8000ece:	61bb      	str	r3, [r7, #24]
 8000ed0:	f107 030c 	add.w	r3, r7, #12
 8000ed4:	2200      	movs	r2, #0
 8000ed6:	4619      	mov	r1, r3
 8000ed8:	4814      	ldr	r0, [pc, #80]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000eda:	f001 fa8a 	bl	80023f2 <HAL_TIM_IC_ConfigChannel>
 8000ede:	4603      	mov	r3, r0
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d001      	beq.n	8000ee8 <MX_TIM2_Init+0xf0>
 8000ee4:	f7ff fec6 	bl	8000c74 <Error_Handler>
 8000ee8:	2302      	movs	r3, #2
 8000eea:	60fb      	str	r3, [r7, #12]
 8000eec:	2302      	movs	r3, #2
 8000eee:	613b      	str	r3, [r7, #16]
 8000ef0:	f107 030c 	add.w	r3, r7, #12
 8000ef4:	2204      	movs	r2, #4
 8000ef6:	4619      	mov	r1, r3
 8000ef8:	480c      	ldr	r0, [pc, #48]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000efa:	f001 fa7a 	bl	80023f2 <HAL_TIM_IC_ConfigChannel>
 8000efe:	4603      	mov	r3, r0
 8000f00:	2b00      	cmp	r3, #0
 8000f02:	d001      	beq.n	8000f08 <MX_TIM2_Init+0x110>
 8000f04:	f7ff feb6 	bl	8000c74 <Error_Handler>
 8000f08:	2300      	movs	r3, #0
 8000f0a:	607b      	str	r3, [r7, #4]
 8000f0c:	2300      	movs	r3, #0
 8000f0e:	60bb      	str	r3, [r7, #8]
 8000f10:	1d3b      	adds	r3, r7, #4
 8000f12:	4619      	mov	r1, r3
 8000f14:	4805      	ldr	r0, [pc, #20]	@ (8000f2c <MX_TIM2_Init+0x134>)
 8000f16:	f001 fee3 	bl	8002ce0 <HAL_TIMEx_MasterConfigSynchronization>
 8000f1a:	4603      	mov	r3, r0
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d001      	beq.n	8000f24 <MX_TIM2_Init+0x12c>
 8000f20:	f7ff fea8 	bl	8000c74 <Error_Handler>
 8000f24:	bf00      	nop
 8000f26:	3740      	adds	r7, #64	@ 0x40
 8000f28:	46bd      	mov	sp, r7
 8000f2a:	bd80      	pop	{r7, pc}
 8000f2c:	20000624 	.word	0x20000624

08000f30 <HAL_TIM_Base_MspInit>:
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b088      	sub	sp, #32
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	6078      	str	r0, [r7, #4]
 8000f38:	f107 0310 	add.w	r3, r7, #16
 8000f3c:	2200      	movs	r2, #0
 8000f3e:	601a      	str	r2, [r3, #0]
 8000f40:	605a      	str	r2, [r3, #4]
 8000f42:	609a      	str	r2, [r3, #8]
 8000f44:	60da      	str	r2, [r3, #12]
 8000f46:	687b      	ldr	r3, [r7, #4]
 8000f48:	681b      	ldr	r3, [r3, #0]
 8000f4a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000f4e:	d12b      	bne.n	8000fa8 <HAL_TIM_Base_MspInit+0x78>
 8000f50:	4b17      	ldr	r3, [pc, #92]	@ (8000fb0 <HAL_TIM_Base_MspInit+0x80>)
 8000f52:	69db      	ldr	r3, [r3, #28]
 8000f54:	4a16      	ldr	r2, [pc, #88]	@ (8000fb0 <HAL_TIM_Base_MspInit+0x80>)
 8000f56:	f043 0301 	orr.w	r3, r3, #1
 8000f5a:	61d3      	str	r3, [r2, #28]
 8000f5c:	4b14      	ldr	r3, [pc, #80]	@ (8000fb0 <HAL_TIM_Base_MspInit+0x80>)
 8000f5e:	69db      	ldr	r3, [r3, #28]
 8000f60:	f003 0301 	and.w	r3, r3, #1
 8000f64:	60fb      	str	r3, [r7, #12]
 8000f66:	68fb      	ldr	r3, [r7, #12]
 8000f68:	4b11      	ldr	r3, [pc, #68]	@ (8000fb0 <HAL_TIM_Base_MspInit+0x80>)
 8000f6a:	699b      	ldr	r3, [r3, #24]
 8000f6c:	4a10      	ldr	r2, [pc, #64]	@ (8000fb0 <HAL_TIM_Base_MspInit+0x80>)
 8000f6e:	f043 0304 	orr.w	r3, r3, #4
 8000f72:	6193      	str	r3, [r2, #24]
 8000f74:	4b0e      	ldr	r3, [pc, #56]	@ (8000fb0 <HAL_TIM_Base_MspInit+0x80>)
 8000f76:	699b      	ldr	r3, [r3, #24]
 8000f78:	f003 0304 	and.w	r3, r3, #4
 8000f7c:	60bb      	str	r3, [r7, #8]
 8000f7e:	68bb      	ldr	r3, [r7, #8]
 8000f80:	2301      	movs	r3, #1
 8000f82:	613b      	str	r3, [r7, #16]
 8000f84:	2300      	movs	r3, #0
 8000f86:	617b      	str	r3, [r7, #20]
 8000f88:	2300      	movs	r3, #0
 8000f8a:	61bb      	str	r3, [r7, #24]
 8000f8c:	f107 0310 	add.w	r3, r7, #16
 8000f90:	4619      	mov	r1, r3
 8000f92:	4808      	ldr	r0, [pc, #32]	@ (8000fb4 <HAL_TIM_Base_MspInit+0x84>)
 8000f94:	f000 fac8 	bl	8001528 <HAL_GPIO_Init>
 8000f98:	2200      	movs	r2, #0
 8000f9a:	2100      	movs	r1, #0
 8000f9c:	201c      	movs	r0, #28
 8000f9e:	f000 f9da 	bl	8001356 <HAL_NVIC_SetPriority>
 8000fa2:	201c      	movs	r0, #28
 8000fa4:	f000 f9f3 	bl	800138e <HAL_NVIC_EnableIRQ>
 8000fa8:	bf00      	nop
 8000faa:	3720      	adds	r7, #32
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bd80      	pop	{r7, pc}
 8000fb0:	40021000 	.word	0x40021000
 8000fb4:	40010800 	.word	0x40010800

08000fb8 <MX_USART2_UART_Init>:
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	af00      	add	r7, sp, #0
 8000fbc:	4b11      	ldr	r3, [pc, #68]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fbe:	4a12      	ldr	r2, [pc, #72]	@ (8001008 <MX_USART2_UART_Init+0x50>)
 8000fc0:	601a      	str	r2, [r3, #0]
 8000fc2:	4b10      	ldr	r3, [pc, #64]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fc4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000fc8:	605a      	str	r2, [r3, #4]
 8000fca:	4b0e      	ldr	r3, [pc, #56]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fcc:	2200      	movs	r2, #0
 8000fce:	609a      	str	r2, [r3, #8]
 8000fd0:	4b0c      	ldr	r3, [pc, #48]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fd2:	2200      	movs	r2, #0
 8000fd4:	60da      	str	r2, [r3, #12]
 8000fd6:	4b0b      	ldr	r3, [pc, #44]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fd8:	2200      	movs	r2, #0
 8000fda:	611a      	str	r2, [r3, #16]
 8000fdc:	4b09      	ldr	r3, [pc, #36]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fde:	220c      	movs	r2, #12
 8000fe0:	615a      	str	r2, [r3, #20]
 8000fe2:	4b08      	ldr	r3, [pc, #32]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fe4:	2200      	movs	r2, #0
 8000fe6:	619a      	str	r2, [r3, #24]
 8000fe8:	4b06      	ldr	r3, [pc, #24]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000fea:	2200      	movs	r2, #0
 8000fec:	61da      	str	r2, [r3, #28]
 8000fee:	4805      	ldr	r0, [pc, #20]	@ (8001004 <MX_USART2_UART_Init+0x4c>)
 8000ff0:	f001 fee6 	bl	8002dc0 <HAL_UART_Init>
 8000ff4:	4603      	mov	r3, r0
 8000ff6:	2b00      	cmp	r3, #0
 8000ff8:	d001      	beq.n	8000ffe <MX_USART2_UART_Init+0x46>
 8000ffa:	f7ff fe3b 	bl	8000c74 <Error_Handler>
 8000ffe:	bf00      	nop
 8001000:	bd80      	pop	{r7, pc}
 8001002:	bf00      	nop
 8001004:	2000066c 	.word	0x2000066c
 8001008:	40004400 	.word	0x40004400

0800100c <HAL_UART_MspInit>:
 800100c:	b580      	push	{r7, lr}
 800100e:	b088      	sub	sp, #32
 8001010:	af00      	add	r7, sp, #0
 8001012:	6078      	str	r0, [r7, #4]
 8001014:	f107 0310 	add.w	r3, r7, #16
 8001018:	2200      	movs	r2, #0
 800101a:	601a      	str	r2, [r3, #0]
 800101c:	605a      	str	r2, [r3, #4]
 800101e:	609a      	str	r2, [r3, #8]
 8001020:	60da      	str	r2, [r3, #12]
 8001022:	687b      	ldr	r3, [r7, #4]
 8001024:	681b      	ldr	r3, [r3, #0]
 8001026:	4a19      	ldr	r2, [pc, #100]	@ (800108c <HAL_UART_MspInit+0x80>)
 8001028:	4293      	cmp	r3, r2
 800102a:	d12b      	bne.n	8001084 <HAL_UART_MspInit+0x78>
 800102c:	4b18      	ldr	r3, [pc, #96]	@ (8001090 <HAL_UART_MspInit+0x84>)
 800102e:	69db      	ldr	r3, [r3, #28]
 8001030:	4a17      	ldr	r2, [pc, #92]	@ (8001090 <HAL_UART_MspInit+0x84>)
 8001032:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001036:	61d3      	str	r3, [r2, #28]
 8001038:	4b15      	ldr	r3, [pc, #84]	@ (8001090 <HAL_UART_MspInit+0x84>)
 800103a:	69db      	ldr	r3, [r3, #28]
 800103c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001040:	60fb      	str	r3, [r7, #12]
 8001042:	68fb      	ldr	r3, [r7, #12]
 8001044:	4b12      	ldr	r3, [pc, #72]	@ (8001090 <HAL_UART_MspInit+0x84>)
 8001046:	699b      	ldr	r3, [r3, #24]
 8001048:	4a11      	ldr	r2, [pc, #68]	@ (8001090 <HAL_UART_MspInit+0x84>)
 800104a:	f043 0304 	orr.w	r3, r3, #4
 800104e:	6193      	str	r3, [r2, #24]
 8001050:	4b0f      	ldr	r3, [pc, #60]	@ (8001090 <HAL_UART_MspInit+0x84>)
 8001052:	699b      	ldr	r3, [r3, #24]
 8001054:	f003 0304 	and.w	r3, r3, #4
 8001058:	60bb      	str	r3, [r7, #8]
 800105a:	68bb      	ldr	r3, [r7, #8]
 800105c:	230c      	movs	r3, #12
 800105e:	613b      	str	r3, [r7, #16]
 8001060:	2302      	movs	r3, #2
 8001062:	617b      	str	r3, [r7, #20]
 8001064:	2302      	movs	r3, #2
 8001066:	61fb      	str	r3, [r7, #28]
 8001068:	f107 0310 	add.w	r3, r7, #16
 800106c:	4619      	mov	r1, r3
 800106e:	4809      	ldr	r0, [pc, #36]	@ (8001094 <HAL_UART_MspInit+0x88>)
 8001070:	f000 fa5a 	bl	8001528 <HAL_GPIO_Init>
 8001074:	2200      	movs	r2, #0
 8001076:	2100      	movs	r1, #0
 8001078:	2026      	movs	r0, #38	@ 0x26
 800107a:	f000 f96c 	bl	8001356 <HAL_NVIC_SetPriority>
 800107e:	2026      	movs	r0, #38	@ 0x26
 8001080:	f000 f985 	bl	800138e <HAL_NVIC_EnableIRQ>
 8001084:	bf00      	nop
 8001086:	3720      	adds	r7, #32
 8001088:	46bd      	mov	sp, r7
 800108a:	bd80      	pop	{r7, pc}
 800108c:	40004400 	.word	0x40004400
 8001090:	40021000 	.word	0x40021000
 8001094:	40010800 	.word	0x40010800

08001098 <Reset_Handler>:
 8001098:	f7ff fea8 	bl	8000dec <SystemInit>
 800109c:	480b      	ldr	r0, [pc, #44]	@ (80010cc <LoopFillZerobss+0xe>)
 800109e:	490c      	ldr	r1, [pc, #48]	@ (80010d0 <LoopFillZerobss+0x12>)
 80010a0:	4a0c      	ldr	r2, [pc, #48]	@ (80010d4 <LoopFillZerobss+0x16>)
 80010a2:	2300      	movs	r3, #0
 80010a4:	e002      	b.n	80010ac <LoopCopyDataInit>

080010a6 <CopyDataInit>:
 80010a6:	58d4      	ldr	r4, [r2, r3]
 80010a8:	50c4      	str	r4, [r0, r3]
 80010aa:	3304      	adds	r3, #4

080010ac <LoopCopyDataInit>:
 80010ac:	18c4      	adds	r4, r0, r3
 80010ae:	428c      	cmp	r4, r1
 80010b0:	d3f9      	bcc.n	80010a6 <CopyDataInit>
 80010b2:	4a09      	ldr	r2, [pc, #36]	@ (80010d8 <LoopFillZerobss+0x1a>)
 80010b4:	4c09      	ldr	r4, [pc, #36]	@ (80010dc <LoopFillZerobss+0x1e>)
 80010b6:	2300      	movs	r3, #0
 80010b8:	e001      	b.n	80010be <LoopFillZerobss>

080010ba <FillZerobss>:
 80010ba:	6013      	str	r3, [r2, #0]
 80010bc:	3204      	adds	r2, #4

080010be <LoopFillZerobss>:
 80010be:	42a2      	cmp	r2, r4
 80010c0:	d3fb      	bcc.n	80010ba <FillZerobss>
 80010c2:	f002 fcf7 	bl	8003ab4 <__libc_init_array>
 80010c6:	f7ff fd69 	bl	8000b9c <main>
 80010ca:	4770      	bx	lr
 80010cc:	20000000 	.word	0x20000000
 80010d0:	2000005c 	.word	0x2000005c
 80010d4:	080045e4 	.word	0x080045e4
 80010d8:	2000005c 	.word	0x2000005c
 80010dc:	20000800 	.word	0x20000800

080010e0 <ADC1_2_IRQHandler>:
 80010e0:	e7fe      	b.n	80010e0 <ADC1_2_IRQHandler>
	...

080010e4 <HAL_Init>:
 80010e4:	b580      	push	{r7, lr}
 80010e6:	af00      	add	r7, sp, #0
 80010e8:	4b08      	ldr	r3, [pc, #32]	@ (800110c <HAL_Init+0x28>)
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	4a07      	ldr	r2, [pc, #28]	@ (800110c <HAL_Init+0x28>)
 80010ee:	f043 0310 	orr.w	r3, r3, #16
 80010f2:	6013      	str	r3, [r2, #0]
 80010f4:	2003      	movs	r0, #3
 80010f6:	f000 f923 	bl	8001340 <HAL_NVIC_SetPriorityGrouping>
 80010fa:	2000      	movs	r0, #0
 80010fc:	f000 f808 	bl	8001110 <HAL_InitTick>
 8001100:	f7ff fdc4 	bl	8000c8c <HAL_MspInit>
 8001104:	2300      	movs	r3, #0
 8001106:	4618      	mov	r0, r3
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	40022000 	.word	0x40022000

08001110 <HAL_InitTick>:
 8001110:	b580      	push	{r7, lr}
 8001112:	b082      	sub	sp, #8
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	4b12      	ldr	r3, [pc, #72]	@ (8001164 <HAL_InitTick+0x54>)
 800111a:	681a      	ldr	r2, [r3, #0]
 800111c:	4b12      	ldr	r3, [pc, #72]	@ (8001168 <HAL_InitTick+0x58>)
 800111e:	781b      	ldrb	r3, [r3, #0]
 8001120:	4619      	mov	r1, r3
 8001122:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001126:	fbb3 f3f1 	udiv	r3, r3, r1
 800112a:	fbb2 f3f3 	udiv	r3, r2, r3
 800112e:	4618      	mov	r0, r3
 8001130:	f000 f93b 	bl	80013aa <HAL_SYSTICK_Config>
 8001134:	4603      	mov	r3, r0
 8001136:	2b00      	cmp	r3, #0
 8001138:	d001      	beq.n	800113e <HAL_InitTick+0x2e>
 800113a:	2301      	movs	r3, #1
 800113c:	e00e      	b.n	800115c <HAL_InitTick+0x4c>
 800113e:	687b      	ldr	r3, [r7, #4]
 8001140:	2b0f      	cmp	r3, #15
 8001142:	d80a      	bhi.n	800115a <HAL_InitTick+0x4a>
 8001144:	2200      	movs	r2, #0
 8001146:	6879      	ldr	r1, [r7, #4]
 8001148:	f04f 30ff 	mov.w	r0, #4294967295
 800114c:	f000 f903 	bl	8001356 <HAL_NVIC_SetPriority>
 8001150:	4a06      	ldr	r2, [pc, #24]	@ (800116c <HAL_InitTick+0x5c>)
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	6013      	str	r3, [r2, #0]
 8001156:	2300      	movs	r3, #0
 8001158:	e000      	b.n	800115c <HAL_InitTick+0x4c>
 800115a:	2301      	movs	r3, #1
 800115c:	4618      	mov	r0, r3
 800115e:	3708      	adds	r7, #8
 8001160:	46bd      	mov	sp, r7
 8001162:	bd80      	pop	{r7, pc}
 8001164:	20000000 	.word	0x20000000
 8001168:	20000008 	.word	0x20000008
 800116c:	20000004 	.word	0x20000004

08001170 <HAL_IncTick>:
 8001170:	b480      	push	{r7}
 8001172:	af00      	add	r7, sp, #0
 8001174:	4b05      	ldr	r3, [pc, #20]	@ (800118c <HAL_IncTick+0x1c>)
 8001176:	781b      	ldrb	r3, [r3, #0]
 8001178:	461a      	mov	r2, r3
 800117a:	4b05      	ldr	r3, [pc, #20]	@ (8001190 <HAL_IncTick+0x20>)
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	4413      	add	r3, r2
 8001180:	4a03      	ldr	r2, [pc, #12]	@ (8001190 <HAL_IncTick+0x20>)
 8001182:	6013      	str	r3, [r2, #0]
 8001184:	bf00      	nop
 8001186:	46bd      	mov	sp, r7
 8001188:	bc80      	pop	{r7}
 800118a:	4770      	bx	lr
 800118c:	20000008 	.word	0x20000008
 8001190:	200006b4 	.word	0x200006b4

08001194 <HAL_GetTick>:
 8001194:	b480      	push	{r7}
 8001196:	af00      	add	r7, sp, #0
 8001198:	4b02      	ldr	r3, [pc, #8]	@ (80011a4 <HAL_GetTick+0x10>)
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	4618      	mov	r0, r3
 800119e:	46bd      	mov	sp, r7
 80011a0:	bc80      	pop	{r7}
 80011a2:	4770      	bx	lr
 80011a4:	200006b4 	.word	0x200006b4

080011a8 <__NVIC_SetPriorityGrouping>:
 80011a8:	b480      	push	{r7}
 80011aa:	b085      	sub	sp, #20
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	6078      	str	r0, [r7, #4]
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	f003 0307 	and.w	r3, r3, #7
 80011b6:	60fb      	str	r3, [r7, #12]
 80011b8:	4b0c      	ldr	r3, [pc, #48]	@ (80011ec <__NVIC_SetPriorityGrouping+0x44>)
 80011ba:	68db      	ldr	r3, [r3, #12]
 80011bc:	60bb      	str	r3, [r7, #8]
 80011be:	68ba      	ldr	r2, [r7, #8]
 80011c0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80011c4:	4013      	ands	r3, r2
 80011c6:	60bb      	str	r3, [r7, #8]
 80011c8:	68fb      	ldr	r3, [r7, #12]
 80011ca:	021a      	lsls	r2, r3, #8
 80011cc:	68bb      	ldr	r3, [r7, #8]
 80011ce:	4313      	orrs	r3, r2
 80011d0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80011d4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80011d8:	60bb      	str	r3, [r7, #8]
 80011da:	4a04      	ldr	r2, [pc, #16]	@ (80011ec <__NVIC_SetPriorityGrouping+0x44>)
 80011dc:	68bb      	ldr	r3, [r7, #8]
 80011de:	60d3      	str	r3, [r2, #12]
 80011e0:	bf00      	nop
 80011e2:	3714      	adds	r7, #20
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bc80      	pop	{r7}
 80011e8:	4770      	bx	lr
 80011ea:	bf00      	nop
 80011ec:	e000ed00 	.word	0xe000ed00

080011f0 <__NVIC_GetPriorityGrouping>:
 80011f0:	b480      	push	{r7}
 80011f2:	af00      	add	r7, sp, #0
 80011f4:	4b04      	ldr	r3, [pc, #16]	@ (8001208 <__NVIC_GetPriorityGrouping+0x18>)
 80011f6:	68db      	ldr	r3, [r3, #12]
 80011f8:	0a1b      	lsrs	r3, r3, #8
 80011fa:	f003 0307 	and.w	r3, r3, #7
 80011fe:	4618      	mov	r0, r3
 8001200:	46bd      	mov	sp, r7
 8001202:	bc80      	pop	{r7}
 8001204:	4770      	bx	lr
 8001206:	bf00      	nop
 8001208:	e000ed00 	.word	0xe000ed00

0800120c <__NVIC_EnableIRQ>:
 800120c:	b480      	push	{r7}
 800120e:	b083      	sub	sp, #12
 8001210:	af00      	add	r7, sp, #0
 8001212:	4603      	mov	r3, r0
 8001214:	71fb      	strb	r3, [r7, #7]
 8001216:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800121a:	2b00      	cmp	r3, #0
 800121c:	db0b      	blt.n	8001236 <__NVIC_EnableIRQ+0x2a>
 800121e:	79fb      	ldrb	r3, [r7, #7]
 8001220:	f003 021f 	and.w	r2, r3, #31
 8001224:	4906      	ldr	r1, [pc, #24]	@ (8001240 <__NVIC_EnableIRQ+0x34>)
 8001226:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800122a:	095b      	lsrs	r3, r3, #5
 800122c:	2001      	movs	r0, #1
 800122e:	fa00 f202 	lsl.w	r2, r0, r2
 8001232:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001236:	bf00      	nop
 8001238:	370c      	adds	r7, #12
 800123a:	46bd      	mov	sp, r7
 800123c:	bc80      	pop	{r7}
 800123e:	4770      	bx	lr
 8001240:	e000e100 	.word	0xe000e100

08001244 <__NVIC_SetPriority>:
 8001244:	b480      	push	{r7}
 8001246:	b083      	sub	sp, #12
 8001248:	af00      	add	r7, sp, #0
 800124a:	4603      	mov	r3, r0
 800124c:	6039      	str	r1, [r7, #0]
 800124e:	71fb      	strb	r3, [r7, #7]
 8001250:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001254:	2b00      	cmp	r3, #0
 8001256:	db0a      	blt.n	800126e <__NVIC_SetPriority+0x2a>
 8001258:	683b      	ldr	r3, [r7, #0]
 800125a:	b2da      	uxtb	r2, r3
 800125c:	490c      	ldr	r1, [pc, #48]	@ (8001290 <__NVIC_SetPriority+0x4c>)
 800125e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001262:	0112      	lsls	r2, r2, #4
 8001264:	b2d2      	uxtb	r2, r2
 8001266:	440b      	add	r3, r1
 8001268:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800126c:	e00a      	b.n	8001284 <__NVIC_SetPriority+0x40>
 800126e:	683b      	ldr	r3, [r7, #0]
 8001270:	b2da      	uxtb	r2, r3
 8001272:	4908      	ldr	r1, [pc, #32]	@ (8001294 <__NVIC_SetPriority+0x50>)
 8001274:	79fb      	ldrb	r3, [r7, #7]
 8001276:	f003 030f 	and.w	r3, r3, #15
 800127a:	3b04      	subs	r3, #4
 800127c:	0112      	lsls	r2, r2, #4
 800127e:	b2d2      	uxtb	r2, r2
 8001280:	440b      	add	r3, r1
 8001282:	761a      	strb	r2, [r3, #24]
 8001284:	bf00      	nop
 8001286:	370c      	adds	r7, #12
 8001288:	46bd      	mov	sp, r7
 800128a:	bc80      	pop	{r7}
 800128c:	4770      	bx	lr
 800128e:	bf00      	nop
 8001290:	e000e100 	.word	0xe000e100
 8001294:	e000ed00 	.word	0xe000ed00

08001298 <NVIC_EncodePriority>:
 8001298:	b480      	push	{r7}
 800129a:	b089      	sub	sp, #36	@ 0x24
 800129c:	af00      	add	r7, sp, #0
 800129e:	60f8      	str	r0, [r7, #12]
 80012a0:	60b9      	str	r1, [r7, #8]
 80012a2:	607a      	str	r2, [r7, #4]
 80012a4:	68fb      	ldr	r3, [r7, #12]
 80012a6:	f003 0307 	and.w	r3, r3, #7
 80012aa:	61fb      	str	r3, [r7, #28]
 80012ac:	69fb      	ldr	r3, [r7, #28]
 80012ae:	f1c3 0307 	rsb	r3, r3, #7
 80012b2:	2b04      	cmp	r3, #4
 80012b4:	bf28      	it	cs
 80012b6:	2304      	movcs	r3, #4
 80012b8:	61bb      	str	r3, [r7, #24]
 80012ba:	69fb      	ldr	r3, [r7, #28]
 80012bc:	3304      	adds	r3, #4
 80012be:	2b06      	cmp	r3, #6
 80012c0:	d902      	bls.n	80012c8 <NVIC_EncodePriority+0x30>
 80012c2:	69fb      	ldr	r3, [r7, #28]
 80012c4:	3b03      	subs	r3, #3
 80012c6:	e000      	b.n	80012ca <NVIC_EncodePriority+0x32>
 80012c8:	2300      	movs	r3, #0
 80012ca:	617b      	str	r3, [r7, #20]
 80012cc:	f04f 32ff 	mov.w	r2, #4294967295
 80012d0:	69bb      	ldr	r3, [r7, #24]
 80012d2:	fa02 f303 	lsl.w	r3, r2, r3
 80012d6:	43da      	mvns	r2, r3
 80012d8:	68bb      	ldr	r3, [r7, #8]
 80012da:	401a      	ands	r2, r3
 80012dc:	697b      	ldr	r3, [r7, #20]
 80012de:	409a      	lsls	r2, r3
 80012e0:	f04f 31ff 	mov.w	r1, #4294967295
 80012e4:	697b      	ldr	r3, [r7, #20]
 80012e6:	fa01 f303 	lsl.w	r3, r1, r3
 80012ea:	43d9      	mvns	r1, r3
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	400b      	ands	r3, r1
 80012f0:	4313      	orrs	r3, r2
 80012f2:	4618      	mov	r0, r3
 80012f4:	3724      	adds	r7, #36	@ 0x24
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bc80      	pop	{r7}
 80012fa:	4770      	bx	lr

080012fc <SysTick_Config>:
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b082      	sub	sp, #8
 8001300:	af00      	add	r7, sp, #0
 8001302:	6078      	str	r0, [r7, #4]
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	3b01      	subs	r3, #1
 8001308:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800130c:	d301      	bcc.n	8001312 <SysTick_Config+0x16>
 800130e:	2301      	movs	r3, #1
 8001310:	e00f      	b.n	8001332 <SysTick_Config+0x36>
 8001312:	4a0a      	ldr	r2, [pc, #40]	@ (800133c <SysTick_Config+0x40>)
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	3b01      	subs	r3, #1
 8001318:	6053      	str	r3, [r2, #4]
 800131a:	210f      	movs	r1, #15
 800131c:	f04f 30ff 	mov.w	r0, #4294967295
 8001320:	f7ff ff90 	bl	8001244 <__NVIC_SetPriority>
 8001324:	4b05      	ldr	r3, [pc, #20]	@ (800133c <SysTick_Config+0x40>)
 8001326:	2200      	movs	r2, #0
 8001328:	609a      	str	r2, [r3, #8]
 800132a:	4b04      	ldr	r3, [pc, #16]	@ (800133c <SysTick_Config+0x40>)
 800132c:	2207      	movs	r2, #7
 800132e:	601a      	str	r2, [r3, #0]
 8001330:	2300      	movs	r3, #0
 8001332:	4618      	mov	r0, r3
 8001334:	3708      	adds	r7, #8
 8001336:	46bd      	mov	sp, r7
 8001338:	bd80      	pop	{r7, pc}
 800133a:	bf00      	nop
 800133c:	e000e010 	.word	0xe000e010

08001340 <HAL_NVIC_SetPriorityGrouping>:
 8001340:	b580      	push	{r7, lr}
 8001342:	b082      	sub	sp, #8
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
 8001348:	6878      	ldr	r0, [r7, #4]
 800134a:	f7ff ff2d 	bl	80011a8 <__NVIC_SetPriorityGrouping>
 800134e:	bf00      	nop
 8001350:	3708      	adds	r7, #8
 8001352:	46bd      	mov	sp, r7
 8001354:	bd80      	pop	{r7, pc}

08001356 <HAL_NVIC_SetPriority>:
 8001356:	b580      	push	{r7, lr}
 8001358:	b086      	sub	sp, #24
 800135a:	af00      	add	r7, sp, #0
 800135c:	4603      	mov	r3, r0
 800135e:	60b9      	str	r1, [r7, #8]
 8001360:	607a      	str	r2, [r7, #4]
 8001362:	73fb      	strb	r3, [r7, #15]
 8001364:	2300      	movs	r3, #0
 8001366:	617b      	str	r3, [r7, #20]
 8001368:	f7ff ff42 	bl	80011f0 <__NVIC_GetPriorityGrouping>
 800136c:	6178      	str	r0, [r7, #20]
 800136e:	687a      	ldr	r2, [r7, #4]
 8001370:	68b9      	ldr	r1, [r7, #8]
 8001372:	6978      	ldr	r0, [r7, #20]
 8001374:	f7ff ff90 	bl	8001298 <NVIC_EncodePriority>
 8001378:	4602      	mov	r2, r0
 800137a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800137e:	4611      	mov	r1, r2
 8001380:	4618      	mov	r0, r3
 8001382:	f7ff ff5f 	bl	8001244 <__NVIC_SetPriority>
 8001386:	bf00      	nop
 8001388:	3718      	adds	r7, #24
 800138a:	46bd      	mov	sp, r7
 800138c:	bd80      	pop	{r7, pc}

0800138e <HAL_NVIC_EnableIRQ>:
 800138e:	b580      	push	{r7, lr}
 8001390:	b082      	sub	sp, #8
 8001392:	af00      	add	r7, sp, #0
 8001394:	4603      	mov	r3, r0
 8001396:	71fb      	strb	r3, [r7, #7]
 8001398:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800139c:	4618      	mov	r0, r3
 800139e:	f7ff ff35 	bl	800120c <__NVIC_EnableIRQ>
 80013a2:	bf00      	nop
 80013a4:	3708      	adds	r7, #8
 80013a6:	46bd      	mov	sp, r7
 80013a8:	bd80      	pop	{r7, pc}

080013aa <HAL_SYSTICK_Config>:
 80013aa:	b580      	push	{r7, lr}
 80013ac:	b082      	sub	sp, #8
 80013ae:	af00      	add	r7, sp, #0
 80013b0:	6078      	str	r0, [r7, #4]
 80013b2:	6878      	ldr	r0, [r7, #4]
 80013b4:	f7ff ffa2 	bl	80012fc <SysTick_Config>
 80013b8:	4603      	mov	r3, r0
 80013ba:	4618      	mov	r0, r3
 80013bc:	3708      	adds	r7, #8
 80013be:	46bd      	mov	sp, r7
 80013c0:	bd80      	pop	{r7, pc}

080013c2 <HAL_DMA_Abort>:
 80013c2:	b480      	push	{r7}
 80013c4:	b085      	sub	sp, #20
 80013c6:	af00      	add	r7, sp, #0
 80013c8:	6078      	str	r0, [r7, #4]
 80013ca:	2300      	movs	r3, #0
 80013cc:	73fb      	strb	r3, [r7, #15]
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80013d4:	b2db      	uxtb	r3, r3
 80013d6:	2b02      	cmp	r3, #2
 80013d8:	d008      	beq.n	80013ec <HAL_DMA_Abort+0x2a>
 80013da:	687b      	ldr	r3, [r7, #4]
 80013dc:	2204      	movs	r2, #4
 80013de:	639a      	str	r2, [r3, #56]	@ 0x38
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	2200      	movs	r2, #0
 80013e4:	f883 2020 	strb.w	r2, [r3, #32]
 80013e8:	2301      	movs	r3, #1
 80013ea:	e020      	b.n	800142e <HAL_DMA_Abort+0x6c>
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	681a      	ldr	r2, [r3, #0]
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	f022 020e 	bic.w	r2, r2, #14
 80013fa:	601a      	str	r2, [r3, #0]
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	681a      	ldr	r2, [r3, #0]
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	681b      	ldr	r3, [r3, #0]
 8001406:	f022 0201 	bic.w	r2, r2, #1
 800140a:	601a      	str	r2, [r3, #0]
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001414:	2101      	movs	r1, #1
 8001416:	fa01 f202 	lsl.w	r2, r1, r2
 800141a:	605a      	str	r2, [r3, #4]
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	2201      	movs	r2, #1
 8001420:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	2200      	movs	r2, #0
 8001428:	f883 2020 	strb.w	r2, [r3, #32]
 800142c:	7bfb      	ldrb	r3, [r7, #15]
 800142e:	4618      	mov	r0, r3
 8001430:	3714      	adds	r7, #20
 8001432:	46bd      	mov	sp, r7
 8001434:	bc80      	pop	{r7}
 8001436:	4770      	bx	lr

08001438 <HAL_DMA_Abort_IT>:
 8001438:	b580      	push	{r7, lr}
 800143a:	b084      	sub	sp, #16
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	2300      	movs	r3, #0
 8001442:	73fb      	strb	r3, [r7, #15]
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800144a:	b2db      	uxtb	r3, r3
 800144c:	2b02      	cmp	r3, #2
 800144e:	d005      	beq.n	800145c <HAL_DMA_Abort_IT+0x24>
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	2204      	movs	r2, #4
 8001454:	639a      	str	r2, [r3, #56]	@ 0x38
 8001456:	2301      	movs	r3, #1
 8001458:	73fb      	strb	r3, [r7, #15]
 800145a:	e051      	b.n	8001500 <HAL_DMA_Abort_IT+0xc8>
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	681b      	ldr	r3, [r3, #0]
 8001460:	681a      	ldr	r2, [r3, #0]
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	f022 020e 	bic.w	r2, r2, #14
 800146a:	601a      	str	r2, [r3, #0]
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	681b      	ldr	r3, [r3, #0]
 8001470:	681a      	ldr	r2, [r3, #0]
 8001472:	687b      	ldr	r3, [r7, #4]
 8001474:	681b      	ldr	r3, [r3, #0]
 8001476:	f022 0201 	bic.w	r2, r2, #1
 800147a:	601a      	str	r2, [r3, #0]
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	4a22      	ldr	r2, [pc, #136]	@ (800150c <HAL_DMA_Abort_IT+0xd4>)
 8001482:	4293      	cmp	r3, r2
 8001484:	d029      	beq.n	80014da <HAL_DMA_Abort_IT+0xa2>
 8001486:	687b      	ldr	r3, [r7, #4]
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	4a21      	ldr	r2, [pc, #132]	@ (8001510 <HAL_DMA_Abort_IT+0xd8>)
 800148c:	4293      	cmp	r3, r2
 800148e:	d022      	beq.n	80014d6 <HAL_DMA_Abort_IT+0x9e>
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	4a1f      	ldr	r2, [pc, #124]	@ (8001514 <HAL_DMA_Abort_IT+0xdc>)
 8001496:	4293      	cmp	r3, r2
 8001498:	d01a      	beq.n	80014d0 <HAL_DMA_Abort_IT+0x98>
 800149a:	687b      	ldr	r3, [r7, #4]
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	4a1e      	ldr	r2, [pc, #120]	@ (8001518 <HAL_DMA_Abort_IT+0xe0>)
 80014a0:	4293      	cmp	r3, r2
 80014a2:	d012      	beq.n	80014ca <HAL_DMA_Abort_IT+0x92>
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	4a1c      	ldr	r2, [pc, #112]	@ (800151c <HAL_DMA_Abort_IT+0xe4>)
 80014aa:	4293      	cmp	r3, r2
 80014ac:	d00a      	beq.n	80014c4 <HAL_DMA_Abort_IT+0x8c>
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	681b      	ldr	r3, [r3, #0]
 80014b2:	4a1b      	ldr	r2, [pc, #108]	@ (8001520 <HAL_DMA_Abort_IT+0xe8>)
 80014b4:	4293      	cmp	r3, r2
 80014b6:	d102      	bne.n	80014be <HAL_DMA_Abort_IT+0x86>
 80014b8:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80014bc:	e00e      	b.n	80014dc <HAL_DMA_Abort_IT+0xa4>
 80014be:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80014c2:	e00b      	b.n	80014dc <HAL_DMA_Abort_IT+0xa4>
 80014c4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80014c8:	e008      	b.n	80014dc <HAL_DMA_Abort_IT+0xa4>
 80014ca:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014ce:	e005      	b.n	80014dc <HAL_DMA_Abort_IT+0xa4>
 80014d0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80014d4:	e002      	b.n	80014dc <HAL_DMA_Abort_IT+0xa4>
 80014d6:	2310      	movs	r3, #16
 80014d8:	e000      	b.n	80014dc <HAL_DMA_Abort_IT+0xa4>
 80014da:	2301      	movs	r3, #1
 80014dc:	4a11      	ldr	r2, [pc, #68]	@ (8001524 <HAL_DMA_Abort_IT+0xec>)
 80014de:	6053      	str	r3, [r2, #4]
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	2201      	movs	r2, #1
 80014e4:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	2200      	movs	r2, #0
 80014ec:	f883 2020 	strb.w	r2, [r3, #32]
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80014f4:	2b00      	cmp	r3, #0
 80014f6:	d003      	beq.n	8001500 <HAL_DMA_Abort_IT+0xc8>
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80014fc:	6878      	ldr	r0, [r7, #4]
 80014fe:	4798      	blx	r3
 8001500:	7bfb      	ldrb	r3, [r7, #15]
 8001502:	4618      	mov	r0, r3
 8001504:	3710      	adds	r7, #16
 8001506:	46bd      	mov	sp, r7
 8001508:	bd80      	pop	{r7, pc}
 800150a:	bf00      	nop
 800150c:	40020008 	.word	0x40020008
 8001510:	4002001c 	.word	0x4002001c
 8001514:	40020030 	.word	0x40020030
 8001518:	40020044 	.word	0x40020044
 800151c:	40020058 	.word	0x40020058
 8001520:	4002006c 	.word	0x4002006c
 8001524:	40020000 	.word	0x40020000

08001528 <HAL_GPIO_Init>:
 8001528:	b480      	push	{r7}
 800152a:	b08b      	sub	sp, #44	@ 0x2c
 800152c:	af00      	add	r7, sp, #0
 800152e:	6078      	str	r0, [r7, #4]
 8001530:	6039      	str	r1, [r7, #0]
 8001532:	2300      	movs	r3, #0
 8001534:	627b      	str	r3, [r7, #36]	@ 0x24
 8001536:	2300      	movs	r3, #0
 8001538:	623b      	str	r3, [r7, #32]
 800153a:	e169      	b.n	8001810 <HAL_GPIO_Init+0x2e8>
 800153c:	2201      	movs	r2, #1
 800153e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001540:	fa02 f303 	lsl.w	r3, r2, r3
 8001544:	61fb      	str	r3, [r7, #28]
 8001546:	683b      	ldr	r3, [r7, #0]
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	69fa      	ldr	r2, [r7, #28]
 800154c:	4013      	ands	r3, r2
 800154e:	61bb      	str	r3, [r7, #24]
 8001550:	69ba      	ldr	r2, [r7, #24]
 8001552:	69fb      	ldr	r3, [r7, #28]
 8001554:	429a      	cmp	r2, r3
 8001556:	f040 8158 	bne.w	800180a <HAL_GPIO_Init+0x2e2>
 800155a:	683b      	ldr	r3, [r7, #0]
 800155c:	685b      	ldr	r3, [r3, #4]
 800155e:	4a9a      	ldr	r2, [pc, #616]	@ (80017c8 <HAL_GPIO_Init+0x2a0>)
 8001560:	4293      	cmp	r3, r2
 8001562:	d05e      	beq.n	8001622 <HAL_GPIO_Init+0xfa>
 8001564:	4a98      	ldr	r2, [pc, #608]	@ (80017c8 <HAL_GPIO_Init+0x2a0>)
 8001566:	4293      	cmp	r3, r2
 8001568:	d875      	bhi.n	8001656 <HAL_GPIO_Init+0x12e>
 800156a:	4a98      	ldr	r2, [pc, #608]	@ (80017cc <HAL_GPIO_Init+0x2a4>)
 800156c:	4293      	cmp	r3, r2
 800156e:	d058      	beq.n	8001622 <HAL_GPIO_Init+0xfa>
 8001570:	4a96      	ldr	r2, [pc, #600]	@ (80017cc <HAL_GPIO_Init+0x2a4>)
 8001572:	4293      	cmp	r3, r2
 8001574:	d86f      	bhi.n	8001656 <HAL_GPIO_Init+0x12e>
 8001576:	4a96      	ldr	r2, [pc, #600]	@ (80017d0 <HAL_GPIO_Init+0x2a8>)
 8001578:	4293      	cmp	r3, r2
 800157a:	d052      	beq.n	8001622 <HAL_GPIO_Init+0xfa>
 800157c:	4a94      	ldr	r2, [pc, #592]	@ (80017d0 <HAL_GPIO_Init+0x2a8>)
 800157e:	4293      	cmp	r3, r2
 8001580:	d869      	bhi.n	8001656 <HAL_GPIO_Init+0x12e>
 8001582:	4a94      	ldr	r2, [pc, #592]	@ (80017d4 <HAL_GPIO_Init+0x2ac>)
 8001584:	4293      	cmp	r3, r2
 8001586:	d04c      	beq.n	8001622 <HAL_GPIO_Init+0xfa>
 8001588:	4a92      	ldr	r2, [pc, #584]	@ (80017d4 <HAL_GPIO_Init+0x2ac>)
 800158a:	4293      	cmp	r3, r2
 800158c:	d863      	bhi.n	8001656 <HAL_GPIO_Init+0x12e>
 800158e:	4a92      	ldr	r2, [pc, #584]	@ (80017d8 <HAL_GPIO_Init+0x2b0>)
 8001590:	4293      	cmp	r3, r2
 8001592:	d046      	beq.n	8001622 <HAL_GPIO_Init+0xfa>
 8001594:	4a90      	ldr	r2, [pc, #576]	@ (80017d8 <HAL_GPIO_Init+0x2b0>)
 8001596:	4293      	cmp	r3, r2
 8001598:	d85d      	bhi.n	8001656 <HAL_GPIO_Init+0x12e>
 800159a:	2b12      	cmp	r3, #18
 800159c:	d82a      	bhi.n	80015f4 <HAL_GPIO_Init+0xcc>
 800159e:	2b12      	cmp	r3, #18
 80015a0:	d859      	bhi.n	8001656 <HAL_GPIO_Init+0x12e>
 80015a2:	a201      	add	r2, pc, #4	@ (adr r2, 80015a8 <HAL_GPIO_Init+0x80>)
 80015a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80015a8:	08001623 	.word	0x08001623
 80015ac:	080015fd 	.word	0x080015fd
 80015b0:	0800160f 	.word	0x0800160f
 80015b4:	08001651 	.word	0x08001651
 80015b8:	08001657 	.word	0x08001657
 80015bc:	08001657 	.word	0x08001657
 80015c0:	08001657 	.word	0x08001657
 80015c4:	08001657 	.word	0x08001657
 80015c8:	08001657 	.word	0x08001657
 80015cc:	08001657 	.word	0x08001657
 80015d0:	08001657 	.word	0x08001657
 80015d4:	08001657 	.word	0x08001657
 80015d8:	08001657 	.word	0x08001657
 80015dc:	08001657 	.word	0x08001657
 80015e0:	08001657 	.word	0x08001657
 80015e4:	08001657 	.word	0x08001657
 80015e8:	08001657 	.word	0x08001657
 80015ec:	08001605 	.word	0x08001605
 80015f0:	08001619 	.word	0x08001619
 80015f4:	4a79      	ldr	r2, [pc, #484]	@ (80017dc <HAL_GPIO_Init+0x2b4>)
 80015f6:	4293      	cmp	r3, r2
 80015f8:	d013      	beq.n	8001622 <HAL_GPIO_Init+0xfa>
 80015fa:	e02c      	b.n	8001656 <HAL_GPIO_Init+0x12e>
 80015fc:	683b      	ldr	r3, [r7, #0]
 80015fe:	68db      	ldr	r3, [r3, #12]
 8001600:	623b      	str	r3, [r7, #32]
 8001602:	e029      	b.n	8001658 <HAL_GPIO_Init+0x130>
 8001604:	683b      	ldr	r3, [r7, #0]
 8001606:	68db      	ldr	r3, [r3, #12]
 8001608:	3304      	adds	r3, #4
 800160a:	623b      	str	r3, [r7, #32]
 800160c:	e024      	b.n	8001658 <HAL_GPIO_Init+0x130>
 800160e:	683b      	ldr	r3, [r7, #0]
 8001610:	68db      	ldr	r3, [r3, #12]
 8001612:	3308      	adds	r3, #8
 8001614:	623b      	str	r3, [r7, #32]
 8001616:	e01f      	b.n	8001658 <HAL_GPIO_Init+0x130>
 8001618:	683b      	ldr	r3, [r7, #0]
 800161a:	68db      	ldr	r3, [r3, #12]
 800161c:	330c      	adds	r3, #12
 800161e:	623b      	str	r3, [r7, #32]
 8001620:	e01a      	b.n	8001658 <HAL_GPIO_Init+0x130>
 8001622:	683b      	ldr	r3, [r7, #0]
 8001624:	689b      	ldr	r3, [r3, #8]
 8001626:	2b00      	cmp	r3, #0
 8001628:	d102      	bne.n	8001630 <HAL_GPIO_Init+0x108>
 800162a:	2304      	movs	r3, #4
 800162c:	623b      	str	r3, [r7, #32]
 800162e:	e013      	b.n	8001658 <HAL_GPIO_Init+0x130>
 8001630:	683b      	ldr	r3, [r7, #0]
 8001632:	689b      	ldr	r3, [r3, #8]
 8001634:	2b01      	cmp	r3, #1
 8001636:	d105      	bne.n	8001644 <HAL_GPIO_Init+0x11c>
 8001638:	2308      	movs	r3, #8
 800163a:	623b      	str	r3, [r7, #32]
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	69fa      	ldr	r2, [r7, #28]
 8001640:	611a      	str	r2, [r3, #16]
 8001642:	e009      	b.n	8001658 <HAL_GPIO_Init+0x130>
 8001644:	2308      	movs	r3, #8
 8001646:	623b      	str	r3, [r7, #32]
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	69fa      	ldr	r2, [r7, #28]
 800164c:	615a      	str	r2, [r3, #20]
 800164e:	e003      	b.n	8001658 <HAL_GPIO_Init+0x130>
 8001650:	2300      	movs	r3, #0
 8001652:	623b      	str	r3, [r7, #32]
 8001654:	e000      	b.n	8001658 <HAL_GPIO_Init+0x130>
 8001656:	bf00      	nop
 8001658:	69bb      	ldr	r3, [r7, #24]
 800165a:	2bff      	cmp	r3, #255	@ 0xff
 800165c:	d801      	bhi.n	8001662 <HAL_GPIO_Init+0x13a>
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	e001      	b.n	8001666 <HAL_GPIO_Init+0x13e>
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	3304      	adds	r3, #4
 8001666:	617b      	str	r3, [r7, #20]
 8001668:	69bb      	ldr	r3, [r7, #24]
 800166a:	2bff      	cmp	r3, #255	@ 0xff
 800166c:	d802      	bhi.n	8001674 <HAL_GPIO_Init+0x14c>
 800166e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001670:	009b      	lsls	r3, r3, #2
 8001672:	e002      	b.n	800167a <HAL_GPIO_Init+0x152>
 8001674:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001676:	3b08      	subs	r3, #8
 8001678:	009b      	lsls	r3, r3, #2
 800167a:	613b      	str	r3, [r7, #16]
 800167c:	697b      	ldr	r3, [r7, #20]
 800167e:	681a      	ldr	r2, [r3, #0]
 8001680:	210f      	movs	r1, #15
 8001682:	693b      	ldr	r3, [r7, #16]
 8001684:	fa01 f303 	lsl.w	r3, r1, r3
 8001688:	43db      	mvns	r3, r3
 800168a:	401a      	ands	r2, r3
 800168c:	6a39      	ldr	r1, [r7, #32]
 800168e:	693b      	ldr	r3, [r7, #16]
 8001690:	fa01 f303 	lsl.w	r3, r1, r3
 8001694:	431a      	orrs	r2, r3
 8001696:	697b      	ldr	r3, [r7, #20]
 8001698:	601a      	str	r2, [r3, #0]
 800169a:	683b      	ldr	r3, [r7, #0]
 800169c:	685b      	ldr	r3, [r3, #4]
 800169e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80016a2:	2b00      	cmp	r3, #0
 80016a4:	f000 80b1 	beq.w	800180a <HAL_GPIO_Init+0x2e2>
 80016a8:	4b4d      	ldr	r3, [pc, #308]	@ (80017e0 <HAL_GPIO_Init+0x2b8>)
 80016aa:	699b      	ldr	r3, [r3, #24]
 80016ac:	4a4c      	ldr	r2, [pc, #304]	@ (80017e0 <HAL_GPIO_Init+0x2b8>)
 80016ae:	f043 0301 	orr.w	r3, r3, #1
 80016b2:	6193      	str	r3, [r2, #24]
 80016b4:	4b4a      	ldr	r3, [pc, #296]	@ (80017e0 <HAL_GPIO_Init+0x2b8>)
 80016b6:	699b      	ldr	r3, [r3, #24]
 80016b8:	f003 0301 	and.w	r3, r3, #1
 80016bc:	60bb      	str	r3, [r7, #8]
 80016be:	68bb      	ldr	r3, [r7, #8]
 80016c0:	4a48      	ldr	r2, [pc, #288]	@ (80017e4 <HAL_GPIO_Init+0x2bc>)
 80016c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016c4:	089b      	lsrs	r3, r3, #2
 80016c6:	3302      	adds	r3, #2
 80016c8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80016cc:	60fb      	str	r3, [r7, #12]
 80016ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016d0:	f003 0303 	and.w	r3, r3, #3
 80016d4:	009b      	lsls	r3, r3, #2
 80016d6:	220f      	movs	r2, #15
 80016d8:	fa02 f303 	lsl.w	r3, r2, r3
 80016dc:	43db      	mvns	r3, r3
 80016de:	68fa      	ldr	r2, [r7, #12]
 80016e0:	4013      	ands	r3, r2
 80016e2:	60fb      	str	r3, [r7, #12]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	4a40      	ldr	r2, [pc, #256]	@ (80017e8 <HAL_GPIO_Init+0x2c0>)
 80016e8:	4293      	cmp	r3, r2
 80016ea:	d013      	beq.n	8001714 <HAL_GPIO_Init+0x1ec>
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	4a3f      	ldr	r2, [pc, #252]	@ (80017ec <HAL_GPIO_Init+0x2c4>)
 80016f0:	4293      	cmp	r3, r2
 80016f2:	d00d      	beq.n	8001710 <HAL_GPIO_Init+0x1e8>
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	4a3e      	ldr	r2, [pc, #248]	@ (80017f0 <HAL_GPIO_Init+0x2c8>)
 80016f8:	4293      	cmp	r3, r2
 80016fa:	d007      	beq.n	800170c <HAL_GPIO_Init+0x1e4>
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	4a3d      	ldr	r2, [pc, #244]	@ (80017f4 <HAL_GPIO_Init+0x2cc>)
 8001700:	4293      	cmp	r3, r2
 8001702:	d101      	bne.n	8001708 <HAL_GPIO_Init+0x1e0>
 8001704:	2303      	movs	r3, #3
 8001706:	e006      	b.n	8001716 <HAL_GPIO_Init+0x1ee>
 8001708:	2304      	movs	r3, #4
 800170a:	e004      	b.n	8001716 <HAL_GPIO_Init+0x1ee>
 800170c:	2302      	movs	r3, #2
 800170e:	e002      	b.n	8001716 <HAL_GPIO_Init+0x1ee>
 8001710:	2301      	movs	r3, #1
 8001712:	e000      	b.n	8001716 <HAL_GPIO_Init+0x1ee>
 8001714:	2300      	movs	r3, #0
 8001716:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001718:	f002 0203 	and.w	r2, r2, #3
 800171c:	0092      	lsls	r2, r2, #2
 800171e:	4093      	lsls	r3, r2
 8001720:	68fa      	ldr	r2, [r7, #12]
 8001722:	4313      	orrs	r3, r2
 8001724:	60fb      	str	r3, [r7, #12]
 8001726:	492f      	ldr	r1, [pc, #188]	@ (80017e4 <HAL_GPIO_Init+0x2bc>)
 8001728:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800172a:	089b      	lsrs	r3, r3, #2
 800172c:	3302      	adds	r3, #2
 800172e:	68fa      	ldr	r2, [r7, #12]
 8001730:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001734:	683b      	ldr	r3, [r7, #0]
 8001736:	685b      	ldr	r3, [r3, #4]
 8001738:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800173c:	2b00      	cmp	r3, #0
 800173e:	d006      	beq.n	800174e <HAL_GPIO_Init+0x226>
 8001740:	4b2d      	ldr	r3, [pc, #180]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001742:	689a      	ldr	r2, [r3, #8]
 8001744:	492c      	ldr	r1, [pc, #176]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001746:	69bb      	ldr	r3, [r7, #24]
 8001748:	4313      	orrs	r3, r2
 800174a:	608b      	str	r3, [r1, #8]
 800174c:	e006      	b.n	800175c <HAL_GPIO_Init+0x234>
 800174e:	4b2a      	ldr	r3, [pc, #168]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001750:	689a      	ldr	r2, [r3, #8]
 8001752:	69bb      	ldr	r3, [r7, #24]
 8001754:	43db      	mvns	r3, r3
 8001756:	4928      	ldr	r1, [pc, #160]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001758:	4013      	ands	r3, r2
 800175a:	608b      	str	r3, [r1, #8]
 800175c:	683b      	ldr	r3, [r7, #0]
 800175e:	685b      	ldr	r3, [r3, #4]
 8001760:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001764:	2b00      	cmp	r3, #0
 8001766:	d006      	beq.n	8001776 <HAL_GPIO_Init+0x24e>
 8001768:	4b23      	ldr	r3, [pc, #140]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 800176a:	68da      	ldr	r2, [r3, #12]
 800176c:	4922      	ldr	r1, [pc, #136]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 800176e:	69bb      	ldr	r3, [r7, #24]
 8001770:	4313      	orrs	r3, r2
 8001772:	60cb      	str	r3, [r1, #12]
 8001774:	e006      	b.n	8001784 <HAL_GPIO_Init+0x25c>
 8001776:	4b20      	ldr	r3, [pc, #128]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001778:	68da      	ldr	r2, [r3, #12]
 800177a:	69bb      	ldr	r3, [r7, #24]
 800177c:	43db      	mvns	r3, r3
 800177e:	491e      	ldr	r1, [pc, #120]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001780:	4013      	ands	r3, r2
 8001782:	60cb      	str	r3, [r1, #12]
 8001784:	683b      	ldr	r3, [r7, #0]
 8001786:	685b      	ldr	r3, [r3, #4]
 8001788:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800178c:	2b00      	cmp	r3, #0
 800178e:	d006      	beq.n	800179e <HAL_GPIO_Init+0x276>
 8001790:	4b19      	ldr	r3, [pc, #100]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001792:	685a      	ldr	r2, [r3, #4]
 8001794:	4918      	ldr	r1, [pc, #96]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 8001796:	69bb      	ldr	r3, [r7, #24]
 8001798:	4313      	orrs	r3, r2
 800179a:	604b      	str	r3, [r1, #4]
 800179c:	e006      	b.n	80017ac <HAL_GPIO_Init+0x284>
 800179e:	4b16      	ldr	r3, [pc, #88]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 80017a0:	685a      	ldr	r2, [r3, #4]
 80017a2:	69bb      	ldr	r3, [r7, #24]
 80017a4:	43db      	mvns	r3, r3
 80017a6:	4914      	ldr	r1, [pc, #80]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 80017a8:	4013      	ands	r3, r2
 80017aa:	604b      	str	r3, [r1, #4]
 80017ac:	683b      	ldr	r3, [r7, #0]
 80017ae:	685b      	ldr	r3, [r3, #4]
 80017b0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80017b4:	2b00      	cmp	r3, #0
 80017b6:	d021      	beq.n	80017fc <HAL_GPIO_Init+0x2d4>
 80017b8:	4b0f      	ldr	r3, [pc, #60]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 80017ba:	681a      	ldr	r2, [r3, #0]
 80017bc:	490e      	ldr	r1, [pc, #56]	@ (80017f8 <HAL_GPIO_Init+0x2d0>)
 80017be:	69bb      	ldr	r3, [r7, #24]
 80017c0:	4313      	orrs	r3, r2
 80017c2:	600b      	str	r3, [r1, #0]
 80017c4:	e021      	b.n	800180a <HAL_GPIO_Init+0x2e2>
 80017c6:	bf00      	nop
 80017c8:	10320000 	.word	0x10320000
 80017cc:	10310000 	.word	0x10310000
 80017d0:	10220000 	.word	0x10220000
 80017d4:	10210000 	.word	0x10210000
 80017d8:	10120000 	.word	0x10120000
 80017dc:	10110000 	.word	0x10110000
 80017e0:	40021000 	.word	0x40021000
 80017e4:	40010000 	.word	0x40010000
 80017e8:	40010800 	.word	0x40010800
 80017ec:	40010c00 	.word	0x40010c00
 80017f0:	40011000 	.word	0x40011000
 80017f4:	40011400 	.word	0x40011400
 80017f8:	40010400 	.word	0x40010400
 80017fc:	4b0b      	ldr	r3, [pc, #44]	@ (800182c <HAL_GPIO_Init+0x304>)
 80017fe:	681a      	ldr	r2, [r3, #0]
 8001800:	69bb      	ldr	r3, [r7, #24]
 8001802:	43db      	mvns	r3, r3
 8001804:	4909      	ldr	r1, [pc, #36]	@ (800182c <HAL_GPIO_Init+0x304>)
 8001806:	4013      	ands	r3, r2
 8001808:	600b      	str	r3, [r1, #0]
 800180a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800180c:	3301      	adds	r3, #1
 800180e:	627b      	str	r3, [r7, #36]	@ 0x24
 8001810:	683b      	ldr	r3, [r7, #0]
 8001812:	681a      	ldr	r2, [r3, #0]
 8001814:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001816:	fa22 f303 	lsr.w	r3, r2, r3
 800181a:	2b00      	cmp	r3, #0
 800181c:	f47f ae8e 	bne.w	800153c <HAL_GPIO_Init+0x14>
 8001820:	bf00      	nop
 8001822:	bf00      	nop
 8001824:	372c      	adds	r7, #44	@ 0x2c
 8001826:	46bd      	mov	sp, r7
 8001828:	bc80      	pop	{r7}
 800182a:	4770      	bx	lr
 800182c:	40010400 	.word	0x40010400

08001830 <HAL_GPIO_WritePin>:
 8001830:	b480      	push	{r7}
 8001832:	b083      	sub	sp, #12
 8001834:	af00      	add	r7, sp, #0
 8001836:	6078      	str	r0, [r7, #4]
 8001838:	460b      	mov	r3, r1
 800183a:	807b      	strh	r3, [r7, #2]
 800183c:	4613      	mov	r3, r2
 800183e:	707b      	strb	r3, [r7, #1]
 8001840:	787b      	ldrb	r3, [r7, #1]
 8001842:	2b00      	cmp	r3, #0
 8001844:	d003      	beq.n	800184e <HAL_GPIO_WritePin+0x1e>
 8001846:	887a      	ldrh	r2, [r7, #2]
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	611a      	str	r2, [r3, #16]
 800184c:	e003      	b.n	8001856 <HAL_GPIO_WritePin+0x26>
 800184e:	887b      	ldrh	r3, [r7, #2]
 8001850:	041a      	lsls	r2, r3, #16
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	611a      	str	r2, [r3, #16]
 8001856:	bf00      	nop
 8001858:	370c      	adds	r7, #12
 800185a:	46bd      	mov	sp, r7
 800185c:	bc80      	pop	{r7}
 800185e:	4770      	bx	lr

08001860 <HAL_GPIO_EXTI_IRQHandler>:
 8001860:	b580      	push	{r7, lr}
 8001862:	b082      	sub	sp, #8
 8001864:	af00      	add	r7, sp, #0
 8001866:	4603      	mov	r3, r0
 8001868:	80fb      	strh	r3, [r7, #6]
 800186a:	4b08      	ldr	r3, [pc, #32]	@ (800188c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800186c:	695a      	ldr	r2, [r3, #20]
 800186e:	88fb      	ldrh	r3, [r7, #6]
 8001870:	4013      	ands	r3, r2
 8001872:	2b00      	cmp	r3, #0
 8001874:	d006      	beq.n	8001884 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001876:	4a05      	ldr	r2, [pc, #20]	@ (800188c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001878:	88fb      	ldrh	r3, [r7, #6]
 800187a:	6153      	str	r3, [r2, #20]
 800187c:	88fb      	ldrh	r3, [r7, #6]
 800187e:	4618      	mov	r0, r3
 8001880:	f000 f806 	bl	8001890 <HAL_GPIO_EXTI_Callback>
 8001884:	bf00      	nop
 8001886:	3708      	adds	r7, #8
 8001888:	46bd      	mov	sp, r7
 800188a:	bd80      	pop	{r7, pc}
 800188c:	40010400 	.word	0x40010400

08001890 <HAL_GPIO_EXTI_Callback>:
 8001890:	b480      	push	{r7}
 8001892:	b083      	sub	sp, #12
 8001894:	af00      	add	r7, sp, #0
 8001896:	4603      	mov	r3, r0
 8001898:	80fb      	strh	r3, [r7, #6]
 800189a:	bf00      	nop
 800189c:	370c      	adds	r7, #12
 800189e:	46bd      	mov	sp, r7
 80018a0:	bc80      	pop	{r7}
 80018a2:	4770      	bx	lr

080018a4 <HAL_RCC_OscConfig>:
 80018a4:	b580      	push	{r7, lr}
 80018a6:	b086      	sub	sp, #24
 80018a8:	af00      	add	r7, sp, #0
 80018aa:	6078      	str	r0, [r7, #4]
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d101      	bne.n	80018b6 <HAL_RCC_OscConfig+0x12>
 80018b2:	2301      	movs	r3, #1
 80018b4:	e272      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	f003 0301 	and.w	r3, r3, #1
 80018be:	2b00      	cmp	r3, #0
 80018c0:	f000 8087 	beq.w	80019d2 <HAL_RCC_OscConfig+0x12e>
 80018c4:	4b92      	ldr	r3, [pc, #584]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80018c6:	685b      	ldr	r3, [r3, #4]
 80018c8:	f003 030c 	and.w	r3, r3, #12
 80018cc:	2b04      	cmp	r3, #4
 80018ce:	d00c      	beq.n	80018ea <HAL_RCC_OscConfig+0x46>
 80018d0:	4b8f      	ldr	r3, [pc, #572]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80018d2:	685b      	ldr	r3, [r3, #4]
 80018d4:	f003 030c 	and.w	r3, r3, #12
 80018d8:	2b08      	cmp	r3, #8
 80018da:	d112      	bne.n	8001902 <HAL_RCC_OscConfig+0x5e>
 80018dc:	4b8c      	ldr	r3, [pc, #560]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80018de:	685b      	ldr	r3, [r3, #4]
 80018e0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80018e4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80018e8:	d10b      	bne.n	8001902 <HAL_RCC_OscConfig+0x5e>
 80018ea:	4b89      	ldr	r3, [pc, #548]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	d06c      	beq.n	80019d0 <HAL_RCC_OscConfig+0x12c>
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	685b      	ldr	r3, [r3, #4]
 80018fa:	2b00      	cmp	r3, #0
 80018fc:	d168      	bne.n	80019d0 <HAL_RCC_OscConfig+0x12c>
 80018fe:	2301      	movs	r3, #1
 8001900:	e24c      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	685b      	ldr	r3, [r3, #4]
 8001906:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800190a:	d106      	bne.n	800191a <HAL_RCC_OscConfig+0x76>
 800190c:	4b80      	ldr	r3, [pc, #512]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	4a7f      	ldr	r2, [pc, #508]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001912:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001916:	6013      	str	r3, [r2, #0]
 8001918:	e02e      	b.n	8001978 <HAL_RCC_OscConfig+0xd4>
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	685b      	ldr	r3, [r3, #4]
 800191e:	2b00      	cmp	r3, #0
 8001920:	d10c      	bne.n	800193c <HAL_RCC_OscConfig+0x98>
 8001922:	4b7b      	ldr	r3, [pc, #492]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	4a7a      	ldr	r2, [pc, #488]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001928:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800192c:	6013      	str	r3, [r2, #0]
 800192e:	4b78      	ldr	r3, [pc, #480]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	4a77      	ldr	r2, [pc, #476]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001934:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001938:	6013      	str	r3, [r2, #0]
 800193a:	e01d      	b.n	8001978 <HAL_RCC_OscConfig+0xd4>
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	685b      	ldr	r3, [r3, #4]
 8001940:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001944:	d10c      	bne.n	8001960 <HAL_RCC_OscConfig+0xbc>
 8001946:	4b72      	ldr	r3, [pc, #456]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	4a71      	ldr	r2, [pc, #452]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 800194c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001950:	6013      	str	r3, [r2, #0]
 8001952:	4b6f      	ldr	r3, [pc, #444]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	4a6e      	ldr	r2, [pc, #440]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001958:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800195c:	6013      	str	r3, [r2, #0]
 800195e:	e00b      	b.n	8001978 <HAL_RCC_OscConfig+0xd4>
 8001960:	4b6b      	ldr	r3, [pc, #428]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	4a6a      	ldr	r2, [pc, #424]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001966:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800196a:	6013      	str	r3, [r2, #0]
 800196c:	4b68      	ldr	r3, [pc, #416]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	4a67      	ldr	r2, [pc, #412]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001972:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001976:	6013      	str	r3, [r2, #0]
 8001978:	687b      	ldr	r3, [r7, #4]
 800197a:	685b      	ldr	r3, [r3, #4]
 800197c:	2b00      	cmp	r3, #0
 800197e:	d013      	beq.n	80019a8 <HAL_RCC_OscConfig+0x104>
 8001980:	f7ff fc08 	bl	8001194 <HAL_GetTick>
 8001984:	6138      	str	r0, [r7, #16]
 8001986:	e008      	b.n	800199a <HAL_RCC_OscConfig+0xf6>
 8001988:	f7ff fc04 	bl	8001194 <HAL_GetTick>
 800198c:	4602      	mov	r2, r0
 800198e:	693b      	ldr	r3, [r7, #16]
 8001990:	1ad3      	subs	r3, r2, r3
 8001992:	2b64      	cmp	r3, #100	@ 0x64
 8001994:	d901      	bls.n	800199a <HAL_RCC_OscConfig+0xf6>
 8001996:	2303      	movs	r3, #3
 8001998:	e200      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 800199a:	4b5d      	ldr	r3, [pc, #372]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80019a2:	2b00      	cmp	r3, #0
 80019a4:	d0f0      	beq.n	8001988 <HAL_RCC_OscConfig+0xe4>
 80019a6:	e014      	b.n	80019d2 <HAL_RCC_OscConfig+0x12e>
 80019a8:	f7ff fbf4 	bl	8001194 <HAL_GetTick>
 80019ac:	6138      	str	r0, [r7, #16]
 80019ae:	e008      	b.n	80019c2 <HAL_RCC_OscConfig+0x11e>
 80019b0:	f7ff fbf0 	bl	8001194 <HAL_GetTick>
 80019b4:	4602      	mov	r2, r0
 80019b6:	693b      	ldr	r3, [r7, #16]
 80019b8:	1ad3      	subs	r3, r2, r3
 80019ba:	2b64      	cmp	r3, #100	@ 0x64
 80019bc:	d901      	bls.n	80019c2 <HAL_RCC_OscConfig+0x11e>
 80019be:	2303      	movs	r3, #3
 80019c0:	e1ec      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 80019c2:	4b53      	ldr	r3, [pc, #332]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80019c4:	681b      	ldr	r3, [r3, #0]
 80019c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d1f0      	bne.n	80019b0 <HAL_RCC_OscConfig+0x10c>
 80019ce:	e000      	b.n	80019d2 <HAL_RCC_OscConfig+0x12e>
 80019d0:	bf00      	nop
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	681b      	ldr	r3, [r3, #0]
 80019d6:	f003 0302 	and.w	r3, r3, #2
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d063      	beq.n	8001aa6 <HAL_RCC_OscConfig+0x202>
 80019de:	4b4c      	ldr	r3, [pc, #304]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80019e0:	685b      	ldr	r3, [r3, #4]
 80019e2:	f003 030c 	and.w	r3, r3, #12
 80019e6:	2b00      	cmp	r3, #0
 80019e8:	d00b      	beq.n	8001a02 <HAL_RCC_OscConfig+0x15e>
 80019ea:	4b49      	ldr	r3, [pc, #292]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80019ec:	685b      	ldr	r3, [r3, #4]
 80019ee:	f003 030c 	and.w	r3, r3, #12
 80019f2:	2b08      	cmp	r3, #8
 80019f4:	d11c      	bne.n	8001a30 <HAL_RCC_OscConfig+0x18c>
 80019f6:	4b46      	ldr	r3, [pc, #280]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 80019f8:	685b      	ldr	r3, [r3, #4]
 80019fa:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80019fe:	2b00      	cmp	r3, #0
 8001a00:	d116      	bne.n	8001a30 <HAL_RCC_OscConfig+0x18c>
 8001a02:	4b43      	ldr	r3, [pc, #268]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001a04:	681b      	ldr	r3, [r3, #0]
 8001a06:	f003 0302 	and.w	r3, r3, #2
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	d005      	beq.n	8001a1a <HAL_RCC_OscConfig+0x176>
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	691b      	ldr	r3, [r3, #16]
 8001a12:	2b01      	cmp	r3, #1
 8001a14:	d001      	beq.n	8001a1a <HAL_RCC_OscConfig+0x176>
 8001a16:	2301      	movs	r3, #1
 8001a18:	e1c0      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001a1a:	4b3d      	ldr	r3, [pc, #244]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001a1c:	681b      	ldr	r3, [r3, #0]
 8001a1e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	695b      	ldr	r3, [r3, #20]
 8001a26:	00db      	lsls	r3, r3, #3
 8001a28:	4939      	ldr	r1, [pc, #228]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001a2a:	4313      	orrs	r3, r2
 8001a2c:	600b      	str	r3, [r1, #0]
 8001a2e:	e03a      	b.n	8001aa6 <HAL_RCC_OscConfig+0x202>
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	691b      	ldr	r3, [r3, #16]
 8001a34:	2b00      	cmp	r3, #0
 8001a36:	d020      	beq.n	8001a7a <HAL_RCC_OscConfig+0x1d6>
 8001a38:	4b36      	ldr	r3, [pc, #216]	@ (8001b14 <HAL_RCC_OscConfig+0x270>)
 8001a3a:	2201      	movs	r2, #1
 8001a3c:	601a      	str	r2, [r3, #0]
 8001a3e:	f7ff fba9 	bl	8001194 <HAL_GetTick>
 8001a42:	6138      	str	r0, [r7, #16]
 8001a44:	e008      	b.n	8001a58 <HAL_RCC_OscConfig+0x1b4>
 8001a46:	f7ff fba5 	bl	8001194 <HAL_GetTick>
 8001a4a:	4602      	mov	r2, r0
 8001a4c:	693b      	ldr	r3, [r7, #16]
 8001a4e:	1ad3      	subs	r3, r2, r3
 8001a50:	2b02      	cmp	r3, #2
 8001a52:	d901      	bls.n	8001a58 <HAL_RCC_OscConfig+0x1b4>
 8001a54:	2303      	movs	r3, #3
 8001a56:	e1a1      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001a58:	4b2d      	ldr	r3, [pc, #180]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	f003 0302 	and.w	r3, r3, #2
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d0f0      	beq.n	8001a46 <HAL_RCC_OscConfig+0x1a2>
 8001a64:	4b2a      	ldr	r3, [pc, #168]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	695b      	ldr	r3, [r3, #20]
 8001a70:	00db      	lsls	r3, r3, #3
 8001a72:	4927      	ldr	r1, [pc, #156]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001a74:	4313      	orrs	r3, r2
 8001a76:	600b      	str	r3, [r1, #0]
 8001a78:	e015      	b.n	8001aa6 <HAL_RCC_OscConfig+0x202>
 8001a7a:	4b26      	ldr	r3, [pc, #152]	@ (8001b14 <HAL_RCC_OscConfig+0x270>)
 8001a7c:	2200      	movs	r2, #0
 8001a7e:	601a      	str	r2, [r3, #0]
 8001a80:	f7ff fb88 	bl	8001194 <HAL_GetTick>
 8001a84:	6138      	str	r0, [r7, #16]
 8001a86:	e008      	b.n	8001a9a <HAL_RCC_OscConfig+0x1f6>
 8001a88:	f7ff fb84 	bl	8001194 <HAL_GetTick>
 8001a8c:	4602      	mov	r2, r0
 8001a8e:	693b      	ldr	r3, [r7, #16]
 8001a90:	1ad3      	subs	r3, r2, r3
 8001a92:	2b02      	cmp	r3, #2
 8001a94:	d901      	bls.n	8001a9a <HAL_RCC_OscConfig+0x1f6>
 8001a96:	2303      	movs	r3, #3
 8001a98:	e180      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001a9a:	4b1d      	ldr	r3, [pc, #116]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	f003 0302 	and.w	r3, r3, #2
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d1f0      	bne.n	8001a88 <HAL_RCC_OscConfig+0x1e4>
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	f003 0308 	and.w	r3, r3, #8
 8001aae:	2b00      	cmp	r3, #0
 8001ab0:	d03a      	beq.n	8001b28 <HAL_RCC_OscConfig+0x284>
 8001ab2:	687b      	ldr	r3, [r7, #4]
 8001ab4:	699b      	ldr	r3, [r3, #24]
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d019      	beq.n	8001aee <HAL_RCC_OscConfig+0x24a>
 8001aba:	4b17      	ldr	r3, [pc, #92]	@ (8001b18 <HAL_RCC_OscConfig+0x274>)
 8001abc:	2201      	movs	r2, #1
 8001abe:	601a      	str	r2, [r3, #0]
 8001ac0:	f7ff fb68 	bl	8001194 <HAL_GetTick>
 8001ac4:	6138      	str	r0, [r7, #16]
 8001ac6:	e008      	b.n	8001ada <HAL_RCC_OscConfig+0x236>
 8001ac8:	f7ff fb64 	bl	8001194 <HAL_GetTick>
 8001acc:	4602      	mov	r2, r0
 8001ace:	693b      	ldr	r3, [r7, #16]
 8001ad0:	1ad3      	subs	r3, r2, r3
 8001ad2:	2b02      	cmp	r3, #2
 8001ad4:	d901      	bls.n	8001ada <HAL_RCC_OscConfig+0x236>
 8001ad6:	2303      	movs	r3, #3
 8001ad8:	e160      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001ada:	4b0d      	ldr	r3, [pc, #52]	@ (8001b10 <HAL_RCC_OscConfig+0x26c>)
 8001adc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001ade:	f003 0302 	and.w	r3, r3, #2
 8001ae2:	2b00      	cmp	r3, #0
 8001ae4:	d0f0      	beq.n	8001ac8 <HAL_RCC_OscConfig+0x224>
 8001ae6:	2001      	movs	r0, #1
 8001ae8:	f000 face 	bl	8002088 <RCC_Delay>
 8001aec:	e01c      	b.n	8001b28 <HAL_RCC_OscConfig+0x284>
 8001aee:	4b0a      	ldr	r3, [pc, #40]	@ (8001b18 <HAL_RCC_OscConfig+0x274>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	601a      	str	r2, [r3, #0]
 8001af4:	f7ff fb4e 	bl	8001194 <HAL_GetTick>
 8001af8:	6138      	str	r0, [r7, #16]
 8001afa:	e00f      	b.n	8001b1c <HAL_RCC_OscConfig+0x278>
 8001afc:	f7ff fb4a 	bl	8001194 <HAL_GetTick>
 8001b00:	4602      	mov	r2, r0
 8001b02:	693b      	ldr	r3, [r7, #16]
 8001b04:	1ad3      	subs	r3, r2, r3
 8001b06:	2b02      	cmp	r3, #2
 8001b08:	d908      	bls.n	8001b1c <HAL_RCC_OscConfig+0x278>
 8001b0a:	2303      	movs	r3, #3
 8001b0c:	e146      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001b0e:	bf00      	nop
 8001b10:	40021000 	.word	0x40021000
 8001b14:	42420000 	.word	0x42420000
 8001b18:	42420480 	.word	0x42420480
 8001b1c:	4b92      	ldr	r3, [pc, #584]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001b1e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001b20:	f003 0302 	and.w	r3, r3, #2
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d1e9      	bne.n	8001afc <HAL_RCC_OscConfig+0x258>
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	f003 0304 	and.w	r3, r3, #4
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	f000 80a6 	beq.w	8001c82 <HAL_RCC_OscConfig+0x3de>
 8001b36:	2300      	movs	r3, #0
 8001b38:	75fb      	strb	r3, [r7, #23]
 8001b3a:	4b8b      	ldr	r3, [pc, #556]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001b3c:	69db      	ldr	r3, [r3, #28]
 8001b3e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d10d      	bne.n	8001b62 <HAL_RCC_OscConfig+0x2be>
 8001b46:	4b88      	ldr	r3, [pc, #544]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001b48:	69db      	ldr	r3, [r3, #28]
 8001b4a:	4a87      	ldr	r2, [pc, #540]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001b4c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001b50:	61d3      	str	r3, [r2, #28]
 8001b52:	4b85      	ldr	r3, [pc, #532]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001b54:	69db      	ldr	r3, [r3, #28]
 8001b56:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b5a:	60bb      	str	r3, [r7, #8]
 8001b5c:	68bb      	ldr	r3, [r7, #8]
 8001b5e:	2301      	movs	r3, #1
 8001b60:	75fb      	strb	r3, [r7, #23]
 8001b62:	4b82      	ldr	r3, [pc, #520]	@ (8001d6c <HAL_RCC_OscConfig+0x4c8>)
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001b6a:	2b00      	cmp	r3, #0
 8001b6c:	d118      	bne.n	8001ba0 <HAL_RCC_OscConfig+0x2fc>
 8001b6e:	4b7f      	ldr	r3, [pc, #508]	@ (8001d6c <HAL_RCC_OscConfig+0x4c8>)
 8001b70:	681b      	ldr	r3, [r3, #0]
 8001b72:	4a7e      	ldr	r2, [pc, #504]	@ (8001d6c <HAL_RCC_OscConfig+0x4c8>)
 8001b74:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001b78:	6013      	str	r3, [r2, #0]
 8001b7a:	f7ff fb0b 	bl	8001194 <HAL_GetTick>
 8001b7e:	6138      	str	r0, [r7, #16]
 8001b80:	e008      	b.n	8001b94 <HAL_RCC_OscConfig+0x2f0>
 8001b82:	f7ff fb07 	bl	8001194 <HAL_GetTick>
 8001b86:	4602      	mov	r2, r0
 8001b88:	693b      	ldr	r3, [r7, #16]
 8001b8a:	1ad3      	subs	r3, r2, r3
 8001b8c:	2b64      	cmp	r3, #100	@ 0x64
 8001b8e:	d901      	bls.n	8001b94 <HAL_RCC_OscConfig+0x2f0>
 8001b90:	2303      	movs	r3, #3
 8001b92:	e103      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001b94:	4b75      	ldr	r3, [pc, #468]	@ (8001d6c <HAL_RCC_OscConfig+0x4c8>)
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001b9c:	2b00      	cmp	r3, #0
 8001b9e:	d0f0      	beq.n	8001b82 <HAL_RCC_OscConfig+0x2de>
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	68db      	ldr	r3, [r3, #12]
 8001ba4:	2b01      	cmp	r3, #1
 8001ba6:	d106      	bne.n	8001bb6 <HAL_RCC_OscConfig+0x312>
 8001ba8:	4b6f      	ldr	r3, [pc, #444]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001baa:	6a1b      	ldr	r3, [r3, #32]
 8001bac:	4a6e      	ldr	r2, [pc, #440]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bae:	f043 0301 	orr.w	r3, r3, #1
 8001bb2:	6213      	str	r3, [r2, #32]
 8001bb4:	e02d      	b.n	8001c12 <HAL_RCC_OscConfig+0x36e>
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	68db      	ldr	r3, [r3, #12]
 8001bba:	2b00      	cmp	r3, #0
 8001bbc:	d10c      	bne.n	8001bd8 <HAL_RCC_OscConfig+0x334>
 8001bbe:	4b6a      	ldr	r3, [pc, #424]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bc0:	6a1b      	ldr	r3, [r3, #32]
 8001bc2:	4a69      	ldr	r2, [pc, #420]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bc4:	f023 0301 	bic.w	r3, r3, #1
 8001bc8:	6213      	str	r3, [r2, #32]
 8001bca:	4b67      	ldr	r3, [pc, #412]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bcc:	6a1b      	ldr	r3, [r3, #32]
 8001bce:	4a66      	ldr	r2, [pc, #408]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bd0:	f023 0304 	bic.w	r3, r3, #4
 8001bd4:	6213      	str	r3, [r2, #32]
 8001bd6:	e01c      	b.n	8001c12 <HAL_RCC_OscConfig+0x36e>
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	68db      	ldr	r3, [r3, #12]
 8001bdc:	2b05      	cmp	r3, #5
 8001bde:	d10c      	bne.n	8001bfa <HAL_RCC_OscConfig+0x356>
 8001be0:	4b61      	ldr	r3, [pc, #388]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001be2:	6a1b      	ldr	r3, [r3, #32]
 8001be4:	4a60      	ldr	r2, [pc, #384]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001be6:	f043 0304 	orr.w	r3, r3, #4
 8001bea:	6213      	str	r3, [r2, #32]
 8001bec:	4b5e      	ldr	r3, [pc, #376]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bee:	6a1b      	ldr	r3, [r3, #32]
 8001bf0:	4a5d      	ldr	r2, [pc, #372]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bf2:	f043 0301 	orr.w	r3, r3, #1
 8001bf6:	6213      	str	r3, [r2, #32]
 8001bf8:	e00b      	b.n	8001c12 <HAL_RCC_OscConfig+0x36e>
 8001bfa:	4b5b      	ldr	r3, [pc, #364]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001bfc:	6a1b      	ldr	r3, [r3, #32]
 8001bfe:	4a5a      	ldr	r2, [pc, #360]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c00:	f023 0301 	bic.w	r3, r3, #1
 8001c04:	6213      	str	r3, [r2, #32]
 8001c06:	4b58      	ldr	r3, [pc, #352]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c08:	6a1b      	ldr	r3, [r3, #32]
 8001c0a:	4a57      	ldr	r2, [pc, #348]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c0c:	f023 0304 	bic.w	r3, r3, #4
 8001c10:	6213      	str	r3, [r2, #32]
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	68db      	ldr	r3, [r3, #12]
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d015      	beq.n	8001c46 <HAL_RCC_OscConfig+0x3a2>
 8001c1a:	f7ff fabb 	bl	8001194 <HAL_GetTick>
 8001c1e:	6138      	str	r0, [r7, #16]
 8001c20:	e00a      	b.n	8001c38 <HAL_RCC_OscConfig+0x394>
 8001c22:	f7ff fab7 	bl	8001194 <HAL_GetTick>
 8001c26:	4602      	mov	r2, r0
 8001c28:	693b      	ldr	r3, [r7, #16]
 8001c2a:	1ad3      	subs	r3, r2, r3
 8001c2c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001c30:	4293      	cmp	r3, r2
 8001c32:	d901      	bls.n	8001c38 <HAL_RCC_OscConfig+0x394>
 8001c34:	2303      	movs	r3, #3
 8001c36:	e0b1      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001c38:	4b4b      	ldr	r3, [pc, #300]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c3a:	6a1b      	ldr	r3, [r3, #32]
 8001c3c:	f003 0302 	and.w	r3, r3, #2
 8001c40:	2b00      	cmp	r3, #0
 8001c42:	d0ee      	beq.n	8001c22 <HAL_RCC_OscConfig+0x37e>
 8001c44:	e014      	b.n	8001c70 <HAL_RCC_OscConfig+0x3cc>
 8001c46:	f7ff faa5 	bl	8001194 <HAL_GetTick>
 8001c4a:	6138      	str	r0, [r7, #16]
 8001c4c:	e00a      	b.n	8001c64 <HAL_RCC_OscConfig+0x3c0>
 8001c4e:	f7ff faa1 	bl	8001194 <HAL_GetTick>
 8001c52:	4602      	mov	r2, r0
 8001c54:	693b      	ldr	r3, [r7, #16]
 8001c56:	1ad3      	subs	r3, r2, r3
 8001c58:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001c5c:	4293      	cmp	r3, r2
 8001c5e:	d901      	bls.n	8001c64 <HAL_RCC_OscConfig+0x3c0>
 8001c60:	2303      	movs	r3, #3
 8001c62:	e09b      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001c64:	4b40      	ldr	r3, [pc, #256]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c66:	6a1b      	ldr	r3, [r3, #32]
 8001c68:	f003 0302 	and.w	r3, r3, #2
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d1ee      	bne.n	8001c4e <HAL_RCC_OscConfig+0x3aa>
 8001c70:	7dfb      	ldrb	r3, [r7, #23]
 8001c72:	2b01      	cmp	r3, #1
 8001c74:	d105      	bne.n	8001c82 <HAL_RCC_OscConfig+0x3de>
 8001c76:	4b3c      	ldr	r3, [pc, #240]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c78:	69db      	ldr	r3, [r3, #28]
 8001c7a:	4a3b      	ldr	r2, [pc, #236]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c7c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8001c80:	61d3      	str	r3, [r2, #28]
 8001c82:	687b      	ldr	r3, [r7, #4]
 8001c84:	69db      	ldr	r3, [r3, #28]
 8001c86:	2b00      	cmp	r3, #0
 8001c88:	f000 8087 	beq.w	8001d9a <HAL_RCC_OscConfig+0x4f6>
 8001c8c:	4b36      	ldr	r3, [pc, #216]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001c8e:	685b      	ldr	r3, [r3, #4]
 8001c90:	f003 030c 	and.w	r3, r3, #12
 8001c94:	2b08      	cmp	r3, #8
 8001c96:	d061      	beq.n	8001d5c <HAL_RCC_OscConfig+0x4b8>
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	69db      	ldr	r3, [r3, #28]
 8001c9c:	2b02      	cmp	r3, #2
 8001c9e:	d146      	bne.n	8001d2e <HAL_RCC_OscConfig+0x48a>
 8001ca0:	4b33      	ldr	r3, [pc, #204]	@ (8001d70 <HAL_RCC_OscConfig+0x4cc>)
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	601a      	str	r2, [r3, #0]
 8001ca6:	f7ff fa75 	bl	8001194 <HAL_GetTick>
 8001caa:	6138      	str	r0, [r7, #16]
 8001cac:	e008      	b.n	8001cc0 <HAL_RCC_OscConfig+0x41c>
 8001cae:	f7ff fa71 	bl	8001194 <HAL_GetTick>
 8001cb2:	4602      	mov	r2, r0
 8001cb4:	693b      	ldr	r3, [r7, #16]
 8001cb6:	1ad3      	subs	r3, r2, r3
 8001cb8:	2b02      	cmp	r3, #2
 8001cba:	d901      	bls.n	8001cc0 <HAL_RCC_OscConfig+0x41c>
 8001cbc:	2303      	movs	r3, #3
 8001cbe:	e06d      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001cc0:	4b29      	ldr	r3, [pc, #164]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001cc8:	2b00      	cmp	r3, #0
 8001cca:	d1f0      	bne.n	8001cae <HAL_RCC_OscConfig+0x40a>
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	6a1b      	ldr	r3, [r3, #32]
 8001cd0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001cd4:	d108      	bne.n	8001ce8 <HAL_RCC_OscConfig+0x444>
 8001cd6:	4b24      	ldr	r3, [pc, #144]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001cd8:	685b      	ldr	r3, [r3, #4]
 8001cda:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	689b      	ldr	r3, [r3, #8]
 8001ce2:	4921      	ldr	r1, [pc, #132]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001ce4:	4313      	orrs	r3, r2
 8001ce6:	604b      	str	r3, [r1, #4]
 8001ce8:	4b1f      	ldr	r3, [pc, #124]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001cea:	685b      	ldr	r3, [r3, #4]
 8001cec:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	6a19      	ldr	r1, [r3, #32]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001cf8:	430b      	orrs	r3, r1
 8001cfa:	491b      	ldr	r1, [pc, #108]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001cfc:	4313      	orrs	r3, r2
 8001cfe:	604b      	str	r3, [r1, #4]
 8001d00:	4b1b      	ldr	r3, [pc, #108]	@ (8001d70 <HAL_RCC_OscConfig+0x4cc>)
 8001d02:	2201      	movs	r2, #1
 8001d04:	601a      	str	r2, [r3, #0]
 8001d06:	f7ff fa45 	bl	8001194 <HAL_GetTick>
 8001d0a:	6138      	str	r0, [r7, #16]
 8001d0c:	e008      	b.n	8001d20 <HAL_RCC_OscConfig+0x47c>
 8001d0e:	f7ff fa41 	bl	8001194 <HAL_GetTick>
 8001d12:	4602      	mov	r2, r0
 8001d14:	693b      	ldr	r3, [r7, #16]
 8001d16:	1ad3      	subs	r3, r2, r3
 8001d18:	2b02      	cmp	r3, #2
 8001d1a:	d901      	bls.n	8001d20 <HAL_RCC_OscConfig+0x47c>
 8001d1c:	2303      	movs	r3, #3
 8001d1e:	e03d      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001d20:	4b11      	ldr	r3, [pc, #68]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d0f0      	beq.n	8001d0e <HAL_RCC_OscConfig+0x46a>
 8001d2c:	e035      	b.n	8001d9a <HAL_RCC_OscConfig+0x4f6>
 8001d2e:	4b10      	ldr	r3, [pc, #64]	@ (8001d70 <HAL_RCC_OscConfig+0x4cc>)
 8001d30:	2200      	movs	r2, #0
 8001d32:	601a      	str	r2, [r3, #0]
 8001d34:	f7ff fa2e 	bl	8001194 <HAL_GetTick>
 8001d38:	6138      	str	r0, [r7, #16]
 8001d3a:	e008      	b.n	8001d4e <HAL_RCC_OscConfig+0x4aa>
 8001d3c:	f7ff fa2a 	bl	8001194 <HAL_GetTick>
 8001d40:	4602      	mov	r2, r0
 8001d42:	693b      	ldr	r3, [r7, #16]
 8001d44:	1ad3      	subs	r3, r2, r3
 8001d46:	2b02      	cmp	r3, #2
 8001d48:	d901      	bls.n	8001d4e <HAL_RCC_OscConfig+0x4aa>
 8001d4a:	2303      	movs	r3, #3
 8001d4c:	e026      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001d4e:	4b06      	ldr	r3, [pc, #24]	@ (8001d68 <HAL_RCC_OscConfig+0x4c4>)
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d1f0      	bne.n	8001d3c <HAL_RCC_OscConfig+0x498>
 8001d5a:	e01e      	b.n	8001d9a <HAL_RCC_OscConfig+0x4f6>
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	69db      	ldr	r3, [r3, #28]
 8001d60:	2b01      	cmp	r3, #1
 8001d62:	d107      	bne.n	8001d74 <HAL_RCC_OscConfig+0x4d0>
 8001d64:	2301      	movs	r3, #1
 8001d66:	e019      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001d68:	40021000 	.word	0x40021000
 8001d6c:	40007000 	.word	0x40007000
 8001d70:	42420060 	.word	0x42420060
 8001d74:	4b0b      	ldr	r3, [pc, #44]	@ (8001da4 <HAL_RCC_OscConfig+0x500>)
 8001d76:	685b      	ldr	r3, [r3, #4]
 8001d78:	60fb      	str	r3, [r7, #12]
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	6a1b      	ldr	r3, [r3, #32]
 8001d84:	429a      	cmp	r2, r3
 8001d86:	d106      	bne.n	8001d96 <HAL_RCC_OscConfig+0x4f2>
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d92:	429a      	cmp	r2, r3
 8001d94:	d001      	beq.n	8001d9a <HAL_RCC_OscConfig+0x4f6>
 8001d96:	2301      	movs	r3, #1
 8001d98:	e000      	b.n	8001d9c <HAL_RCC_OscConfig+0x4f8>
 8001d9a:	2300      	movs	r3, #0
 8001d9c:	4618      	mov	r0, r3
 8001d9e:	3718      	adds	r7, #24
 8001da0:	46bd      	mov	sp, r7
 8001da2:	bd80      	pop	{r7, pc}
 8001da4:	40021000 	.word	0x40021000

08001da8 <HAL_RCC_ClockConfig>:
 8001da8:	b580      	push	{r7, lr}
 8001daa:	b084      	sub	sp, #16
 8001dac:	af00      	add	r7, sp, #0
 8001dae:	6078      	str	r0, [r7, #4]
 8001db0:	6039      	str	r1, [r7, #0]
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d101      	bne.n	8001dbc <HAL_RCC_ClockConfig+0x14>
 8001db8:	2301      	movs	r3, #1
 8001dba:	e0d0      	b.n	8001f5e <HAL_RCC_ClockConfig+0x1b6>
 8001dbc:	4b6a      	ldr	r3, [pc, #424]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001dbe:	681b      	ldr	r3, [r3, #0]
 8001dc0:	f003 0307 	and.w	r3, r3, #7
 8001dc4:	683a      	ldr	r2, [r7, #0]
 8001dc6:	429a      	cmp	r2, r3
 8001dc8:	d910      	bls.n	8001dec <HAL_RCC_ClockConfig+0x44>
 8001dca:	4b67      	ldr	r3, [pc, #412]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	f023 0207 	bic.w	r2, r3, #7
 8001dd2:	4965      	ldr	r1, [pc, #404]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001dd4:	683b      	ldr	r3, [r7, #0]
 8001dd6:	4313      	orrs	r3, r2
 8001dd8:	600b      	str	r3, [r1, #0]
 8001dda:	4b63      	ldr	r3, [pc, #396]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	f003 0307 	and.w	r3, r3, #7
 8001de2:	683a      	ldr	r2, [r7, #0]
 8001de4:	429a      	cmp	r2, r3
 8001de6:	d001      	beq.n	8001dec <HAL_RCC_ClockConfig+0x44>
 8001de8:	2301      	movs	r3, #1
 8001dea:	e0b8      	b.n	8001f5e <HAL_RCC_ClockConfig+0x1b6>
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	f003 0302 	and.w	r3, r3, #2
 8001df4:	2b00      	cmp	r3, #0
 8001df6:	d020      	beq.n	8001e3a <HAL_RCC_ClockConfig+0x92>
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	681b      	ldr	r3, [r3, #0]
 8001dfc:	f003 0304 	and.w	r3, r3, #4
 8001e00:	2b00      	cmp	r3, #0
 8001e02:	d005      	beq.n	8001e10 <HAL_RCC_ClockConfig+0x68>
 8001e04:	4b59      	ldr	r3, [pc, #356]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e06:	685b      	ldr	r3, [r3, #4]
 8001e08:	4a58      	ldr	r2, [pc, #352]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e0a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8001e0e:	6053      	str	r3, [r2, #4]
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	f003 0308 	and.w	r3, r3, #8
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d005      	beq.n	8001e28 <HAL_RCC_ClockConfig+0x80>
 8001e1c:	4b53      	ldr	r3, [pc, #332]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e1e:	685b      	ldr	r3, [r3, #4]
 8001e20:	4a52      	ldr	r2, [pc, #328]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e22:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001e26:	6053      	str	r3, [r2, #4]
 8001e28:	4b50      	ldr	r3, [pc, #320]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e2a:	685b      	ldr	r3, [r3, #4]
 8001e2c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	689b      	ldr	r3, [r3, #8]
 8001e34:	494d      	ldr	r1, [pc, #308]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e36:	4313      	orrs	r3, r2
 8001e38:	604b      	str	r3, [r1, #4]
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	681b      	ldr	r3, [r3, #0]
 8001e3e:	f003 0301 	and.w	r3, r3, #1
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d040      	beq.n	8001ec8 <HAL_RCC_ClockConfig+0x120>
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	685b      	ldr	r3, [r3, #4]
 8001e4a:	2b01      	cmp	r3, #1
 8001e4c:	d107      	bne.n	8001e5e <HAL_RCC_ClockConfig+0xb6>
 8001e4e:	4b47      	ldr	r3, [pc, #284]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d115      	bne.n	8001e86 <HAL_RCC_ClockConfig+0xde>
 8001e5a:	2301      	movs	r3, #1
 8001e5c:	e07f      	b.n	8001f5e <HAL_RCC_ClockConfig+0x1b6>
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	685b      	ldr	r3, [r3, #4]
 8001e62:	2b02      	cmp	r3, #2
 8001e64:	d107      	bne.n	8001e76 <HAL_RCC_ClockConfig+0xce>
 8001e66:	4b41      	ldr	r3, [pc, #260]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d109      	bne.n	8001e86 <HAL_RCC_ClockConfig+0xde>
 8001e72:	2301      	movs	r3, #1
 8001e74:	e073      	b.n	8001f5e <HAL_RCC_ClockConfig+0x1b6>
 8001e76:	4b3d      	ldr	r3, [pc, #244]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	f003 0302 	and.w	r3, r3, #2
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d101      	bne.n	8001e86 <HAL_RCC_ClockConfig+0xde>
 8001e82:	2301      	movs	r3, #1
 8001e84:	e06b      	b.n	8001f5e <HAL_RCC_ClockConfig+0x1b6>
 8001e86:	4b39      	ldr	r3, [pc, #228]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e88:	685b      	ldr	r3, [r3, #4]
 8001e8a:	f023 0203 	bic.w	r2, r3, #3
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	685b      	ldr	r3, [r3, #4]
 8001e92:	4936      	ldr	r1, [pc, #216]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001e94:	4313      	orrs	r3, r2
 8001e96:	604b      	str	r3, [r1, #4]
 8001e98:	f7ff f97c 	bl	8001194 <HAL_GetTick>
 8001e9c:	60f8      	str	r0, [r7, #12]
 8001e9e:	e00a      	b.n	8001eb6 <HAL_RCC_ClockConfig+0x10e>
 8001ea0:	f7ff f978 	bl	8001194 <HAL_GetTick>
 8001ea4:	4602      	mov	r2, r0
 8001ea6:	68fb      	ldr	r3, [r7, #12]
 8001ea8:	1ad3      	subs	r3, r2, r3
 8001eaa:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001eae:	4293      	cmp	r3, r2
 8001eb0:	d901      	bls.n	8001eb6 <HAL_RCC_ClockConfig+0x10e>
 8001eb2:	2303      	movs	r3, #3
 8001eb4:	e053      	b.n	8001f5e <HAL_RCC_ClockConfig+0x1b6>
 8001eb6:	4b2d      	ldr	r3, [pc, #180]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001eb8:	685b      	ldr	r3, [r3, #4]
 8001eba:	f003 020c 	and.w	r2, r3, #12
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	685b      	ldr	r3, [r3, #4]
 8001ec2:	009b      	lsls	r3, r3, #2
 8001ec4:	429a      	cmp	r2, r3
 8001ec6:	d1eb      	bne.n	8001ea0 <HAL_RCC_ClockConfig+0xf8>
 8001ec8:	4b27      	ldr	r3, [pc, #156]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	f003 0307 	and.w	r3, r3, #7
 8001ed0:	683a      	ldr	r2, [r7, #0]
 8001ed2:	429a      	cmp	r2, r3
 8001ed4:	d210      	bcs.n	8001ef8 <HAL_RCC_ClockConfig+0x150>
 8001ed6:	4b24      	ldr	r3, [pc, #144]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	f023 0207 	bic.w	r2, r3, #7
 8001ede:	4922      	ldr	r1, [pc, #136]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001ee0:	683b      	ldr	r3, [r7, #0]
 8001ee2:	4313      	orrs	r3, r2
 8001ee4:	600b      	str	r3, [r1, #0]
 8001ee6:	4b20      	ldr	r3, [pc, #128]	@ (8001f68 <HAL_RCC_ClockConfig+0x1c0>)
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	f003 0307 	and.w	r3, r3, #7
 8001eee:	683a      	ldr	r2, [r7, #0]
 8001ef0:	429a      	cmp	r2, r3
 8001ef2:	d001      	beq.n	8001ef8 <HAL_RCC_ClockConfig+0x150>
 8001ef4:	2301      	movs	r3, #1
 8001ef6:	e032      	b.n	8001f5e <HAL_RCC_ClockConfig+0x1b6>
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	681b      	ldr	r3, [r3, #0]
 8001efc:	f003 0304 	and.w	r3, r3, #4
 8001f00:	2b00      	cmp	r3, #0
 8001f02:	d008      	beq.n	8001f16 <HAL_RCC_ClockConfig+0x16e>
 8001f04:	4b19      	ldr	r3, [pc, #100]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001f06:	685b      	ldr	r3, [r3, #4]
 8001f08:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	68db      	ldr	r3, [r3, #12]
 8001f10:	4916      	ldr	r1, [pc, #88]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001f12:	4313      	orrs	r3, r2
 8001f14:	604b      	str	r3, [r1, #4]
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	f003 0308 	and.w	r3, r3, #8
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d009      	beq.n	8001f36 <HAL_RCC_ClockConfig+0x18e>
 8001f22:	4b12      	ldr	r3, [pc, #72]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001f24:	685b      	ldr	r3, [r3, #4]
 8001f26:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	691b      	ldr	r3, [r3, #16]
 8001f2e:	00db      	lsls	r3, r3, #3
 8001f30:	490e      	ldr	r1, [pc, #56]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001f32:	4313      	orrs	r3, r2
 8001f34:	604b      	str	r3, [r1, #4]
 8001f36:	f000 f821 	bl	8001f7c <HAL_RCC_GetSysClockFreq>
 8001f3a:	4602      	mov	r2, r0
 8001f3c:	4b0b      	ldr	r3, [pc, #44]	@ (8001f6c <HAL_RCC_ClockConfig+0x1c4>)
 8001f3e:	685b      	ldr	r3, [r3, #4]
 8001f40:	091b      	lsrs	r3, r3, #4
 8001f42:	f003 030f 	and.w	r3, r3, #15
 8001f46:	490a      	ldr	r1, [pc, #40]	@ (8001f70 <HAL_RCC_ClockConfig+0x1c8>)
 8001f48:	5ccb      	ldrb	r3, [r1, r3]
 8001f4a:	fa22 f303 	lsr.w	r3, r2, r3
 8001f4e:	4a09      	ldr	r2, [pc, #36]	@ (8001f74 <HAL_RCC_ClockConfig+0x1cc>)
 8001f50:	6013      	str	r3, [r2, #0]
 8001f52:	4b09      	ldr	r3, [pc, #36]	@ (8001f78 <HAL_RCC_ClockConfig+0x1d0>)
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	4618      	mov	r0, r3
 8001f58:	f7ff f8da 	bl	8001110 <HAL_InitTick>
 8001f5c:	2300      	movs	r3, #0
 8001f5e:	4618      	mov	r0, r3
 8001f60:	3710      	adds	r7, #16
 8001f62:	46bd      	mov	sp, r7
 8001f64:	bd80      	pop	{r7, pc}
 8001f66:	bf00      	nop
 8001f68:	40022000 	.word	0x40022000
 8001f6c:	40021000 	.word	0x40021000
 8001f70:	08004474 	.word	0x08004474
 8001f74:	20000000 	.word	0x20000000
 8001f78:	20000004 	.word	0x20000004

08001f7c <HAL_RCC_GetSysClockFreq>:
 8001f7c:	b480      	push	{r7}
 8001f7e:	b087      	sub	sp, #28
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	2300      	movs	r3, #0
 8001f84:	60fb      	str	r3, [r7, #12]
 8001f86:	2300      	movs	r3, #0
 8001f88:	60bb      	str	r3, [r7, #8]
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	617b      	str	r3, [r7, #20]
 8001f8e:	2300      	movs	r3, #0
 8001f90:	607b      	str	r3, [r7, #4]
 8001f92:	2300      	movs	r3, #0
 8001f94:	613b      	str	r3, [r7, #16]
 8001f96:	4b1e      	ldr	r3, [pc, #120]	@ (8002010 <HAL_RCC_GetSysClockFreq+0x94>)
 8001f98:	685b      	ldr	r3, [r3, #4]
 8001f9a:	60fb      	str	r3, [r7, #12]
 8001f9c:	68fb      	ldr	r3, [r7, #12]
 8001f9e:	f003 030c 	and.w	r3, r3, #12
 8001fa2:	2b04      	cmp	r3, #4
 8001fa4:	d002      	beq.n	8001fac <HAL_RCC_GetSysClockFreq+0x30>
 8001fa6:	2b08      	cmp	r3, #8
 8001fa8:	d003      	beq.n	8001fb2 <HAL_RCC_GetSysClockFreq+0x36>
 8001faa:	e027      	b.n	8001ffc <HAL_RCC_GetSysClockFreq+0x80>
 8001fac:	4b19      	ldr	r3, [pc, #100]	@ (8002014 <HAL_RCC_GetSysClockFreq+0x98>)
 8001fae:	613b      	str	r3, [r7, #16]
 8001fb0:	e027      	b.n	8002002 <HAL_RCC_GetSysClockFreq+0x86>
 8001fb2:	68fb      	ldr	r3, [r7, #12]
 8001fb4:	0c9b      	lsrs	r3, r3, #18
 8001fb6:	f003 030f 	and.w	r3, r3, #15
 8001fba:	4a17      	ldr	r2, [pc, #92]	@ (8002018 <HAL_RCC_GetSysClockFreq+0x9c>)
 8001fbc:	5cd3      	ldrb	r3, [r2, r3]
 8001fbe:	607b      	str	r3, [r7, #4]
 8001fc0:	68fb      	ldr	r3, [r7, #12]
 8001fc2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d010      	beq.n	8001fec <HAL_RCC_GetSysClockFreq+0x70>
 8001fca:	4b11      	ldr	r3, [pc, #68]	@ (8002010 <HAL_RCC_GetSysClockFreq+0x94>)
 8001fcc:	685b      	ldr	r3, [r3, #4]
 8001fce:	0c5b      	lsrs	r3, r3, #17
 8001fd0:	f003 0301 	and.w	r3, r3, #1
 8001fd4:	4a11      	ldr	r2, [pc, #68]	@ (800201c <HAL_RCC_GetSysClockFreq+0xa0>)
 8001fd6:	5cd3      	ldrb	r3, [r2, r3]
 8001fd8:	60bb      	str	r3, [r7, #8]
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	4a0d      	ldr	r2, [pc, #52]	@ (8002014 <HAL_RCC_GetSysClockFreq+0x98>)
 8001fde:	fb03 f202 	mul.w	r2, r3, r2
 8001fe2:	68bb      	ldr	r3, [r7, #8]
 8001fe4:	fbb2 f3f3 	udiv	r3, r2, r3
 8001fe8:	617b      	str	r3, [r7, #20]
 8001fea:	e004      	b.n	8001ff6 <HAL_RCC_GetSysClockFreq+0x7a>
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	4a0c      	ldr	r2, [pc, #48]	@ (8002020 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001ff0:	fb02 f303 	mul.w	r3, r2, r3
 8001ff4:	617b      	str	r3, [r7, #20]
 8001ff6:	697b      	ldr	r3, [r7, #20]
 8001ff8:	613b      	str	r3, [r7, #16]
 8001ffa:	e002      	b.n	8002002 <HAL_RCC_GetSysClockFreq+0x86>
 8001ffc:	4b05      	ldr	r3, [pc, #20]	@ (8002014 <HAL_RCC_GetSysClockFreq+0x98>)
 8001ffe:	613b      	str	r3, [r7, #16]
 8002000:	bf00      	nop
 8002002:	693b      	ldr	r3, [r7, #16]
 8002004:	4618      	mov	r0, r3
 8002006:	371c      	adds	r7, #28
 8002008:	46bd      	mov	sp, r7
 800200a:	bc80      	pop	{r7}
 800200c:	4770      	bx	lr
 800200e:	bf00      	nop
 8002010:	40021000 	.word	0x40021000
 8002014:	007a1200 	.word	0x007a1200
 8002018:	0800448c 	.word	0x0800448c
 800201c:	0800449c 	.word	0x0800449c
 8002020:	003d0900 	.word	0x003d0900

08002024 <HAL_RCC_GetHCLKFreq>:
 8002024:	b480      	push	{r7}
 8002026:	af00      	add	r7, sp, #0
 8002028:	4b02      	ldr	r3, [pc, #8]	@ (8002034 <HAL_RCC_GetHCLKFreq+0x10>)
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	4618      	mov	r0, r3
 800202e:	46bd      	mov	sp, r7
 8002030:	bc80      	pop	{r7}
 8002032:	4770      	bx	lr
 8002034:	20000000 	.word	0x20000000

08002038 <HAL_RCC_GetPCLK1Freq>:
 8002038:	b580      	push	{r7, lr}
 800203a:	af00      	add	r7, sp, #0
 800203c:	f7ff fff2 	bl	8002024 <HAL_RCC_GetHCLKFreq>
 8002040:	4602      	mov	r2, r0
 8002042:	4b05      	ldr	r3, [pc, #20]	@ (8002058 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002044:	685b      	ldr	r3, [r3, #4]
 8002046:	0a1b      	lsrs	r3, r3, #8
 8002048:	f003 0307 	and.w	r3, r3, #7
 800204c:	4903      	ldr	r1, [pc, #12]	@ (800205c <HAL_RCC_GetPCLK1Freq+0x24>)
 800204e:	5ccb      	ldrb	r3, [r1, r3]
 8002050:	fa22 f303 	lsr.w	r3, r2, r3
 8002054:	4618      	mov	r0, r3
 8002056:	bd80      	pop	{r7, pc}
 8002058:	40021000 	.word	0x40021000
 800205c:	08004484 	.word	0x08004484

08002060 <HAL_RCC_GetPCLK2Freq>:
 8002060:	b580      	push	{r7, lr}
 8002062:	af00      	add	r7, sp, #0
 8002064:	f7ff ffde 	bl	8002024 <HAL_RCC_GetHCLKFreq>
 8002068:	4602      	mov	r2, r0
 800206a:	4b05      	ldr	r3, [pc, #20]	@ (8002080 <HAL_RCC_GetPCLK2Freq+0x20>)
 800206c:	685b      	ldr	r3, [r3, #4]
 800206e:	0adb      	lsrs	r3, r3, #11
 8002070:	f003 0307 	and.w	r3, r3, #7
 8002074:	4903      	ldr	r1, [pc, #12]	@ (8002084 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002076:	5ccb      	ldrb	r3, [r1, r3]
 8002078:	fa22 f303 	lsr.w	r3, r2, r3
 800207c:	4618      	mov	r0, r3
 800207e:	bd80      	pop	{r7, pc}
 8002080:	40021000 	.word	0x40021000
 8002084:	08004484 	.word	0x08004484

08002088 <RCC_Delay>:
 8002088:	b480      	push	{r7}
 800208a:	b085      	sub	sp, #20
 800208c:	af00      	add	r7, sp, #0
 800208e:	6078      	str	r0, [r7, #4]
 8002090:	4b0a      	ldr	r3, [pc, #40]	@ (80020bc <RCC_Delay+0x34>)
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	4a0a      	ldr	r2, [pc, #40]	@ (80020c0 <RCC_Delay+0x38>)
 8002096:	fba2 2303 	umull	r2, r3, r2, r3
 800209a:	0a5b      	lsrs	r3, r3, #9
 800209c:	687a      	ldr	r2, [r7, #4]
 800209e:	fb02 f303 	mul.w	r3, r2, r3
 80020a2:	60fb      	str	r3, [r7, #12]
 80020a4:	bf00      	nop
 80020a6:	68fb      	ldr	r3, [r7, #12]
 80020a8:	1e5a      	subs	r2, r3, #1
 80020aa:	60fa      	str	r2, [r7, #12]
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d1f9      	bne.n	80020a4 <RCC_Delay+0x1c>
 80020b0:	bf00      	nop
 80020b2:	bf00      	nop
 80020b4:	3714      	adds	r7, #20
 80020b6:	46bd      	mov	sp, r7
 80020b8:	bc80      	pop	{r7}
 80020ba:	4770      	bx	lr
 80020bc:	20000000 	.word	0x20000000
 80020c0:	10624dd3 	.word	0x10624dd3

080020c4 <HAL_TIM_Base_Init>:
 80020c4:	b580      	push	{r7, lr}
 80020c6:	b082      	sub	sp, #8
 80020c8:	af00      	add	r7, sp, #0
 80020ca:	6078      	str	r0, [r7, #4]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d101      	bne.n	80020d6 <HAL_TIM_Base_Init+0x12>
 80020d2:	2301      	movs	r3, #1
 80020d4:	e041      	b.n	800215a <HAL_TIM_Base_Init+0x96>
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80020dc:	b2db      	uxtb	r3, r3
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d106      	bne.n	80020f0 <HAL_TIM_Base_Init+0x2c>
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	2200      	movs	r2, #0
 80020e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80020ea:	6878      	ldr	r0, [r7, #4]
 80020ec:	f7fe ff20 	bl	8000f30 <HAL_TIM_Base_MspInit>
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	2202      	movs	r2, #2
 80020f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	681a      	ldr	r2, [r3, #0]
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	3304      	adds	r3, #4
 8002100:	4619      	mov	r1, r3
 8002102:	4610      	mov	r0, r2
 8002104:	f000 fb48 	bl	8002798 <TIM_Base_SetConfig>
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	2201      	movs	r2, #1
 800210c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	2201      	movs	r2, #1
 8002114:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	2201      	movs	r2, #1
 800211c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	2201      	movs	r2, #1
 8002124:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	2201      	movs	r2, #1
 800212c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	2201      	movs	r2, #1
 8002134:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	2201      	movs	r2, #1
 800213c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	2201      	movs	r2, #1
 8002144:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2201      	movs	r2, #1
 800214c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2201      	movs	r2, #1
 8002154:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002158:	2300      	movs	r3, #0
 800215a:	4618      	mov	r0, r3
 800215c:	3708      	adds	r7, #8
 800215e:	46bd      	mov	sp, r7
 8002160:	bd80      	pop	{r7, pc}

08002162 <HAL_TIM_IC_Init>:
 8002162:	b580      	push	{r7, lr}
 8002164:	b082      	sub	sp, #8
 8002166:	af00      	add	r7, sp, #0
 8002168:	6078      	str	r0, [r7, #4]
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	2b00      	cmp	r3, #0
 800216e:	d101      	bne.n	8002174 <HAL_TIM_IC_Init+0x12>
 8002170:	2301      	movs	r3, #1
 8002172:	e041      	b.n	80021f8 <HAL_TIM_IC_Init+0x96>
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800217a:	b2db      	uxtb	r3, r3
 800217c:	2b00      	cmp	r3, #0
 800217e:	d106      	bne.n	800218e <HAL_TIM_IC_Init+0x2c>
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	2200      	movs	r2, #0
 8002184:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002188:	6878      	ldr	r0, [r7, #4]
 800218a:	f000 f839 	bl	8002200 <HAL_TIM_IC_MspInit>
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	2202      	movs	r2, #2
 8002192:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681a      	ldr	r2, [r3, #0]
 800219a:	687b      	ldr	r3, [r7, #4]
 800219c:	3304      	adds	r3, #4
 800219e:	4619      	mov	r1, r3
 80021a0:	4610      	mov	r0, r2
 80021a2:	f000 faf9 	bl	8002798 <TIM_Base_SetConfig>
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	2201      	movs	r2, #1
 80021aa:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	2201      	movs	r2, #1
 80021b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	2201      	movs	r2, #1
 80021ba:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	2201      	movs	r2, #1
 80021c2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	2201      	movs	r2, #1
 80021ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	2201      	movs	r2, #1
 80021d2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	2201      	movs	r2, #1
 80021da:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	2201      	movs	r2, #1
 80021e2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	2201      	movs	r2, #1
 80021ea:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	2201      	movs	r2, #1
 80021f2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80021f6:	2300      	movs	r3, #0
 80021f8:	4618      	mov	r0, r3
 80021fa:	3708      	adds	r7, #8
 80021fc:	46bd      	mov	sp, r7
 80021fe:	bd80      	pop	{r7, pc}

08002200 <HAL_TIM_IC_MspInit>:
 8002200:	b480      	push	{r7}
 8002202:	b083      	sub	sp, #12
 8002204:	af00      	add	r7, sp, #0
 8002206:	6078      	str	r0, [r7, #4]
 8002208:	bf00      	nop
 800220a:	370c      	adds	r7, #12
 800220c:	46bd      	mov	sp, r7
 800220e:	bc80      	pop	{r7}
 8002210:	4770      	bx	lr

08002212 <HAL_TIM_IRQHandler>:
 8002212:	b580      	push	{r7, lr}
 8002214:	b084      	sub	sp, #16
 8002216:	af00      	add	r7, sp, #0
 8002218:	6078      	str	r0, [r7, #4]
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	68db      	ldr	r3, [r3, #12]
 8002220:	60fb      	str	r3, [r7, #12]
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	691b      	ldr	r3, [r3, #16]
 8002228:	60bb      	str	r3, [r7, #8]
 800222a:	68bb      	ldr	r3, [r7, #8]
 800222c:	f003 0302 	and.w	r3, r3, #2
 8002230:	2b00      	cmp	r3, #0
 8002232:	d020      	beq.n	8002276 <HAL_TIM_IRQHandler+0x64>
 8002234:	68fb      	ldr	r3, [r7, #12]
 8002236:	f003 0302 	and.w	r3, r3, #2
 800223a:	2b00      	cmp	r3, #0
 800223c:	d01b      	beq.n	8002276 <HAL_TIM_IRQHandler+0x64>
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	f06f 0202 	mvn.w	r2, #2
 8002246:	611a      	str	r2, [r3, #16]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	2201      	movs	r2, #1
 800224c:	771a      	strb	r2, [r3, #28]
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	681b      	ldr	r3, [r3, #0]
 8002252:	699b      	ldr	r3, [r3, #24]
 8002254:	f003 0303 	and.w	r3, r3, #3
 8002258:	2b00      	cmp	r3, #0
 800225a:	d003      	beq.n	8002264 <HAL_TIM_IRQHandler+0x52>
 800225c:	6878      	ldr	r0, [r7, #4]
 800225e:	f000 fa7f 	bl	8002760 <HAL_TIM_IC_CaptureCallback>
 8002262:	e005      	b.n	8002270 <HAL_TIM_IRQHandler+0x5e>
 8002264:	6878      	ldr	r0, [r7, #4]
 8002266:	f000 fa72 	bl	800274e <HAL_TIM_OC_DelayElapsedCallback>
 800226a:	6878      	ldr	r0, [r7, #4]
 800226c:	f000 fa81 	bl	8002772 <HAL_TIM_PWM_PulseFinishedCallback>
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	2200      	movs	r2, #0
 8002274:	771a      	strb	r2, [r3, #28]
 8002276:	68bb      	ldr	r3, [r7, #8]
 8002278:	f003 0304 	and.w	r3, r3, #4
 800227c:	2b00      	cmp	r3, #0
 800227e:	d020      	beq.n	80022c2 <HAL_TIM_IRQHandler+0xb0>
 8002280:	68fb      	ldr	r3, [r7, #12]
 8002282:	f003 0304 	and.w	r3, r3, #4
 8002286:	2b00      	cmp	r3, #0
 8002288:	d01b      	beq.n	80022c2 <HAL_TIM_IRQHandler+0xb0>
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	f06f 0204 	mvn.w	r2, #4
 8002292:	611a      	str	r2, [r3, #16]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	2202      	movs	r2, #2
 8002298:	771a      	strb	r2, [r3, #28]
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	699b      	ldr	r3, [r3, #24]
 80022a0:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80022a4:	2b00      	cmp	r3, #0
 80022a6:	d003      	beq.n	80022b0 <HAL_TIM_IRQHandler+0x9e>
 80022a8:	6878      	ldr	r0, [r7, #4]
 80022aa:	f000 fa59 	bl	8002760 <HAL_TIM_IC_CaptureCallback>
 80022ae:	e005      	b.n	80022bc <HAL_TIM_IRQHandler+0xaa>
 80022b0:	6878      	ldr	r0, [r7, #4]
 80022b2:	f000 fa4c 	bl	800274e <HAL_TIM_OC_DelayElapsedCallback>
 80022b6:	6878      	ldr	r0, [r7, #4]
 80022b8:	f000 fa5b 	bl	8002772 <HAL_TIM_PWM_PulseFinishedCallback>
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	2200      	movs	r2, #0
 80022c0:	771a      	strb	r2, [r3, #28]
 80022c2:	68bb      	ldr	r3, [r7, #8]
 80022c4:	f003 0308 	and.w	r3, r3, #8
 80022c8:	2b00      	cmp	r3, #0
 80022ca:	d020      	beq.n	800230e <HAL_TIM_IRQHandler+0xfc>
 80022cc:	68fb      	ldr	r3, [r7, #12]
 80022ce:	f003 0308 	and.w	r3, r3, #8
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d01b      	beq.n	800230e <HAL_TIM_IRQHandler+0xfc>
 80022d6:	687b      	ldr	r3, [r7, #4]
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	f06f 0208 	mvn.w	r2, #8
 80022de:	611a      	str	r2, [r3, #16]
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	2204      	movs	r2, #4
 80022e4:	771a      	strb	r2, [r3, #28]
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	69db      	ldr	r3, [r3, #28]
 80022ec:	f003 0303 	and.w	r3, r3, #3
 80022f0:	2b00      	cmp	r3, #0
 80022f2:	d003      	beq.n	80022fc <HAL_TIM_IRQHandler+0xea>
 80022f4:	6878      	ldr	r0, [r7, #4]
 80022f6:	f000 fa33 	bl	8002760 <HAL_TIM_IC_CaptureCallback>
 80022fa:	e005      	b.n	8002308 <HAL_TIM_IRQHandler+0xf6>
 80022fc:	6878      	ldr	r0, [r7, #4]
 80022fe:	f000 fa26 	bl	800274e <HAL_TIM_OC_DelayElapsedCallback>
 8002302:	6878      	ldr	r0, [r7, #4]
 8002304:	f000 fa35 	bl	8002772 <HAL_TIM_PWM_PulseFinishedCallback>
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	2200      	movs	r2, #0
 800230c:	771a      	strb	r2, [r3, #28]
 800230e:	68bb      	ldr	r3, [r7, #8]
 8002310:	f003 0310 	and.w	r3, r3, #16
 8002314:	2b00      	cmp	r3, #0
 8002316:	d020      	beq.n	800235a <HAL_TIM_IRQHandler+0x148>
 8002318:	68fb      	ldr	r3, [r7, #12]
 800231a:	f003 0310 	and.w	r3, r3, #16
 800231e:	2b00      	cmp	r3, #0
 8002320:	d01b      	beq.n	800235a <HAL_TIM_IRQHandler+0x148>
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	f06f 0210 	mvn.w	r2, #16
 800232a:	611a      	str	r2, [r3, #16]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	2208      	movs	r2, #8
 8002330:	771a      	strb	r2, [r3, #28]
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	681b      	ldr	r3, [r3, #0]
 8002336:	69db      	ldr	r3, [r3, #28]
 8002338:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800233c:	2b00      	cmp	r3, #0
 800233e:	d003      	beq.n	8002348 <HAL_TIM_IRQHandler+0x136>
 8002340:	6878      	ldr	r0, [r7, #4]
 8002342:	f000 fa0d 	bl	8002760 <HAL_TIM_IC_CaptureCallback>
 8002346:	e005      	b.n	8002354 <HAL_TIM_IRQHandler+0x142>
 8002348:	6878      	ldr	r0, [r7, #4]
 800234a:	f000 fa00 	bl	800274e <HAL_TIM_OC_DelayElapsedCallback>
 800234e:	6878      	ldr	r0, [r7, #4]
 8002350:	f000 fa0f 	bl	8002772 <HAL_TIM_PWM_PulseFinishedCallback>
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	2200      	movs	r2, #0
 8002358:	771a      	strb	r2, [r3, #28]
 800235a:	68bb      	ldr	r3, [r7, #8]
 800235c:	f003 0301 	and.w	r3, r3, #1
 8002360:	2b00      	cmp	r3, #0
 8002362:	d00c      	beq.n	800237e <HAL_TIM_IRQHandler+0x16c>
 8002364:	68fb      	ldr	r3, [r7, #12]
 8002366:	f003 0301 	and.w	r3, r3, #1
 800236a:	2b00      	cmp	r3, #0
 800236c:	d007      	beq.n	800237e <HAL_TIM_IRQHandler+0x16c>
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	f06f 0201 	mvn.w	r2, #1
 8002376:	611a      	str	r2, [r3, #16]
 8002378:	6878      	ldr	r0, [r7, #4]
 800237a:	f000 f9df 	bl	800273c <HAL_TIM_PeriodElapsedCallback>
 800237e:	68bb      	ldr	r3, [r7, #8]
 8002380:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002384:	2b00      	cmp	r3, #0
 8002386:	d00c      	beq.n	80023a2 <HAL_TIM_IRQHandler+0x190>
 8002388:	68fb      	ldr	r3, [r7, #12]
 800238a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800238e:	2b00      	cmp	r3, #0
 8002390:	d007      	beq.n	80023a2 <HAL_TIM_IRQHandler+0x190>
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800239a:	611a      	str	r2, [r3, #16]
 800239c:	6878      	ldr	r0, [r7, #4]
 800239e:	f000 fd06 	bl	8002dae <HAL_TIMEx_BreakCallback>
 80023a2:	68bb      	ldr	r3, [r7, #8]
 80023a4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d00c      	beq.n	80023c6 <HAL_TIM_IRQHandler+0x1b4>
 80023ac:	68fb      	ldr	r3, [r7, #12]
 80023ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80023b2:	2b00      	cmp	r3, #0
 80023b4:	d007      	beq.n	80023c6 <HAL_TIM_IRQHandler+0x1b4>
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80023be:	611a      	str	r2, [r3, #16]
 80023c0:	6878      	ldr	r0, [r7, #4]
 80023c2:	f000 f9df 	bl	8002784 <HAL_TIM_TriggerCallback>
 80023c6:	68bb      	ldr	r3, [r7, #8]
 80023c8:	f003 0320 	and.w	r3, r3, #32
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d00c      	beq.n	80023ea <HAL_TIM_IRQHandler+0x1d8>
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	f003 0320 	and.w	r3, r3, #32
 80023d6:	2b00      	cmp	r3, #0
 80023d8:	d007      	beq.n	80023ea <HAL_TIM_IRQHandler+0x1d8>
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	f06f 0220 	mvn.w	r2, #32
 80023e2:	611a      	str	r2, [r3, #16]
 80023e4:	6878      	ldr	r0, [r7, #4]
 80023e6:	f000 fcd9 	bl	8002d9c <HAL_TIMEx_CommutCallback>
 80023ea:	bf00      	nop
 80023ec:	3710      	adds	r7, #16
 80023ee:	46bd      	mov	sp, r7
 80023f0:	bd80      	pop	{r7, pc}

080023f2 <HAL_TIM_IC_ConfigChannel>:
 80023f2:	b580      	push	{r7, lr}
 80023f4:	b086      	sub	sp, #24
 80023f6:	af00      	add	r7, sp, #0
 80023f8:	60f8      	str	r0, [r7, #12]
 80023fa:	60b9      	str	r1, [r7, #8]
 80023fc:	607a      	str	r2, [r7, #4]
 80023fe:	2300      	movs	r3, #0
 8002400:	75fb      	strb	r3, [r7, #23]
 8002402:	68fb      	ldr	r3, [r7, #12]
 8002404:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002408:	2b01      	cmp	r3, #1
 800240a:	d101      	bne.n	8002410 <HAL_TIM_IC_ConfigChannel+0x1e>
 800240c:	2302      	movs	r3, #2
 800240e:	e088      	b.n	8002522 <HAL_TIM_IC_ConfigChannel+0x130>
 8002410:	68fb      	ldr	r3, [r7, #12]
 8002412:	2201      	movs	r2, #1
 8002414:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	2b00      	cmp	r3, #0
 800241c:	d11b      	bne.n	8002456 <HAL_TIM_IC_ConfigChannel+0x64>
 800241e:	68fb      	ldr	r3, [r7, #12]
 8002420:	6818      	ldr	r0, [r3, #0]
 8002422:	68bb      	ldr	r3, [r7, #8]
 8002424:	6819      	ldr	r1, [r3, #0]
 8002426:	68bb      	ldr	r3, [r7, #8]
 8002428:	685a      	ldr	r2, [r3, #4]
 800242a:	68bb      	ldr	r3, [r7, #8]
 800242c:	68db      	ldr	r3, [r3, #12]
 800242e:	f000 fab3 	bl	8002998 <TIM_TI1_SetConfig>
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	699a      	ldr	r2, [r3, #24]
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f022 020c 	bic.w	r2, r2, #12
 8002440:	619a      	str	r2, [r3, #24]
 8002442:	68fb      	ldr	r3, [r7, #12]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	6999      	ldr	r1, [r3, #24]
 8002448:	68bb      	ldr	r3, [r7, #8]
 800244a:	689a      	ldr	r2, [r3, #8]
 800244c:	68fb      	ldr	r3, [r7, #12]
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	430a      	orrs	r2, r1
 8002452:	619a      	str	r2, [r3, #24]
 8002454:	e060      	b.n	8002518 <HAL_TIM_IC_ConfigChannel+0x126>
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	2b04      	cmp	r3, #4
 800245a:	d11c      	bne.n	8002496 <HAL_TIM_IC_ConfigChannel+0xa4>
 800245c:	68fb      	ldr	r3, [r7, #12]
 800245e:	6818      	ldr	r0, [r3, #0]
 8002460:	68bb      	ldr	r3, [r7, #8]
 8002462:	6819      	ldr	r1, [r3, #0]
 8002464:	68bb      	ldr	r3, [r7, #8]
 8002466:	685a      	ldr	r2, [r3, #4]
 8002468:	68bb      	ldr	r3, [r7, #8]
 800246a:	68db      	ldr	r3, [r3, #12]
 800246c:	f000 fb1c 	bl	8002aa8 <TIM_TI2_SetConfig>
 8002470:	68fb      	ldr	r3, [r7, #12]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	699a      	ldr	r2, [r3, #24]
 8002476:	68fb      	ldr	r3, [r7, #12]
 8002478:	681b      	ldr	r3, [r3, #0]
 800247a:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800247e:	619a      	str	r2, [r3, #24]
 8002480:	68fb      	ldr	r3, [r7, #12]
 8002482:	681b      	ldr	r3, [r3, #0]
 8002484:	6999      	ldr	r1, [r3, #24]
 8002486:	68bb      	ldr	r3, [r7, #8]
 8002488:	689b      	ldr	r3, [r3, #8]
 800248a:	021a      	lsls	r2, r3, #8
 800248c:	68fb      	ldr	r3, [r7, #12]
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	430a      	orrs	r2, r1
 8002492:	619a      	str	r2, [r3, #24]
 8002494:	e040      	b.n	8002518 <HAL_TIM_IC_ConfigChannel+0x126>
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	2b08      	cmp	r3, #8
 800249a:	d11b      	bne.n	80024d4 <HAL_TIM_IC_ConfigChannel+0xe2>
 800249c:	68fb      	ldr	r3, [r7, #12]
 800249e:	6818      	ldr	r0, [r3, #0]
 80024a0:	68bb      	ldr	r3, [r7, #8]
 80024a2:	6819      	ldr	r1, [r3, #0]
 80024a4:	68bb      	ldr	r3, [r7, #8]
 80024a6:	685a      	ldr	r2, [r3, #4]
 80024a8:	68bb      	ldr	r3, [r7, #8]
 80024aa:	68db      	ldr	r3, [r3, #12]
 80024ac:	f000 fb67 	bl	8002b7e <TIM_TI3_SetConfig>
 80024b0:	68fb      	ldr	r3, [r7, #12]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	69da      	ldr	r2, [r3, #28]
 80024b6:	68fb      	ldr	r3, [r7, #12]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	f022 020c 	bic.w	r2, r2, #12
 80024be:	61da      	str	r2, [r3, #28]
 80024c0:	68fb      	ldr	r3, [r7, #12]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	69d9      	ldr	r1, [r3, #28]
 80024c6:	68bb      	ldr	r3, [r7, #8]
 80024c8:	689a      	ldr	r2, [r3, #8]
 80024ca:	68fb      	ldr	r3, [r7, #12]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	430a      	orrs	r2, r1
 80024d0:	61da      	str	r2, [r3, #28]
 80024d2:	e021      	b.n	8002518 <HAL_TIM_IC_ConfigChannel+0x126>
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	2b0c      	cmp	r3, #12
 80024d8:	d11c      	bne.n	8002514 <HAL_TIM_IC_ConfigChannel+0x122>
 80024da:	68fb      	ldr	r3, [r7, #12]
 80024dc:	6818      	ldr	r0, [r3, #0]
 80024de:	68bb      	ldr	r3, [r7, #8]
 80024e0:	6819      	ldr	r1, [r3, #0]
 80024e2:	68bb      	ldr	r3, [r7, #8]
 80024e4:	685a      	ldr	r2, [r3, #4]
 80024e6:	68bb      	ldr	r3, [r7, #8]
 80024e8:	68db      	ldr	r3, [r3, #12]
 80024ea:	f000 fb83 	bl	8002bf4 <TIM_TI4_SetConfig>
 80024ee:	68fb      	ldr	r3, [r7, #12]
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	69da      	ldr	r2, [r3, #28]
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80024fc:	61da      	str	r2, [r3, #28]
 80024fe:	68fb      	ldr	r3, [r7, #12]
 8002500:	681b      	ldr	r3, [r3, #0]
 8002502:	69d9      	ldr	r1, [r3, #28]
 8002504:	68bb      	ldr	r3, [r7, #8]
 8002506:	689b      	ldr	r3, [r3, #8]
 8002508:	021a      	lsls	r2, r3, #8
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	430a      	orrs	r2, r1
 8002510:	61da      	str	r2, [r3, #28]
 8002512:	e001      	b.n	8002518 <HAL_TIM_IC_ConfigChannel+0x126>
 8002514:	2301      	movs	r3, #1
 8002516:	75fb      	strb	r3, [r7, #23]
 8002518:	68fb      	ldr	r3, [r7, #12]
 800251a:	2200      	movs	r2, #0
 800251c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002520:	7dfb      	ldrb	r3, [r7, #23]
 8002522:	4618      	mov	r0, r3
 8002524:	3718      	adds	r7, #24
 8002526:	46bd      	mov	sp, r7
 8002528:	bd80      	pop	{r7, pc}

0800252a <HAL_TIM_ConfigClockSource>:
 800252a:	b580      	push	{r7, lr}
 800252c:	b084      	sub	sp, #16
 800252e:	af00      	add	r7, sp, #0
 8002530:	6078      	str	r0, [r7, #4]
 8002532:	6039      	str	r1, [r7, #0]
 8002534:	2300      	movs	r3, #0
 8002536:	73fb      	strb	r3, [r7, #15]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800253e:	2b01      	cmp	r3, #1
 8002540:	d101      	bne.n	8002546 <HAL_TIM_ConfigClockSource+0x1c>
 8002542:	2302      	movs	r3, #2
 8002544:	e0b4      	b.n	80026b0 <HAL_TIM_ConfigClockSource+0x186>
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	2201      	movs	r2, #1
 800254a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	2202      	movs	r2, #2
 8002552:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	689b      	ldr	r3, [r3, #8]
 800255c:	60bb      	str	r3, [r7, #8]
 800255e:	68bb      	ldr	r3, [r7, #8]
 8002560:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8002564:	60bb      	str	r3, [r7, #8]
 8002566:	68bb      	ldr	r3, [r7, #8]
 8002568:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800256c:	60bb      	str	r3, [r7, #8]
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	68ba      	ldr	r2, [r7, #8]
 8002574:	609a      	str	r2, [r3, #8]
 8002576:	683b      	ldr	r3, [r7, #0]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800257e:	d03e      	beq.n	80025fe <HAL_TIM_ConfigClockSource+0xd4>
 8002580:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002584:	f200 8087 	bhi.w	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 8002588:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800258c:	f000 8086 	beq.w	800269c <HAL_TIM_ConfigClockSource+0x172>
 8002590:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002594:	d87f      	bhi.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 8002596:	2b70      	cmp	r3, #112	@ 0x70
 8002598:	d01a      	beq.n	80025d0 <HAL_TIM_ConfigClockSource+0xa6>
 800259a:	2b70      	cmp	r3, #112	@ 0x70
 800259c:	d87b      	bhi.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 800259e:	2b60      	cmp	r3, #96	@ 0x60
 80025a0:	d050      	beq.n	8002644 <HAL_TIM_ConfigClockSource+0x11a>
 80025a2:	2b60      	cmp	r3, #96	@ 0x60
 80025a4:	d877      	bhi.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 80025a6:	2b50      	cmp	r3, #80	@ 0x50
 80025a8:	d03c      	beq.n	8002624 <HAL_TIM_ConfigClockSource+0xfa>
 80025aa:	2b50      	cmp	r3, #80	@ 0x50
 80025ac:	d873      	bhi.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 80025ae:	2b40      	cmp	r3, #64	@ 0x40
 80025b0:	d058      	beq.n	8002664 <HAL_TIM_ConfigClockSource+0x13a>
 80025b2:	2b40      	cmp	r3, #64	@ 0x40
 80025b4:	d86f      	bhi.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 80025b6:	2b30      	cmp	r3, #48	@ 0x30
 80025b8:	d064      	beq.n	8002684 <HAL_TIM_ConfigClockSource+0x15a>
 80025ba:	2b30      	cmp	r3, #48	@ 0x30
 80025bc:	d86b      	bhi.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 80025be:	2b20      	cmp	r3, #32
 80025c0:	d060      	beq.n	8002684 <HAL_TIM_ConfigClockSource+0x15a>
 80025c2:	2b20      	cmp	r3, #32
 80025c4:	d867      	bhi.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d05c      	beq.n	8002684 <HAL_TIM_ConfigClockSource+0x15a>
 80025ca:	2b10      	cmp	r3, #16
 80025cc:	d05a      	beq.n	8002684 <HAL_TIM_ConfigClockSource+0x15a>
 80025ce:	e062      	b.n	8002696 <HAL_TIM_ConfigClockSource+0x16c>
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	6818      	ldr	r0, [r3, #0]
 80025d4:	683b      	ldr	r3, [r7, #0]
 80025d6:	6899      	ldr	r1, [r3, #8]
 80025d8:	683b      	ldr	r3, [r7, #0]
 80025da:	685a      	ldr	r2, [r3, #4]
 80025dc:	683b      	ldr	r3, [r7, #0]
 80025de:	68db      	ldr	r3, [r3, #12]
 80025e0:	f000 fb5e 	bl	8002ca0 <TIM_ETR_SetConfig>
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	689b      	ldr	r3, [r3, #8]
 80025ea:	60bb      	str	r3, [r7, #8]
 80025ec:	68bb      	ldr	r3, [r7, #8]
 80025ee:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80025f2:	60bb      	str	r3, [r7, #8]
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	681b      	ldr	r3, [r3, #0]
 80025f8:	68ba      	ldr	r2, [r7, #8]
 80025fa:	609a      	str	r2, [r3, #8]
 80025fc:	e04f      	b.n	800269e <HAL_TIM_ConfigClockSource+0x174>
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	6818      	ldr	r0, [r3, #0]
 8002602:	683b      	ldr	r3, [r7, #0]
 8002604:	6899      	ldr	r1, [r3, #8]
 8002606:	683b      	ldr	r3, [r7, #0]
 8002608:	685a      	ldr	r2, [r3, #4]
 800260a:	683b      	ldr	r3, [r7, #0]
 800260c:	68db      	ldr	r3, [r3, #12]
 800260e:	f000 fb47 	bl	8002ca0 <TIM_ETR_SetConfig>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	689a      	ldr	r2, [r3, #8]
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002620:	609a      	str	r2, [r3, #8]
 8002622:	e03c      	b.n	800269e <HAL_TIM_ConfigClockSource+0x174>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	6818      	ldr	r0, [r3, #0]
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	6859      	ldr	r1, [r3, #4]
 800262c:	683b      	ldr	r3, [r7, #0]
 800262e:	68db      	ldr	r3, [r3, #12]
 8002630:	461a      	mov	r2, r3
 8002632:	f000 fa0b 	bl	8002a4c <TIM_TI1_ConfigInputStage>
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	2150      	movs	r1, #80	@ 0x50
 800263c:	4618      	mov	r0, r3
 800263e:	f000 fb15 	bl	8002c6c <TIM_ITRx_SetConfig>
 8002642:	e02c      	b.n	800269e <HAL_TIM_ConfigClockSource+0x174>
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	6818      	ldr	r0, [r3, #0]
 8002648:	683b      	ldr	r3, [r7, #0]
 800264a:	6859      	ldr	r1, [r3, #4]
 800264c:	683b      	ldr	r3, [r7, #0]
 800264e:	68db      	ldr	r3, [r3, #12]
 8002650:	461a      	mov	r2, r3
 8002652:	f000 fa65 	bl	8002b20 <TIM_TI2_ConfigInputStage>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	681b      	ldr	r3, [r3, #0]
 800265a:	2160      	movs	r1, #96	@ 0x60
 800265c:	4618      	mov	r0, r3
 800265e:	f000 fb05 	bl	8002c6c <TIM_ITRx_SetConfig>
 8002662:	e01c      	b.n	800269e <HAL_TIM_ConfigClockSource+0x174>
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	6818      	ldr	r0, [r3, #0]
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	6859      	ldr	r1, [r3, #4]
 800266c:	683b      	ldr	r3, [r7, #0]
 800266e:	68db      	ldr	r3, [r3, #12]
 8002670:	461a      	mov	r2, r3
 8002672:	f000 f9eb 	bl	8002a4c <TIM_TI1_ConfigInputStage>
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	2140      	movs	r1, #64	@ 0x40
 800267c:	4618      	mov	r0, r3
 800267e:	f000 faf5 	bl	8002c6c <TIM_ITRx_SetConfig>
 8002682:	e00c      	b.n	800269e <HAL_TIM_ConfigClockSource+0x174>
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	681a      	ldr	r2, [r3, #0]
 8002688:	683b      	ldr	r3, [r7, #0]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	4619      	mov	r1, r3
 800268e:	4610      	mov	r0, r2
 8002690:	f000 faec 	bl	8002c6c <TIM_ITRx_SetConfig>
 8002694:	e003      	b.n	800269e <HAL_TIM_ConfigClockSource+0x174>
 8002696:	2301      	movs	r3, #1
 8002698:	73fb      	strb	r3, [r7, #15]
 800269a:	e000      	b.n	800269e <HAL_TIM_ConfigClockSource+0x174>
 800269c:	bf00      	nop
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	2201      	movs	r2, #1
 80026a2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	2200      	movs	r2, #0
 80026aa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80026ae:	7bfb      	ldrb	r3, [r7, #15]
 80026b0:	4618      	mov	r0, r3
 80026b2:	3710      	adds	r7, #16
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bd80      	pop	{r7, pc}

080026b8 <HAL_TIM_SlaveConfigSynchro>:
 80026b8:	b580      	push	{r7, lr}
 80026ba:	b082      	sub	sp, #8
 80026bc:	af00      	add	r7, sp, #0
 80026be:	6078      	str	r0, [r7, #4]
 80026c0:	6039      	str	r1, [r7, #0]
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80026c8:	2b01      	cmp	r3, #1
 80026ca:	d101      	bne.n	80026d0 <HAL_TIM_SlaveConfigSynchro+0x18>
 80026cc:	2302      	movs	r3, #2
 80026ce:	e031      	b.n	8002734 <HAL_TIM_SlaveConfigSynchro+0x7c>
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	2201      	movs	r2, #1
 80026d4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	2202      	movs	r2, #2
 80026dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80026e0:	6839      	ldr	r1, [r7, #0]
 80026e2:	6878      	ldr	r0, [r7, #4]
 80026e4:	f000 f8c6 	bl	8002874 <TIM_SlaveTimer_SetConfig>
 80026e8:	4603      	mov	r3, r0
 80026ea:	2b00      	cmp	r3, #0
 80026ec:	d009      	beq.n	8002702 <HAL_TIM_SlaveConfigSynchro+0x4a>
 80026ee:	687b      	ldr	r3, [r7, #4]
 80026f0:	2201      	movs	r2, #1
 80026f2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	2200      	movs	r2, #0
 80026fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80026fe:	2301      	movs	r3, #1
 8002700:	e018      	b.n	8002734 <HAL_TIM_SlaveConfigSynchro+0x7c>
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	681b      	ldr	r3, [r3, #0]
 8002706:	68da      	ldr	r2, [r3, #12]
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002710:	60da      	str	r2, [r3, #12]
 8002712:	687b      	ldr	r3, [r7, #4]
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	68da      	ldr	r2, [r3, #12]
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8002720:	60da      	str	r2, [r3, #12]
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	2201      	movs	r2, #1
 8002726:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	2200      	movs	r2, #0
 800272e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002732:	2300      	movs	r3, #0
 8002734:	4618      	mov	r0, r3
 8002736:	3708      	adds	r7, #8
 8002738:	46bd      	mov	sp, r7
 800273a:	bd80      	pop	{r7, pc}

0800273c <HAL_TIM_PeriodElapsedCallback>:
 800273c:	b480      	push	{r7}
 800273e:	b083      	sub	sp, #12
 8002740:	af00      	add	r7, sp, #0
 8002742:	6078      	str	r0, [r7, #4]
 8002744:	bf00      	nop
 8002746:	370c      	adds	r7, #12
 8002748:	46bd      	mov	sp, r7
 800274a:	bc80      	pop	{r7}
 800274c:	4770      	bx	lr

0800274e <HAL_TIM_OC_DelayElapsedCallback>:
 800274e:	b480      	push	{r7}
 8002750:	b083      	sub	sp, #12
 8002752:	af00      	add	r7, sp, #0
 8002754:	6078      	str	r0, [r7, #4]
 8002756:	bf00      	nop
 8002758:	370c      	adds	r7, #12
 800275a:	46bd      	mov	sp, r7
 800275c:	bc80      	pop	{r7}
 800275e:	4770      	bx	lr

08002760 <HAL_TIM_IC_CaptureCallback>:
 8002760:	b480      	push	{r7}
 8002762:	b083      	sub	sp, #12
 8002764:	af00      	add	r7, sp, #0
 8002766:	6078      	str	r0, [r7, #4]
 8002768:	bf00      	nop
 800276a:	370c      	adds	r7, #12
 800276c:	46bd      	mov	sp, r7
 800276e:	bc80      	pop	{r7}
 8002770:	4770      	bx	lr

08002772 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002772:	b480      	push	{r7}
 8002774:	b083      	sub	sp, #12
 8002776:	af00      	add	r7, sp, #0
 8002778:	6078      	str	r0, [r7, #4]
 800277a:	bf00      	nop
 800277c:	370c      	adds	r7, #12
 800277e:	46bd      	mov	sp, r7
 8002780:	bc80      	pop	{r7}
 8002782:	4770      	bx	lr

08002784 <HAL_TIM_TriggerCallback>:
 8002784:	b480      	push	{r7}
 8002786:	b083      	sub	sp, #12
 8002788:	af00      	add	r7, sp, #0
 800278a:	6078      	str	r0, [r7, #4]
 800278c:	bf00      	nop
 800278e:	370c      	adds	r7, #12
 8002790:	46bd      	mov	sp, r7
 8002792:	bc80      	pop	{r7}
 8002794:	4770      	bx	lr
	...

08002798 <TIM_Base_SetConfig>:
 8002798:	b480      	push	{r7}
 800279a:	b085      	sub	sp, #20
 800279c:	af00      	add	r7, sp, #0
 800279e:	6078      	str	r0, [r7, #4]
 80027a0:	6039      	str	r1, [r7, #0]
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	60fb      	str	r3, [r7, #12]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	4a2f      	ldr	r2, [pc, #188]	@ (8002868 <TIM_Base_SetConfig+0xd0>)
 80027ac:	4293      	cmp	r3, r2
 80027ae:	d00b      	beq.n	80027c8 <TIM_Base_SetConfig+0x30>
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80027b6:	d007      	beq.n	80027c8 <TIM_Base_SetConfig+0x30>
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	4a2c      	ldr	r2, [pc, #176]	@ (800286c <TIM_Base_SetConfig+0xd4>)
 80027bc:	4293      	cmp	r3, r2
 80027be:	d003      	beq.n	80027c8 <TIM_Base_SetConfig+0x30>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	4a2b      	ldr	r2, [pc, #172]	@ (8002870 <TIM_Base_SetConfig+0xd8>)
 80027c4:	4293      	cmp	r3, r2
 80027c6:	d108      	bne.n	80027da <TIM_Base_SetConfig+0x42>
 80027c8:	68fb      	ldr	r3, [r7, #12]
 80027ca:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80027ce:	60fb      	str	r3, [r7, #12]
 80027d0:	683b      	ldr	r3, [r7, #0]
 80027d2:	685b      	ldr	r3, [r3, #4]
 80027d4:	68fa      	ldr	r2, [r7, #12]
 80027d6:	4313      	orrs	r3, r2
 80027d8:	60fb      	str	r3, [r7, #12]
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	4a22      	ldr	r2, [pc, #136]	@ (8002868 <TIM_Base_SetConfig+0xd0>)
 80027de:	4293      	cmp	r3, r2
 80027e0:	d00b      	beq.n	80027fa <TIM_Base_SetConfig+0x62>
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80027e8:	d007      	beq.n	80027fa <TIM_Base_SetConfig+0x62>
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	4a1f      	ldr	r2, [pc, #124]	@ (800286c <TIM_Base_SetConfig+0xd4>)
 80027ee:	4293      	cmp	r3, r2
 80027f0:	d003      	beq.n	80027fa <TIM_Base_SetConfig+0x62>
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	4a1e      	ldr	r2, [pc, #120]	@ (8002870 <TIM_Base_SetConfig+0xd8>)
 80027f6:	4293      	cmp	r3, r2
 80027f8:	d108      	bne.n	800280c <TIM_Base_SetConfig+0x74>
 80027fa:	68fb      	ldr	r3, [r7, #12]
 80027fc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002800:	60fb      	str	r3, [r7, #12]
 8002802:	683b      	ldr	r3, [r7, #0]
 8002804:	68db      	ldr	r3, [r3, #12]
 8002806:	68fa      	ldr	r2, [r7, #12]
 8002808:	4313      	orrs	r3, r2
 800280a:	60fb      	str	r3, [r7, #12]
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8002812:	683b      	ldr	r3, [r7, #0]
 8002814:	695b      	ldr	r3, [r3, #20]
 8002816:	4313      	orrs	r3, r2
 8002818:	60fb      	str	r3, [r7, #12]
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	68fa      	ldr	r2, [r7, #12]
 800281e:	601a      	str	r2, [r3, #0]
 8002820:	683b      	ldr	r3, [r7, #0]
 8002822:	689a      	ldr	r2, [r3, #8]
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002828:	683b      	ldr	r3, [r7, #0]
 800282a:	681a      	ldr	r2, [r3, #0]
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	4a0d      	ldr	r2, [pc, #52]	@ (8002868 <TIM_Base_SetConfig+0xd0>)
 8002834:	4293      	cmp	r3, r2
 8002836:	d103      	bne.n	8002840 <TIM_Base_SetConfig+0xa8>
 8002838:	683b      	ldr	r3, [r7, #0]
 800283a:	691a      	ldr	r2, [r3, #16]
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	2201      	movs	r2, #1
 8002844:	615a      	str	r2, [r3, #20]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	691b      	ldr	r3, [r3, #16]
 800284a:	f003 0301 	and.w	r3, r3, #1
 800284e:	2b00      	cmp	r3, #0
 8002850:	d005      	beq.n	800285e <TIM_Base_SetConfig+0xc6>
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	691b      	ldr	r3, [r3, #16]
 8002856:	f023 0201 	bic.w	r2, r3, #1
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	611a      	str	r2, [r3, #16]
 800285e:	bf00      	nop
 8002860:	3714      	adds	r7, #20
 8002862:	46bd      	mov	sp, r7
 8002864:	bc80      	pop	{r7}
 8002866:	4770      	bx	lr
 8002868:	40012c00 	.word	0x40012c00
 800286c:	40000400 	.word	0x40000400
 8002870:	40000800 	.word	0x40000800

08002874 <TIM_SlaveTimer_SetConfig>:
 8002874:	b580      	push	{r7, lr}
 8002876:	b086      	sub	sp, #24
 8002878:	af00      	add	r7, sp, #0
 800287a:	6078      	str	r0, [r7, #4]
 800287c:	6039      	str	r1, [r7, #0]
 800287e:	2300      	movs	r3, #0
 8002880:	75fb      	strb	r3, [r7, #23]
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	689b      	ldr	r3, [r3, #8]
 8002888:	613b      	str	r3, [r7, #16]
 800288a:	693b      	ldr	r3, [r7, #16]
 800288c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002890:	613b      	str	r3, [r7, #16]
 8002892:	683b      	ldr	r3, [r7, #0]
 8002894:	685b      	ldr	r3, [r3, #4]
 8002896:	693a      	ldr	r2, [r7, #16]
 8002898:	4313      	orrs	r3, r2
 800289a:	613b      	str	r3, [r7, #16]
 800289c:	693b      	ldr	r3, [r7, #16]
 800289e:	f023 0307 	bic.w	r3, r3, #7
 80028a2:	613b      	str	r3, [r7, #16]
 80028a4:	683b      	ldr	r3, [r7, #0]
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	693a      	ldr	r2, [r7, #16]
 80028aa:	4313      	orrs	r3, r2
 80028ac:	613b      	str	r3, [r7, #16]
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	693a      	ldr	r2, [r7, #16]
 80028b4:	609a      	str	r2, [r3, #8]
 80028b6:	683b      	ldr	r3, [r7, #0]
 80028b8:	685b      	ldr	r3, [r3, #4]
 80028ba:	2b70      	cmp	r3, #112	@ 0x70
 80028bc:	d01a      	beq.n	80028f4 <TIM_SlaveTimer_SetConfig+0x80>
 80028be:	2b70      	cmp	r3, #112	@ 0x70
 80028c0:	d860      	bhi.n	8002984 <TIM_SlaveTimer_SetConfig+0x110>
 80028c2:	2b60      	cmp	r3, #96	@ 0x60
 80028c4:	d054      	beq.n	8002970 <TIM_SlaveTimer_SetConfig+0xfc>
 80028c6:	2b60      	cmp	r3, #96	@ 0x60
 80028c8:	d85c      	bhi.n	8002984 <TIM_SlaveTimer_SetConfig+0x110>
 80028ca:	2b50      	cmp	r3, #80	@ 0x50
 80028cc:	d046      	beq.n	800295c <TIM_SlaveTimer_SetConfig+0xe8>
 80028ce:	2b50      	cmp	r3, #80	@ 0x50
 80028d0:	d858      	bhi.n	8002984 <TIM_SlaveTimer_SetConfig+0x110>
 80028d2:	2b40      	cmp	r3, #64	@ 0x40
 80028d4:	d019      	beq.n	800290a <TIM_SlaveTimer_SetConfig+0x96>
 80028d6:	2b40      	cmp	r3, #64	@ 0x40
 80028d8:	d854      	bhi.n	8002984 <TIM_SlaveTimer_SetConfig+0x110>
 80028da:	2b30      	cmp	r3, #48	@ 0x30
 80028dc:	d055      	beq.n	800298a <TIM_SlaveTimer_SetConfig+0x116>
 80028de:	2b30      	cmp	r3, #48	@ 0x30
 80028e0:	d850      	bhi.n	8002984 <TIM_SlaveTimer_SetConfig+0x110>
 80028e2:	2b20      	cmp	r3, #32
 80028e4:	d051      	beq.n	800298a <TIM_SlaveTimer_SetConfig+0x116>
 80028e6:	2b20      	cmp	r3, #32
 80028e8:	d84c      	bhi.n	8002984 <TIM_SlaveTimer_SetConfig+0x110>
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d04d      	beq.n	800298a <TIM_SlaveTimer_SetConfig+0x116>
 80028ee:	2b10      	cmp	r3, #16
 80028f0:	d04b      	beq.n	800298a <TIM_SlaveTimer_SetConfig+0x116>
 80028f2:	e047      	b.n	8002984 <TIM_SlaveTimer_SetConfig+0x110>
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	6818      	ldr	r0, [r3, #0]
 80028f8:	683b      	ldr	r3, [r7, #0]
 80028fa:	68d9      	ldr	r1, [r3, #12]
 80028fc:	683b      	ldr	r3, [r7, #0]
 80028fe:	689a      	ldr	r2, [r3, #8]
 8002900:	683b      	ldr	r3, [r7, #0]
 8002902:	691b      	ldr	r3, [r3, #16]
 8002904:	f000 f9cc 	bl	8002ca0 <TIM_ETR_SetConfig>
 8002908:	e040      	b.n	800298c <TIM_SlaveTimer_SetConfig+0x118>
 800290a:	683b      	ldr	r3, [r7, #0]
 800290c:	681b      	ldr	r3, [r3, #0]
 800290e:	2b05      	cmp	r3, #5
 8002910:	d101      	bne.n	8002916 <TIM_SlaveTimer_SetConfig+0xa2>
 8002912:	2301      	movs	r3, #1
 8002914:	e03b      	b.n	800298e <TIM_SlaveTimer_SetConfig+0x11a>
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	681b      	ldr	r3, [r3, #0]
 800291a:	6a1b      	ldr	r3, [r3, #32]
 800291c:	60fb      	str	r3, [r7, #12]
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	6a1a      	ldr	r2, [r3, #32]
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	f022 0201 	bic.w	r2, r2, #1
 800292c:	621a      	str	r2, [r3, #32]
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	699b      	ldr	r3, [r3, #24]
 8002934:	60bb      	str	r3, [r7, #8]
 8002936:	68bb      	ldr	r3, [r7, #8]
 8002938:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800293c:	60bb      	str	r3, [r7, #8]
 800293e:	683b      	ldr	r3, [r7, #0]
 8002940:	691b      	ldr	r3, [r3, #16]
 8002942:	011b      	lsls	r3, r3, #4
 8002944:	68ba      	ldr	r2, [r7, #8]
 8002946:	4313      	orrs	r3, r2
 8002948:	60bb      	str	r3, [r7, #8]
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	68ba      	ldr	r2, [r7, #8]
 8002950:	619a      	str	r2, [r3, #24]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	68fa      	ldr	r2, [r7, #12]
 8002958:	621a      	str	r2, [r3, #32]
 800295a:	e017      	b.n	800298c <TIM_SlaveTimer_SetConfig+0x118>
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	6818      	ldr	r0, [r3, #0]
 8002960:	683b      	ldr	r3, [r7, #0]
 8002962:	6899      	ldr	r1, [r3, #8]
 8002964:	683b      	ldr	r3, [r7, #0]
 8002966:	691b      	ldr	r3, [r3, #16]
 8002968:	461a      	mov	r2, r3
 800296a:	f000 f86f 	bl	8002a4c <TIM_TI1_ConfigInputStage>
 800296e:	e00d      	b.n	800298c <TIM_SlaveTimer_SetConfig+0x118>
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	6818      	ldr	r0, [r3, #0]
 8002974:	683b      	ldr	r3, [r7, #0]
 8002976:	6899      	ldr	r1, [r3, #8]
 8002978:	683b      	ldr	r3, [r7, #0]
 800297a:	691b      	ldr	r3, [r3, #16]
 800297c:	461a      	mov	r2, r3
 800297e:	f000 f8cf 	bl	8002b20 <TIM_TI2_ConfigInputStage>
 8002982:	e003      	b.n	800298c <TIM_SlaveTimer_SetConfig+0x118>
 8002984:	2301      	movs	r3, #1
 8002986:	75fb      	strb	r3, [r7, #23]
 8002988:	e000      	b.n	800298c <TIM_SlaveTimer_SetConfig+0x118>
 800298a:	bf00      	nop
 800298c:	7dfb      	ldrb	r3, [r7, #23]
 800298e:	4618      	mov	r0, r3
 8002990:	3718      	adds	r7, #24
 8002992:	46bd      	mov	sp, r7
 8002994:	bd80      	pop	{r7, pc}
	...

08002998 <TIM_TI1_SetConfig>:
 8002998:	b480      	push	{r7}
 800299a:	b087      	sub	sp, #28
 800299c:	af00      	add	r7, sp, #0
 800299e:	60f8      	str	r0, [r7, #12]
 80029a0:	60b9      	str	r1, [r7, #8]
 80029a2:	607a      	str	r2, [r7, #4]
 80029a4:	603b      	str	r3, [r7, #0]
 80029a6:	68fb      	ldr	r3, [r7, #12]
 80029a8:	6a1b      	ldr	r3, [r3, #32]
 80029aa:	613b      	str	r3, [r7, #16]
 80029ac:	68fb      	ldr	r3, [r7, #12]
 80029ae:	6a1b      	ldr	r3, [r3, #32]
 80029b0:	f023 0201 	bic.w	r2, r3, #1
 80029b4:	68fb      	ldr	r3, [r7, #12]
 80029b6:	621a      	str	r2, [r3, #32]
 80029b8:	68fb      	ldr	r3, [r7, #12]
 80029ba:	699b      	ldr	r3, [r3, #24]
 80029bc:	617b      	str	r3, [r7, #20]
 80029be:	68fb      	ldr	r3, [r7, #12]
 80029c0:	4a1f      	ldr	r2, [pc, #124]	@ (8002a40 <TIM_TI1_SetConfig+0xa8>)
 80029c2:	4293      	cmp	r3, r2
 80029c4:	d00b      	beq.n	80029de <TIM_TI1_SetConfig+0x46>
 80029c6:	68fb      	ldr	r3, [r7, #12]
 80029c8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80029cc:	d007      	beq.n	80029de <TIM_TI1_SetConfig+0x46>
 80029ce:	68fb      	ldr	r3, [r7, #12]
 80029d0:	4a1c      	ldr	r2, [pc, #112]	@ (8002a44 <TIM_TI1_SetConfig+0xac>)
 80029d2:	4293      	cmp	r3, r2
 80029d4:	d003      	beq.n	80029de <TIM_TI1_SetConfig+0x46>
 80029d6:	68fb      	ldr	r3, [r7, #12]
 80029d8:	4a1b      	ldr	r2, [pc, #108]	@ (8002a48 <TIM_TI1_SetConfig+0xb0>)
 80029da:	4293      	cmp	r3, r2
 80029dc:	d101      	bne.n	80029e2 <TIM_TI1_SetConfig+0x4a>
 80029de:	2301      	movs	r3, #1
 80029e0:	e000      	b.n	80029e4 <TIM_TI1_SetConfig+0x4c>
 80029e2:	2300      	movs	r3, #0
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d008      	beq.n	80029fa <TIM_TI1_SetConfig+0x62>
 80029e8:	697b      	ldr	r3, [r7, #20]
 80029ea:	f023 0303 	bic.w	r3, r3, #3
 80029ee:	617b      	str	r3, [r7, #20]
 80029f0:	697a      	ldr	r2, [r7, #20]
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	4313      	orrs	r3, r2
 80029f6:	617b      	str	r3, [r7, #20]
 80029f8:	e003      	b.n	8002a02 <TIM_TI1_SetConfig+0x6a>
 80029fa:	697b      	ldr	r3, [r7, #20]
 80029fc:	f043 0301 	orr.w	r3, r3, #1
 8002a00:	617b      	str	r3, [r7, #20]
 8002a02:	697b      	ldr	r3, [r7, #20]
 8002a04:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002a08:	617b      	str	r3, [r7, #20]
 8002a0a:	683b      	ldr	r3, [r7, #0]
 8002a0c:	011b      	lsls	r3, r3, #4
 8002a0e:	b2db      	uxtb	r3, r3
 8002a10:	697a      	ldr	r2, [r7, #20]
 8002a12:	4313      	orrs	r3, r2
 8002a14:	617b      	str	r3, [r7, #20]
 8002a16:	693b      	ldr	r3, [r7, #16]
 8002a18:	f023 030a 	bic.w	r3, r3, #10
 8002a1c:	613b      	str	r3, [r7, #16]
 8002a1e:	68bb      	ldr	r3, [r7, #8]
 8002a20:	f003 030a 	and.w	r3, r3, #10
 8002a24:	693a      	ldr	r2, [r7, #16]
 8002a26:	4313      	orrs	r3, r2
 8002a28:	613b      	str	r3, [r7, #16]
 8002a2a:	68fb      	ldr	r3, [r7, #12]
 8002a2c:	697a      	ldr	r2, [r7, #20]
 8002a2e:	619a      	str	r2, [r3, #24]
 8002a30:	68fb      	ldr	r3, [r7, #12]
 8002a32:	693a      	ldr	r2, [r7, #16]
 8002a34:	621a      	str	r2, [r3, #32]
 8002a36:	bf00      	nop
 8002a38:	371c      	adds	r7, #28
 8002a3a:	46bd      	mov	sp, r7
 8002a3c:	bc80      	pop	{r7}
 8002a3e:	4770      	bx	lr
 8002a40:	40012c00 	.word	0x40012c00
 8002a44:	40000400 	.word	0x40000400
 8002a48:	40000800 	.word	0x40000800

08002a4c <TIM_TI1_ConfigInputStage>:
 8002a4c:	b480      	push	{r7}
 8002a4e:	b087      	sub	sp, #28
 8002a50:	af00      	add	r7, sp, #0
 8002a52:	60f8      	str	r0, [r7, #12]
 8002a54:	60b9      	str	r1, [r7, #8]
 8002a56:	607a      	str	r2, [r7, #4]
 8002a58:	68fb      	ldr	r3, [r7, #12]
 8002a5a:	6a1b      	ldr	r3, [r3, #32]
 8002a5c:	617b      	str	r3, [r7, #20]
 8002a5e:	68fb      	ldr	r3, [r7, #12]
 8002a60:	6a1b      	ldr	r3, [r3, #32]
 8002a62:	f023 0201 	bic.w	r2, r3, #1
 8002a66:	68fb      	ldr	r3, [r7, #12]
 8002a68:	621a      	str	r2, [r3, #32]
 8002a6a:	68fb      	ldr	r3, [r7, #12]
 8002a6c:	699b      	ldr	r3, [r3, #24]
 8002a6e:	613b      	str	r3, [r7, #16]
 8002a70:	693b      	ldr	r3, [r7, #16]
 8002a72:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002a76:	613b      	str	r3, [r7, #16]
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	011b      	lsls	r3, r3, #4
 8002a7c:	693a      	ldr	r2, [r7, #16]
 8002a7e:	4313      	orrs	r3, r2
 8002a80:	613b      	str	r3, [r7, #16]
 8002a82:	697b      	ldr	r3, [r7, #20]
 8002a84:	f023 030a 	bic.w	r3, r3, #10
 8002a88:	617b      	str	r3, [r7, #20]
 8002a8a:	697a      	ldr	r2, [r7, #20]
 8002a8c:	68bb      	ldr	r3, [r7, #8]
 8002a8e:	4313      	orrs	r3, r2
 8002a90:	617b      	str	r3, [r7, #20]
 8002a92:	68fb      	ldr	r3, [r7, #12]
 8002a94:	693a      	ldr	r2, [r7, #16]
 8002a96:	619a      	str	r2, [r3, #24]
 8002a98:	68fb      	ldr	r3, [r7, #12]
 8002a9a:	697a      	ldr	r2, [r7, #20]
 8002a9c:	621a      	str	r2, [r3, #32]
 8002a9e:	bf00      	nop
 8002aa0:	371c      	adds	r7, #28
 8002aa2:	46bd      	mov	sp, r7
 8002aa4:	bc80      	pop	{r7}
 8002aa6:	4770      	bx	lr

08002aa8 <TIM_TI2_SetConfig>:
 8002aa8:	b480      	push	{r7}
 8002aaa:	b087      	sub	sp, #28
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	60f8      	str	r0, [r7, #12]
 8002ab0:	60b9      	str	r1, [r7, #8]
 8002ab2:	607a      	str	r2, [r7, #4]
 8002ab4:	603b      	str	r3, [r7, #0]
 8002ab6:	68fb      	ldr	r3, [r7, #12]
 8002ab8:	6a1b      	ldr	r3, [r3, #32]
 8002aba:	617b      	str	r3, [r7, #20]
 8002abc:	68fb      	ldr	r3, [r7, #12]
 8002abe:	6a1b      	ldr	r3, [r3, #32]
 8002ac0:	f023 0210 	bic.w	r2, r3, #16
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	621a      	str	r2, [r3, #32]
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	699b      	ldr	r3, [r3, #24]
 8002acc:	613b      	str	r3, [r7, #16]
 8002ace:	693b      	ldr	r3, [r7, #16]
 8002ad0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002ad4:	613b      	str	r3, [r7, #16]
 8002ad6:	687b      	ldr	r3, [r7, #4]
 8002ad8:	021b      	lsls	r3, r3, #8
 8002ada:	693a      	ldr	r2, [r7, #16]
 8002adc:	4313      	orrs	r3, r2
 8002ade:	613b      	str	r3, [r7, #16]
 8002ae0:	693b      	ldr	r3, [r7, #16]
 8002ae2:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002ae6:	613b      	str	r3, [r7, #16]
 8002ae8:	683b      	ldr	r3, [r7, #0]
 8002aea:	031b      	lsls	r3, r3, #12
 8002aec:	b29b      	uxth	r3, r3
 8002aee:	693a      	ldr	r2, [r7, #16]
 8002af0:	4313      	orrs	r3, r2
 8002af2:	613b      	str	r3, [r7, #16]
 8002af4:	697b      	ldr	r3, [r7, #20]
 8002af6:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002afa:	617b      	str	r3, [r7, #20]
 8002afc:	68bb      	ldr	r3, [r7, #8]
 8002afe:	011b      	lsls	r3, r3, #4
 8002b00:	f003 03a0 	and.w	r3, r3, #160	@ 0xa0
 8002b04:	697a      	ldr	r2, [r7, #20]
 8002b06:	4313      	orrs	r3, r2
 8002b08:	617b      	str	r3, [r7, #20]
 8002b0a:	68fb      	ldr	r3, [r7, #12]
 8002b0c:	693a      	ldr	r2, [r7, #16]
 8002b0e:	619a      	str	r2, [r3, #24]
 8002b10:	68fb      	ldr	r3, [r7, #12]
 8002b12:	697a      	ldr	r2, [r7, #20]
 8002b14:	621a      	str	r2, [r3, #32]
 8002b16:	bf00      	nop
 8002b18:	371c      	adds	r7, #28
 8002b1a:	46bd      	mov	sp, r7
 8002b1c:	bc80      	pop	{r7}
 8002b1e:	4770      	bx	lr

08002b20 <TIM_TI2_ConfigInputStage>:
 8002b20:	b480      	push	{r7}
 8002b22:	b087      	sub	sp, #28
 8002b24:	af00      	add	r7, sp, #0
 8002b26:	60f8      	str	r0, [r7, #12]
 8002b28:	60b9      	str	r1, [r7, #8]
 8002b2a:	607a      	str	r2, [r7, #4]
 8002b2c:	68fb      	ldr	r3, [r7, #12]
 8002b2e:	6a1b      	ldr	r3, [r3, #32]
 8002b30:	617b      	str	r3, [r7, #20]
 8002b32:	68fb      	ldr	r3, [r7, #12]
 8002b34:	6a1b      	ldr	r3, [r3, #32]
 8002b36:	f023 0210 	bic.w	r2, r3, #16
 8002b3a:	68fb      	ldr	r3, [r7, #12]
 8002b3c:	621a      	str	r2, [r3, #32]
 8002b3e:	68fb      	ldr	r3, [r7, #12]
 8002b40:	699b      	ldr	r3, [r3, #24]
 8002b42:	613b      	str	r3, [r7, #16]
 8002b44:	693b      	ldr	r3, [r7, #16]
 8002b46:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002b4a:	613b      	str	r3, [r7, #16]
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	031b      	lsls	r3, r3, #12
 8002b50:	693a      	ldr	r2, [r7, #16]
 8002b52:	4313      	orrs	r3, r2
 8002b54:	613b      	str	r3, [r7, #16]
 8002b56:	697b      	ldr	r3, [r7, #20]
 8002b58:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002b5c:	617b      	str	r3, [r7, #20]
 8002b5e:	68bb      	ldr	r3, [r7, #8]
 8002b60:	011b      	lsls	r3, r3, #4
 8002b62:	697a      	ldr	r2, [r7, #20]
 8002b64:	4313      	orrs	r3, r2
 8002b66:	617b      	str	r3, [r7, #20]
 8002b68:	68fb      	ldr	r3, [r7, #12]
 8002b6a:	693a      	ldr	r2, [r7, #16]
 8002b6c:	619a      	str	r2, [r3, #24]
 8002b6e:	68fb      	ldr	r3, [r7, #12]
 8002b70:	697a      	ldr	r2, [r7, #20]
 8002b72:	621a      	str	r2, [r3, #32]
 8002b74:	bf00      	nop
 8002b76:	371c      	adds	r7, #28
 8002b78:	46bd      	mov	sp, r7
 8002b7a:	bc80      	pop	{r7}
 8002b7c:	4770      	bx	lr

08002b7e <TIM_TI3_SetConfig>:
 8002b7e:	b480      	push	{r7}
 8002b80:	b087      	sub	sp, #28
 8002b82:	af00      	add	r7, sp, #0
 8002b84:	60f8      	str	r0, [r7, #12]
 8002b86:	60b9      	str	r1, [r7, #8]
 8002b88:	607a      	str	r2, [r7, #4]
 8002b8a:	603b      	str	r3, [r7, #0]
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	6a1b      	ldr	r3, [r3, #32]
 8002b90:	617b      	str	r3, [r7, #20]
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	6a1b      	ldr	r3, [r3, #32]
 8002b96:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002b9a:	68fb      	ldr	r3, [r7, #12]
 8002b9c:	621a      	str	r2, [r3, #32]
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	69db      	ldr	r3, [r3, #28]
 8002ba2:	613b      	str	r3, [r7, #16]
 8002ba4:	693b      	ldr	r3, [r7, #16]
 8002ba6:	f023 0303 	bic.w	r3, r3, #3
 8002baa:	613b      	str	r3, [r7, #16]
 8002bac:	693a      	ldr	r2, [r7, #16]
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	4313      	orrs	r3, r2
 8002bb2:	613b      	str	r3, [r7, #16]
 8002bb4:	693b      	ldr	r3, [r7, #16]
 8002bb6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002bba:	613b      	str	r3, [r7, #16]
 8002bbc:	683b      	ldr	r3, [r7, #0]
 8002bbe:	011b      	lsls	r3, r3, #4
 8002bc0:	b2db      	uxtb	r3, r3
 8002bc2:	693a      	ldr	r2, [r7, #16]
 8002bc4:	4313      	orrs	r3, r2
 8002bc6:	613b      	str	r3, [r7, #16]
 8002bc8:	697b      	ldr	r3, [r7, #20]
 8002bca:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8002bce:	617b      	str	r3, [r7, #20]
 8002bd0:	68bb      	ldr	r3, [r7, #8]
 8002bd2:	021b      	lsls	r3, r3, #8
 8002bd4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002bd8:	697a      	ldr	r2, [r7, #20]
 8002bda:	4313      	orrs	r3, r2
 8002bdc:	617b      	str	r3, [r7, #20]
 8002bde:	68fb      	ldr	r3, [r7, #12]
 8002be0:	693a      	ldr	r2, [r7, #16]
 8002be2:	61da      	str	r2, [r3, #28]
 8002be4:	68fb      	ldr	r3, [r7, #12]
 8002be6:	697a      	ldr	r2, [r7, #20]
 8002be8:	621a      	str	r2, [r3, #32]
 8002bea:	bf00      	nop
 8002bec:	371c      	adds	r7, #28
 8002bee:	46bd      	mov	sp, r7
 8002bf0:	bc80      	pop	{r7}
 8002bf2:	4770      	bx	lr

08002bf4 <TIM_TI4_SetConfig>:
 8002bf4:	b480      	push	{r7}
 8002bf6:	b087      	sub	sp, #28
 8002bf8:	af00      	add	r7, sp, #0
 8002bfa:	60f8      	str	r0, [r7, #12]
 8002bfc:	60b9      	str	r1, [r7, #8]
 8002bfe:	607a      	str	r2, [r7, #4]
 8002c00:	603b      	str	r3, [r7, #0]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	6a1b      	ldr	r3, [r3, #32]
 8002c06:	617b      	str	r3, [r7, #20]
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	6a1b      	ldr	r3, [r3, #32]
 8002c0c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	621a      	str	r2, [r3, #32]
 8002c14:	68fb      	ldr	r3, [r7, #12]
 8002c16:	69db      	ldr	r3, [r3, #28]
 8002c18:	613b      	str	r3, [r7, #16]
 8002c1a:	693b      	ldr	r3, [r7, #16]
 8002c1c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002c20:	613b      	str	r3, [r7, #16]
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	021b      	lsls	r3, r3, #8
 8002c26:	693a      	ldr	r2, [r7, #16]
 8002c28:	4313      	orrs	r3, r2
 8002c2a:	613b      	str	r3, [r7, #16]
 8002c2c:	693b      	ldr	r3, [r7, #16]
 8002c2e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002c32:	613b      	str	r3, [r7, #16]
 8002c34:	683b      	ldr	r3, [r7, #0]
 8002c36:	031b      	lsls	r3, r3, #12
 8002c38:	b29b      	uxth	r3, r3
 8002c3a:	693a      	ldr	r2, [r7, #16]
 8002c3c:	4313      	orrs	r3, r2
 8002c3e:	613b      	str	r3, [r7, #16]
 8002c40:	697b      	ldr	r3, [r7, #20]
 8002c42:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8002c46:	617b      	str	r3, [r7, #20]
 8002c48:	68bb      	ldr	r3, [r7, #8]
 8002c4a:	031b      	lsls	r3, r3, #12
 8002c4c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8002c50:	697a      	ldr	r2, [r7, #20]
 8002c52:	4313      	orrs	r3, r2
 8002c54:	617b      	str	r3, [r7, #20]
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	693a      	ldr	r2, [r7, #16]
 8002c5a:	61da      	str	r2, [r3, #28]
 8002c5c:	68fb      	ldr	r3, [r7, #12]
 8002c5e:	697a      	ldr	r2, [r7, #20]
 8002c60:	621a      	str	r2, [r3, #32]
 8002c62:	bf00      	nop
 8002c64:	371c      	adds	r7, #28
 8002c66:	46bd      	mov	sp, r7
 8002c68:	bc80      	pop	{r7}
 8002c6a:	4770      	bx	lr

08002c6c <TIM_ITRx_SetConfig>:
 8002c6c:	b480      	push	{r7}
 8002c6e:	b085      	sub	sp, #20
 8002c70:	af00      	add	r7, sp, #0
 8002c72:	6078      	str	r0, [r7, #4]
 8002c74:	6039      	str	r1, [r7, #0]
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	689b      	ldr	r3, [r3, #8]
 8002c7a:	60fb      	str	r3, [r7, #12]
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002c82:	60fb      	str	r3, [r7, #12]
 8002c84:	683a      	ldr	r2, [r7, #0]
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	4313      	orrs	r3, r2
 8002c8a:	f043 0307 	orr.w	r3, r3, #7
 8002c8e:	60fb      	str	r3, [r7, #12]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	68fa      	ldr	r2, [r7, #12]
 8002c94:	609a      	str	r2, [r3, #8]
 8002c96:	bf00      	nop
 8002c98:	3714      	adds	r7, #20
 8002c9a:	46bd      	mov	sp, r7
 8002c9c:	bc80      	pop	{r7}
 8002c9e:	4770      	bx	lr

08002ca0 <TIM_ETR_SetConfig>:
 8002ca0:	b480      	push	{r7}
 8002ca2:	b087      	sub	sp, #28
 8002ca4:	af00      	add	r7, sp, #0
 8002ca6:	60f8      	str	r0, [r7, #12]
 8002ca8:	60b9      	str	r1, [r7, #8]
 8002caa:	607a      	str	r2, [r7, #4]
 8002cac:	603b      	str	r3, [r7, #0]
 8002cae:	68fb      	ldr	r3, [r7, #12]
 8002cb0:	689b      	ldr	r3, [r3, #8]
 8002cb2:	617b      	str	r3, [r7, #20]
 8002cb4:	697b      	ldr	r3, [r7, #20]
 8002cb6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002cba:	617b      	str	r3, [r7, #20]
 8002cbc:	683b      	ldr	r3, [r7, #0]
 8002cbe:	021a      	lsls	r2, r3, #8
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	431a      	orrs	r2, r3
 8002cc4:	68bb      	ldr	r3, [r7, #8]
 8002cc6:	4313      	orrs	r3, r2
 8002cc8:	697a      	ldr	r2, [r7, #20]
 8002cca:	4313      	orrs	r3, r2
 8002ccc:	617b      	str	r3, [r7, #20]
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	697a      	ldr	r2, [r7, #20]
 8002cd2:	609a      	str	r2, [r3, #8]
 8002cd4:	bf00      	nop
 8002cd6:	371c      	adds	r7, #28
 8002cd8:	46bd      	mov	sp, r7
 8002cda:	bc80      	pop	{r7}
 8002cdc:	4770      	bx	lr
	...

08002ce0 <HAL_TIMEx_MasterConfigSynchronization>:
 8002ce0:	b480      	push	{r7}
 8002ce2:	b085      	sub	sp, #20
 8002ce4:	af00      	add	r7, sp, #0
 8002ce6:	6078      	str	r0, [r7, #4]
 8002ce8:	6039      	str	r1, [r7, #0]
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002cf0:	2b01      	cmp	r3, #1
 8002cf2:	d101      	bne.n	8002cf8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002cf4:	2302      	movs	r3, #2
 8002cf6:	e046      	b.n	8002d86 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	2201      	movs	r2, #1
 8002cfc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	2202      	movs	r2, #2
 8002d04:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	685b      	ldr	r3, [r3, #4]
 8002d0e:	60fb      	str	r3, [r7, #12]
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	681b      	ldr	r3, [r3, #0]
 8002d14:	689b      	ldr	r3, [r3, #8]
 8002d16:	60bb      	str	r3, [r7, #8]
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002d1e:	60fb      	str	r3, [r7, #12]
 8002d20:	683b      	ldr	r3, [r7, #0]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	68fa      	ldr	r2, [r7, #12]
 8002d26:	4313      	orrs	r3, r2
 8002d28:	60fb      	str	r3, [r7, #12]
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	68fa      	ldr	r2, [r7, #12]
 8002d30:	605a      	str	r2, [r3, #4]
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	4a16      	ldr	r2, [pc, #88]	@ (8002d90 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002d38:	4293      	cmp	r3, r2
 8002d3a:	d00e      	beq.n	8002d5a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002d44:	d009      	beq.n	8002d5a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	4a12      	ldr	r2, [pc, #72]	@ (8002d94 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002d4c:	4293      	cmp	r3, r2
 8002d4e:	d004      	beq.n	8002d5a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	4a10      	ldr	r2, [pc, #64]	@ (8002d98 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8002d56:	4293      	cmp	r3, r2
 8002d58:	d10c      	bne.n	8002d74 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8002d5a:	68bb      	ldr	r3, [r7, #8]
 8002d5c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002d60:	60bb      	str	r3, [r7, #8]
 8002d62:	683b      	ldr	r3, [r7, #0]
 8002d64:	685b      	ldr	r3, [r3, #4]
 8002d66:	68ba      	ldr	r2, [r7, #8]
 8002d68:	4313      	orrs	r3, r2
 8002d6a:	60bb      	str	r3, [r7, #8]
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	68ba      	ldr	r2, [r7, #8]
 8002d72:	609a      	str	r2, [r3, #8]
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	2201      	movs	r2, #1
 8002d78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	2200      	movs	r2, #0
 8002d80:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d84:	2300      	movs	r3, #0
 8002d86:	4618      	mov	r0, r3
 8002d88:	3714      	adds	r7, #20
 8002d8a:	46bd      	mov	sp, r7
 8002d8c:	bc80      	pop	{r7}
 8002d8e:	4770      	bx	lr
 8002d90:	40012c00 	.word	0x40012c00
 8002d94:	40000400 	.word	0x40000400
 8002d98:	40000800 	.word	0x40000800

08002d9c <HAL_TIMEx_CommutCallback>:
 8002d9c:	b480      	push	{r7}
 8002d9e:	b083      	sub	sp, #12
 8002da0:	af00      	add	r7, sp, #0
 8002da2:	6078      	str	r0, [r7, #4]
 8002da4:	bf00      	nop
 8002da6:	370c      	adds	r7, #12
 8002da8:	46bd      	mov	sp, r7
 8002daa:	bc80      	pop	{r7}
 8002dac:	4770      	bx	lr

08002dae <HAL_TIMEx_BreakCallback>:
 8002dae:	b480      	push	{r7}
 8002db0:	b083      	sub	sp, #12
 8002db2:	af00      	add	r7, sp, #0
 8002db4:	6078      	str	r0, [r7, #4]
 8002db6:	bf00      	nop
 8002db8:	370c      	adds	r7, #12
 8002dba:	46bd      	mov	sp, r7
 8002dbc:	bc80      	pop	{r7}
 8002dbe:	4770      	bx	lr

08002dc0 <HAL_UART_Init>:
 8002dc0:	b580      	push	{r7, lr}
 8002dc2:	b082      	sub	sp, #8
 8002dc4:	af00      	add	r7, sp, #0
 8002dc6:	6078      	str	r0, [r7, #4]
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d101      	bne.n	8002dd2 <HAL_UART_Init+0x12>
 8002dce:	2301      	movs	r3, #1
 8002dd0:	e042      	b.n	8002e58 <HAL_UART_Init+0x98>
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002dd8:	b2db      	uxtb	r3, r3
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d106      	bne.n	8002dec <HAL_UART_Init+0x2c>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	2200      	movs	r2, #0
 8002de2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002de6:	6878      	ldr	r0, [r7, #4]
 8002de8:	f7fe f910 	bl	800100c <HAL_UART_MspInit>
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	2224      	movs	r2, #36	@ 0x24
 8002df0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	68da      	ldr	r2, [r3, #12]
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002e02:	60da      	str	r2, [r3, #12]
 8002e04:	6878      	ldr	r0, [r7, #4]
 8002e06:	f000 fcff 	bl	8003808 <UART_SetConfig>
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	691a      	ldr	r2, [r3, #16]
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8002e18:	611a      	str	r2, [r3, #16]
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	695a      	ldr	r2, [r3, #20]
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002e28:	615a      	str	r2, [r3, #20]
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	68da      	ldr	r2, [r3, #12]
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002e38:	60da      	str	r2, [r3, #12]
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	2220      	movs	r2, #32
 8002e44:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	2220      	movs	r2, #32
 8002e4c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	2200      	movs	r2, #0
 8002e54:	635a      	str	r2, [r3, #52]	@ 0x34
 8002e56:	2300      	movs	r3, #0
 8002e58:	4618      	mov	r0, r3
 8002e5a:	3708      	adds	r7, #8
 8002e5c:	46bd      	mov	sp, r7
 8002e5e:	bd80      	pop	{r7, pc}

08002e60 <HAL_UART_Transmit_IT>:
 8002e60:	b480      	push	{r7}
 8002e62:	b085      	sub	sp, #20
 8002e64:	af00      	add	r7, sp, #0
 8002e66:	60f8      	str	r0, [r7, #12]
 8002e68:	60b9      	str	r1, [r7, #8]
 8002e6a:	4613      	mov	r3, r2
 8002e6c:	80fb      	strh	r3, [r7, #6]
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002e74:	b2db      	uxtb	r3, r3
 8002e76:	2b20      	cmp	r3, #32
 8002e78:	d121      	bne.n	8002ebe <HAL_UART_Transmit_IT+0x5e>
 8002e7a:	68bb      	ldr	r3, [r7, #8]
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	d002      	beq.n	8002e86 <HAL_UART_Transmit_IT+0x26>
 8002e80:	88fb      	ldrh	r3, [r7, #6]
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d101      	bne.n	8002e8a <HAL_UART_Transmit_IT+0x2a>
 8002e86:	2301      	movs	r3, #1
 8002e88:	e01a      	b.n	8002ec0 <HAL_UART_Transmit_IT+0x60>
 8002e8a:	68fb      	ldr	r3, [r7, #12]
 8002e8c:	68ba      	ldr	r2, [r7, #8]
 8002e8e:	621a      	str	r2, [r3, #32]
 8002e90:	68fb      	ldr	r3, [r7, #12]
 8002e92:	88fa      	ldrh	r2, [r7, #6]
 8002e94:	849a      	strh	r2, [r3, #36]	@ 0x24
 8002e96:	68fb      	ldr	r3, [r7, #12]
 8002e98:	88fa      	ldrh	r2, [r7, #6]
 8002e9a:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002e9c:	68fb      	ldr	r3, [r7, #12]
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ea2:	68fb      	ldr	r3, [r7, #12]
 8002ea4:	2221      	movs	r2, #33	@ 0x21
 8002ea6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	68da      	ldr	r2, [r3, #12]
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8002eb8:	60da      	str	r2, [r3, #12]
 8002eba:	2300      	movs	r3, #0
 8002ebc:	e000      	b.n	8002ec0 <HAL_UART_Transmit_IT+0x60>
 8002ebe:	2302      	movs	r3, #2
 8002ec0:	4618      	mov	r0, r3
 8002ec2:	3714      	adds	r7, #20
 8002ec4:	46bd      	mov	sp, r7
 8002ec6:	bc80      	pop	{r7}
 8002ec8:	4770      	bx	lr

08002eca <HAL_UART_Receive_IT>:
 8002eca:	b580      	push	{r7, lr}
 8002ecc:	b084      	sub	sp, #16
 8002ece:	af00      	add	r7, sp, #0
 8002ed0:	60f8      	str	r0, [r7, #12]
 8002ed2:	60b9      	str	r1, [r7, #8]
 8002ed4:	4613      	mov	r3, r2
 8002ed6:	80fb      	strh	r3, [r7, #6]
 8002ed8:	68fb      	ldr	r3, [r7, #12]
 8002eda:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8002ede:	b2db      	uxtb	r3, r3
 8002ee0:	2b20      	cmp	r3, #32
 8002ee2:	d112      	bne.n	8002f0a <HAL_UART_Receive_IT+0x40>
 8002ee4:	68bb      	ldr	r3, [r7, #8]
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d002      	beq.n	8002ef0 <HAL_UART_Receive_IT+0x26>
 8002eea:	88fb      	ldrh	r3, [r7, #6]
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d101      	bne.n	8002ef4 <HAL_UART_Receive_IT+0x2a>
 8002ef0:	2301      	movs	r3, #1
 8002ef2:	e00b      	b.n	8002f0c <HAL_UART_Receive_IT+0x42>
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	2200      	movs	r2, #0
 8002ef8:	631a      	str	r2, [r3, #48]	@ 0x30
 8002efa:	88fb      	ldrh	r3, [r7, #6]
 8002efc:	461a      	mov	r2, r3
 8002efe:	68b9      	ldr	r1, [r7, #8]
 8002f00:	68f8      	ldr	r0, [r7, #12]
 8002f02:	f000 faad 	bl	8003460 <UART_Start_Receive_IT>
 8002f06:	4603      	mov	r3, r0
 8002f08:	e000      	b.n	8002f0c <HAL_UART_Receive_IT+0x42>
 8002f0a:	2302      	movs	r3, #2
 8002f0c:	4618      	mov	r0, r3
 8002f0e:	3710      	adds	r7, #16
 8002f10:	46bd      	mov	sp, r7
 8002f12:	bd80      	pop	{r7, pc}

08002f14 <HAL_UART_IRQHandler>:
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b0ba      	sub	sp, #232	@ 0xe8
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	68db      	ldr	r3, [r3, #12]
 8002f2c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	695b      	ldr	r3, [r3, #20]
 8002f36:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8002f3a:	2300      	movs	r3, #0
 8002f3c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002f40:	2300      	movs	r3, #0
 8002f42:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8002f46:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f4a:	f003 030f 	and.w	r3, r3, #15
 8002f4e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002f52:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d10f      	bne.n	8002f7a <HAL_UART_IRQHandler+0x66>
 8002f5a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f5e:	f003 0320 	and.w	r3, r3, #32
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d009      	beq.n	8002f7a <HAL_UART_IRQHandler+0x66>
 8002f66:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002f6a:	f003 0320 	and.w	r3, r3, #32
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d003      	beq.n	8002f7a <HAL_UART_IRQHandler+0x66>
 8002f72:	6878      	ldr	r0, [r7, #4]
 8002f74:	f000 fb8a 	bl	800368c <UART_Receive_IT>
 8002f78:	e25b      	b.n	8003432 <HAL_UART_IRQHandler+0x51e>
 8002f7a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	f000 80de 	beq.w	8003140 <HAL_UART_IRQHandler+0x22c>
 8002f84:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f88:	f003 0301 	and.w	r3, r3, #1
 8002f8c:	2b00      	cmp	r3, #0
 8002f8e:	d106      	bne.n	8002f9e <HAL_UART_IRQHandler+0x8a>
 8002f90:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002f94:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8002f98:	2b00      	cmp	r3, #0
 8002f9a:	f000 80d1 	beq.w	8003140 <HAL_UART_IRQHandler+0x22c>
 8002f9e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002fa2:	f003 0301 	and.w	r3, r3, #1
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	d00b      	beq.n	8002fc2 <HAL_UART_IRQHandler+0xae>
 8002faa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002fae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d005      	beq.n	8002fc2 <HAL_UART_IRQHandler+0xae>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fba:	f043 0201 	orr.w	r2, r3, #1
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	645a      	str	r2, [r3, #68]	@ 0x44
 8002fc2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002fc6:	f003 0304 	and.w	r3, r3, #4
 8002fca:	2b00      	cmp	r3, #0
 8002fcc:	d00b      	beq.n	8002fe6 <HAL_UART_IRQHandler+0xd2>
 8002fce:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002fd2:	f003 0301 	and.w	r3, r3, #1
 8002fd6:	2b00      	cmp	r3, #0
 8002fd8:	d005      	beq.n	8002fe6 <HAL_UART_IRQHandler+0xd2>
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fde:	f043 0202 	orr.w	r2, r3, #2
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	645a      	str	r2, [r3, #68]	@ 0x44
 8002fe6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002fea:	f003 0302 	and.w	r3, r3, #2
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d00b      	beq.n	800300a <HAL_UART_IRQHandler+0xf6>
 8002ff2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002ff6:	f003 0301 	and.w	r3, r3, #1
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d005      	beq.n	800300a <HAL_UART_IRQHandler+0xf6>
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003002:	f043 0204 	orr.w	r2, r3, #4
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	645a      	str	r2, [r3, #68]	@ 0x44
 800300a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800300e:	f003 0308 	and.w	r3, r3, #8
 8003012:	2b00      	cmp	r3, #0
 8003014:	d011      	beq.n	800303a <HAL_UART_IRQHandler+0x126>
 8003016:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800301a:	f003 0320 	and.w	r3, r3, #32
 800301e:	2b00      	cmp	r3, #0
 8003020:	d105      	bne.n	800302e <HAL_UART_IRQHandler+0x11a>
 8003022:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003026:	f003 0301 	and.w	r3, r3, #1
 800302a:	2b00      	cmp	r3, #0
 800302c:	d005      	beq.n	800303a <HAL_UART_IRQHandler+0x126>
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003032:	f043 0208 	orr.w	r2, r3, #8
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	645a      	str	r2, [r3, #68]	@ 0x44
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800303e:	2b00      	cmp	r3, #0
 8003040:	f000 81f2 	beq.w	8003428 <HAL_UART_IRQHandler+0x514>
 8003044:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003048:	f003 0320 	and.w	r3, r3, #32
 800304c:	2b00      	cmp	r3, #0
 800304e:	d008      	beq.n	8003062 <HAL_UART_IRQHandler+0x14e>
 8003050:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003054:	f003 0320 	and.w	r3, r3, #32
 8003058:	2b00      	cmp	r3, #0
 800305a:	d002      	beq.n	8003062 <HAL_UART_IRQHandler+0x14e>
 800305c:	6878      	ldr	r0, [r7, #4]
 800305e:	f000 fb15 	bl	800368c <UART_Receive_IT>
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	695b      	ldr	r3, [r3, #20]
 8003068:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800306c:	2b00      	cmp	r3, #0
 800306e:	bf14      	ite	ne
 8003070:	2301      	movne	r3, #1
 8003072:	2300      	moveq	r3, #0
 8003074:	b2db      	uxtb	r3, r3
 8003076:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800307e:	f003 0308 	and.w	r3, r3, #8
 8003082:	2b00      	cmp	r3, #0
 8003084:	d103      	bne.n	800308e <HAL_UART_IRQHandler+0x17a>
 8003086:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800308a:	2b00      	cmp	r3, #0
 800308c:	d04f      	beq.n	800312e <HAL_UART_IRQHandler+0x21a>
 800308e:	6878      	ldr	r0, [r7, #4]
 8003090:	f000 fa1f 	bl	80034d2 <UART_EndRxTransfer>
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	695b      	ldr	r3, [r3, #20]
 800309a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d041      	beq.n	8003126 <HAL_UART_IRQHandler+0x212>
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	3314      	adds	r3, #20
 80030a8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80030ac:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80030b0:	e853 3f00 	ldrex	r3, [r3]
 80030b4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80030b8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80030bc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80030c0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	3314      	adds	r3, #20
 80030ca:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80030ce:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80030d2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80030d6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80030da:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80030de:	e841 2300 	strex	r3, r2, [r1]
 80030e2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80030e6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80030ea:	2b00      	cmp	r3, #0
 80030ec:	d1d9      	bne.n	80030a2 <HAL_UART_IRQHandler+0x18e>
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d013      	beq.n	800311e <HAL_UART_IRQHandler+0x20a>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80030fa:	4a7e      	ldr	r2, [pc, #504]	@ (80032f4 <HAL_UART_IRQHandler+0x3e0>)
 80030fc:	635a      	str	r2, [r3, #52]	@ 0x34
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003102:	4618      	mov	r0, r3
 8003104:	f7fe f998 	bl	8001438 <HAL_DMA_Abort_IT>
 8003108:	4603      	mov	r3, r0
 800310a:	2b00      	cmp	r3, #0
 800310c:	d016      	beq.n	800313c <HAL_UART_IRQHandler+0x228>
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003112:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003114:	687a      	ldr	r2, [r7, #4]
 8003116:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003118:	4610      	mov	r0, r2
 800311a:	4798      	blx	r3
 800311c:	e00e      	b.n	800313c <HAL_UART_IRQHandler+0x228>
 800311e:	6878      	ldr	r0, [r7, #4]
 8003120:	f000 f98a 	bl	8003438 <HAL_UART_ErrorCallback>
 8003124:	e00a      	b.n	800313c <HAL_UART_IRQHandler+0x228>
 8003126:	6878      	ldr	r0, [r7, #4]
 8003128:	f000 f986 	bl	8003438 <HAL_UART_ErrorCallback>
 800312c:	e006      	b.n	800313c <HAL_UART_IRQHandler+0x228>
 800312e:	6878      	ldr	r0, [r7, #4]
 8003130:	f000 f982 	bl	8003438 <HAL_UART_ErrorCallback>
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	2200      	movs	r2, #0
 8003138:	645a      	str	r2, [r3, #68]	@ 0x44
 800313a:	e175      	b.n	8003428 <HAL_UART_IRQHandler+0x514>
 800313c:	bf00      	nop
 800313e:	e173      	b.n	8003428 <HAL_UART_IRQHandler+0x514>
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003144:	2b01      	cmp	r3, #1
 8003146:	f040 814f 	bne.w	80033e8 <HAL_UART_IRQHandler+0x4d4>
 800314a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800314e:	f003 0310 	and.w	r3, r3, #16
 8003152:	2b00      	cmp	r3, #0
 8003154:	f000 8148 	beq.w	80033e8 <HAL_UART_IRQHandler+0x4d4>
 8003158:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800315c:	f003 0310 	and.w	r3, r3, #16
 8003160:	2b00      	cmp	r3, #0
 8003162:	f000 8141 	beq.w	80033e8 <HAL_UART_IRQHandler+0x4d4>
 8003166:	2300      	movs	r3, #0
 8003168:	60bb      	str	r3, [r7, #8]
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	60bb      	str	r3, [r7, #8]
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	685b      	ldr	r3, [r3, #4]
 8003178:	60bb      	str	r3, [r7, #8]
 800317a:	68bb      	ldr	r3, [r7, #8]
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	681b      	ldr	r3, [r3, #0]
 8003180:	695b      	ldr	r3, [r3, #20]
 8003182:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003186:	2b00      	cmp	r3, #0
 8003188:	f000 80b6 	beq.w	80032f8 <HAL_UART_IRQHandler+0x3e4>
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	685b      	ldr	r3, [r3, #4]
 8003194:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8003198:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800319c:	2b00      	cmp	r3, #0
 800319e:	f000 8145 	beq.w	800342c <HAL_UART_IRQHandler+0x518>
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80031a6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80031aa:	429a      	cmp	r2, r3
 80031ac:	f080 813e 	bcs.w	800342c <HAL_UART_IRQHandler+0x518>
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80031b6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80031bc:	699b      	ldr	r3, [r3, #24]
 80031be:	2b20      	cmp	r3, #32
 80031c0:	f000 8088 	beq.w	80032d4 <HAL_UART_IRQHandler+0x3c0>
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	330c      	adds	r3, #12
 80031ca:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80031ce:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80031d2:	e853 3f00 	ldrex	r3, [r3]
 80031d6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80031da:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80031de:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80031e2:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	330c      	adds	r3, #12
 80031ec:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80031f0:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80031f4:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80031f8:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80031fc:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8003200:	e841 2300 	strex	r3, r2, [r1]
 8003204:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003208:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800320c:	2b00      	cmp	r3, #0
 800320e:	d1d9      	bne.n	80031c4 <HAL_UART_IRQHandler+0x2b0>
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	3314      	adds	r3, #20
 8003216:	677b      	str	r3, [r7, #116]	@ 0x74
 8003218:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800321a:	e853 3f00 	ldrex	r3, [r3]
 800321e:	673b      	str	r3, [r7, #112]	@ 0x70
 8003220:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003222:	f023 0301 	bic.w	r3, r3, #1
 8003226:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	3314      	adds	r3, #20
 8003230:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8003234:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8003238:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800323a:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800323c:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8003240:	e841 2300 	strex	r3, r2, [r1]
 8003244:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003246:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003248:	2b00      	cmp	r3, #0
 800324a:	d1e1      	bne.n	8003210 <HAL_UART_IRQHandler+0x2fc>
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	3314      	adds	r3, #20
 8003252:	663b      	str	r3, [r7, #96]	@ 0x60
 8003254:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003256:	e853 3f00 	ldrex	r3, [r3]
 800325a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800325c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800325e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003262:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	3314      	adds	r3, #20
 800326c:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8003270:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8003272:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003274:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8003276:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8003278:	e841 2300 	strex	r3, r2, [r1]
 800327c:	667b      	str	r3, [r7, #100]	@ 0x64
 800327e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003280:	2b00      	cmp	r3, #0
 8003282:	d1e3      	bne.n	800324c <HAL_UART_IRQHandler+0x338>
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	2220      	movs	r2, #32
 8003288:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	2200      	movs	r2, #0
 8003290:	631a      	str	r2, [r3, #48]	@ 0x30
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	330c      	adds	r3, #12
 8003298:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800329a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800329c:	e853 3f00 	ldrex	r3, [r3]
 80032a0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80032a2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80032a4:	f023 0310 	bic.w	r3, r3, #16
 80032a8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	330c      	adds	r3, #12
 80032b2:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80032b6:	65ba      	str	r2, [r7, #88]	@ 0x58
 80032b8:	657b      	str	r3, [r7, #84]	@ 0x54
 80032ba:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80032bc:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80032be:	e841 2300 	strex	r3, r2, [r1]
 80032c2:	653b      	str	r3, [r7, #80]	@ 0x50
 80032c4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80032c6:	2b00      	cmp	r3, #0
 80032c8:	d1e3      	bne.n	8003292 <HAL_UART_IRQHandler+0x37e>
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80032ce:	4618      	mov	r0, r3
 80032d0:	f7fe f877 	bl	80013c2 <HAL_DMA_Abort>
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	2202      	movs	r2, #2
 80032d8:	635a      	str	r2, [r3, #52]	@ 0x34
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80032e2:	b29b      	uxth	r3, r3
 80032e4:	1ad3      	subs	r3, r2, r3
 80032e6:	b29b      	uxth	r3, r3
 80032e8:	4619      	mov	r1, r3
 80032ea:	6878      	ldr	r0, [r7, #4]
 80032ec:	f000 f8ad 	bl	800344a <HAL_UARTEx_RxEventCallback>
 80032f0:	e09c      	b.n	800342c <HAL_UART_IRQHandler+0x518>
 80032f2:	bf00      	nop
 80032f4:	08003597 	.word	0x08003597
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003300:	b29b      	uxth	r3, r3
 8003302:	1ad3      	subs	r3, r2, r3
 8003304:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800330c:	b29b      	uxth	r3, r3
 800330e:	2b00      	cmp	r3, #0
 8003310:	f000 808e 	beq.w	8003430 <HAL_UART_IRQHandler+0x51c>
 8003314:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003318:	2b00      	cmp	r3, #0
 800331a:	f000 8089 	beq.w	8003430 <HAL_UART_IRQHandler+0x51c>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	330c      	adds	r3, #12
 8003324:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003326:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003328:	e853 3f00 	ldrex	r3, [r3]
 800332c:	637b      	str	r3, [r7, #52]	@ 0x34
 800332e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003330:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003334:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	330c      	adds	r3, #12
 800333e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8003342:	647a      	str	r2, [r7, #68]	@ 0x44
 8003344:	643b      	str	r3, [r7, #64]	@ 0x40
 8003346:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8003348:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800334a:	e841 2300 	strex	r3, r2, [r1]
 800334e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003350:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003352:	2b00      	cmp	r3, #0
 8003354:	d1e3      	bne.n	800331e <HAL_UART_IRQHandler+0x40a>
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	3314      	adds	r3, #20
 800335c:	627b      	str	r3, [r7, #36]	@ 0x24
 800335e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003360:	e853 3f00 	ldrex	r3, [r3]
 8003364:	623b      	str	r3, [r7, #32]
 8003366:	6a3b      	ldr	r3, [r7, #32]
 8003368:	f023 0301 	bic.w	r3, r3, #1
 800336c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	3314      	adds	r3, #20
 8003376:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800337a:	633a      	str	r2, [r7, #48]	@ 0x30
 800337c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800337e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8003380:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003382:	e841 2300 	strex	r3, r2, [r1]
 8003386:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003388:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800338a:	2b00      	cmp	r3, #0
 800338c:	d1e3      	bne.n	8003356 <HAL_UART_IRQHandler+0x442>
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	2220      	movs	r2, #32
 8003392:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	2200      	movs	r2, #0
 800339a:	631a      	str	r2, [r3, #48]	@ 0x30
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	330c      	adds	r3, #12
 80033a2:	613b      	str	r3, [r7, #16]
 80033a4:	693b      	ldr	r3, [r7, #16]
 80033a6:	e853 3f00 	ldrex	r3, [r3]
 80033aa:	60fb      	str	r3, [r7, #12]
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	f023 0310 	bic.w	r3, r3, #16
 80033b2:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	330c      	adds	r3, #12
 80033bc:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80033c0:	61fa      	str	r2, [r7, #28]
 80033c2:	61bb      	str	r3, [r7, #24]
 80033c4:	69b9      	ldr	r1, [r7, #24]
 80033c6:	69fa      	ldr	r2, [r7, #28]
 80033c8:	e841 2300 	strex	r3, r2, [r1]
 80033cc:	617b      	str	r3, [r7, #20]
 80033ce:	697b      	ldr	r3, [r7, #20]
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	d1e3      	bne.n	800339c <HAL_UART_IRQHandler+0x488>
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	2202      	movs	r2, #2
 80033d8:	635a      	str	r2, [r3, #52]	@ 0x34
 80033da:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80033de:	4619      	mov	r1, r3
 80033e0:	6878      	ldr	r0, [r7, #4]
 80033e2:	f000 f832 	bl	800344a <HAL_UARTEx_RxEventCallback>
 80033e6:	e023      	b.n	8003430 <HAL_UART_IRQHandler+0x51c>
 80033e8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80033ec:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80033f0:	2b00      	cmp	r3, #0
 80033f2:	d009      	beq.n	8003408 <HAL_UART_IRQHandler+0x4f4>
 80033f4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80033f8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d003      	beq.n	8003408 <HAL_UART_IRQHandler+0x4f4>
 8003400:	6878      	ldr	r0, [r7, #4]
 8003402:	f000 f8dc 	bl	80035be <UART_Transmit_IT>
 8003406:	e014      	b.n	8003432 <HAL_UART_IRQHandler+0x51e>
 8003408:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800340c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003410:	2b00      	cmp	r3, #0
 8003412:	d00e      	beq.n	8003432 <HAL_UART_IRQHandler+0x51e>
 8003414:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003418:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800341c:	2b00      	cmp	r3, #0
 800341e:	d008      	beq.n	8003432 <HAL_UART_IRQHandler+0x51e>
 8003420:	6878      	ldr	r0, [r7, #4]
 8003422:	f000 f91b 	bl	800365c <UART_EndTransmit_IT>
 8003426:	e004      	b.n	8003432 <HAL_UART_IRQHandler+0x51e>
 8003428:	bf00      	nop
 800342a:	e002      	b.n	8003432 <HAL_UART_IRQHandler+0x51e>
 800342c:	bf00      	nop
 800342e:	e000      	b.n	8003432 <HAL_UART_IRQHandler+0x51e>
 8003430:	bf00      	nop
 8003432:	37e8      	adds	r7, #232	@ 0xe8
 8003434:	46bd      	mov	sp, r7
 8003436:	bd80      	pop	{r7, pc}

08003438 <HAL_UART_ErrorCallback>:
 8003438:	b480      	push	{r7}
 800343a:	b083      	sub	sp, #12
 800343c:	af00      	add	r7, sp, #0
 800343e:	6078      	str	r0, [r7, #4]
 8003440:	bf00      	nop
 8003442:	370c      	adds	r7, #12
 8003444:	46bd      	mov	sp, r7
 8003446:	bc80      	pop	{r7}
 8003448:	4770      	bx	lr

0800344a <HAL_UARTEx_RxEventCallback>:
 800344a:	b480      	push	{r7}
 800344c:	b083      	sub	sp, #12
 800344e:	af00      	add	r7, sp, #0
 8003450:	6078      	str	r0, [r7, #4]
 8003452:	460b      	mov	r3, r1
 8003454:	807b      	strh	r3, [r7, #2]
 8003456:	bf00      	nop
 8003458:	370c      	adds	r7, #12
 800345a:	46bd      	mov	sp, r7
 800345c:	bc80      	pop	{r7}
 800345e:	4770      	bx	lr

08003460 <UART_Start_Receive_IT>:
 8003460:	b480      	push	{r7}
 8003462:	b085      	sub	sp, #20
 8003464:	af00      	add	r7, sp, #0
 8003466:	60f8      	str	r0, [r7, #12]
 8003468:	60b9      	str	r1, [r7, #8]
 800346a:	4613      	mov	r3, r2
 800346c:	80fb      	strh	r3, [r7, #6]
 800346e:	68fb      	ldr	r3, [r7, #12]
 8003470:	68ba      	ldr	r2, [r7, #8]
 8003472:	629a      	str	r2, [r3, #40]	@ 0x28
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	88fa      	ldrh	r2, [r7, #6]
 8003478:	859a      	strh	r2, [r3, #44]	@ 0x2c
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	88fa      	ldrh	r2, [r7, #6]
 800347e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003480:	68fb      	ldr	r3, [r7, #12]
 8003482:	2200      	movs	r2, #0
 8003484:	645a      	str	r2, [r3, #68]	@ 0x44
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	2222      	movs	r2, #34	@ 0x22
 800348a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	691b      	ldr	r3, [r3, #16]
 8003492:	2b00      	cmp	r3, #0
 8003494:	d007      	beq.n	80034a6 <UART_Start_Receive_IT+0x46>
 8003496:	68fb      	ldr	r3, [r7, #12]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	68da      	ldr	r2, [r3, #12]
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80034a4:	60da      	str	r2, [r3, #12]
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	695a      	ldr	r2, [r3, #20]
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	f042 0201 	orr.w	r2, r2, #1
 80034b4:	615a      	str	r2, [r3, #20]
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	68da      	ldr	r2, [r3, #12]
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	f042 0220 	orr.w	r2, r2, #32
 80034c4:	60da      	str	r2, [r3, #12]
 80034c6:	2300      	movs	r3, #0
 80034c8:	4618      	mov	r0, r3
 80034ca:	3714      	adds	r7, #20
 80034cc:	46bd      	mov	sp, r7
 80034ce:	bc80      	pop	{r7}
 80034d0:	4770      	bx	lr

080034d2 <UART_EndRxTransfer>:
 80034d2:	b480      	push	{r7}
 80034d4:	b095      	sub	sp, #84	@ 0x54
 80034d6:	af00      	add	r7, sp, #0
 80034d8:	6078      	str	r0, [r7, #4]
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	330c      	adds	r3, #12
 80034e0:	637b      	str	r3, [r7, #52]	@ 0x34
 80034e2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80034e4:	e853 3f00 	ldrex	r3, [r3]
 80034e8:	633b      	str	r3, [r7, #48]	@ 0x30
 80034ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034ec:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80034f0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	330c      	adds	r3, #12
 80034f8:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80034fa:	643a      	str	r2, [r7, #64]	@ 0x40
 80034fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80034fe:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003500:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003502:	e841 2300 	strex	r3, r2, [r1]
 8003506:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003508:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800350a:	2b00      	cmp	r3, #0
 800350c:	d1e5      	bne.n	80034da <UART_EndRxTransfer+0x8>
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	3314      	adds	r3, #20
 8003514:	623b      	str	r3, [r7, #32]
 8003516:	6a3b      	ldr	r3, [r7, #32]
 8003518:	e853 3f00 	ldrex	r3, [r3]
 800351c:	61fb      	str	r3, [r7, #28]
 800351e:	69fb      	ldr	r3, [r7, #28]
 8003520:	f023 0301 	bic.w	r3, r3, #1
 8003524:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	3314      	adds	r3, #20
 800352c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800352e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003530:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003532:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003534:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003536:	e841 2300 	strex	r3, r2, [r1]
 800353a:	627b      	str	r3, [r7, #36]	@ 0x24
 800353c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800353e:	2b00      	cmp	r3, #0
 8003540:	d1e5      	bne.n	800350e <UART_EndRxTransfer+0x3c>
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003546:	2b01      	cmp	r3, #1
 8003548:	d119      	bne.n	800357e <UART_EndRxTransfer+0xac>
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	681b      	ldr	r3, [r3, #0]
 800354e:	330c      	adds	r3, #12
 8003550:	60fb      	str	r3, [r7, #12]
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	e853 3f00 	ldrex	r3, [r3]
 8003558:	60bb      	str	r3, [r7, #8]
 800355a:	68bb      	ldr	r3, [r7, #8]
 800355c:	f023 0310 	bic.w	r3, r3, #16
 8003560:	647b      	str	r3, [r7, #68]	@ 0x44
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	330c      	adds	r3, #12
 8003568:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800356a:	61ba      	str	r2, [r7, #24]
 800356c:	617b      	str	r3, [r7, #20]
 800356e:	6979      	ldr	r1, [r7, #20]
 8003570:	69ba      	ldr	r2, [r7, #24]
 8003572:	e841 2300 	strex	r3, r2, [r1]
 8003576:	613b      	str	r3, [r7, #16]
 8003578:	693b      	ldr	r3, [r7, #16]
 800357a:	2b00      	cmp	r3, #0
 800357c:	d1e5      	bne.n	800354a <UART_EndRxTransfer+0x78>
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	2220      	movs	r2, #32
 8003582:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	2200      	movs	r2, #0
 800358a:	631a      	str	r2, [r3, #48]	@ 0x30
 800358c:	bf00      	nop
 800358e:	3754      	adds	r7, #84	@ 0x54
 8003590:	46bd      	mov	sp, r7
 8003592:	bc80      	pop	{r7}
 8003594:	4770      	bx	lr

08003596 <UART_DMAAbortOnError>:
 8003596:	b580      	push	{r7, lr}
 8003598:	b084      	sub	sp, #16
 800359a:	af00      	add	r7, sp, #0
 800359c:	6078      	str	r0, [r7, #4]
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035a2:	60fb      	str	r3, [r7, #12]
 80035a4:	68fb      	ldr	r3, [r7, #12]
 80035a6:	2200      	movs	r2, #0
 80035a8:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	2200      	movs	r2, #0
 80035ae:	84da      	strh	r2, [r3, #38]	@ 0x26
 80035b0:	68f8      	ldr	r0, [r7, #12]
 80035b2:	f7ff ff41 	bl	8003438 <HAL_UART_ErrorCallback>
 80035b6:	bf00      	nop
 80035b8:	3710      	adds	r7, #16
 80035ba:	46bd      	mov	sp, r7
 80035bc:	bd80      	pop	{r7, pc}

080035be <UART_Transmit_IT>:
 80035be:	b480      	push	{r7}
 80035c0:	b085      	sub	sp, #20
 80035c2:	af00      	add	r7, sp, #0
 80035c4:	6078      	str	r0, [r7, #4]
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80035cc:	b2db      	uxtb	r3, r3
 80035ce:	2b21      	cmp	r3, #33	@ 0x21
 80035d0:	d13e      	bne.n	8003650 <UART_Transmit_IT+0x92>
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	689b      	ldr	r3, [r3, #8]
 80035d6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80035da:	d114      	bne.n	8003606 <UART_Transmit_IT+0x48>
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	691b      	ldr	r3, [r3, #16]
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d110      	bne.n	8003606 <UART_Transmit_IT+0x48>
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	6a1b      	ldr	r3, [r3, #32]
 80035e8:	60fb      	str	r3, [r7, #12]
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	881b      	ldrh	r3, [r3, #0]
 80035ee:	461a      	mov	r2, r3
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80035f8:	605a      	str	r2, [r3, #4]
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	6a1b      	ldr	r3, [r3, #32]
 80035fe:	1c9a      	adds	r2, r3, #2
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	621a      	str	r2, [r3, #32]
 8003604:	e008      	b.n	8003618 <UART_Transmit_IT+0x5a>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	6a1b      	ldr	r3, [r3, #32]
 800360a:	1c59      	adds	r1, r3, #1
 800360c:	687a      	ldr	r2, [r7, #4]
 800360e:	6211      	str	r1, [r2, #32]
 8003610:	781a      	ldrb	r2, [r3, #0]
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	605a      	str	r2, [r3, #4]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800361c:	b29b      	uxth	r3, r3
 800361e:	3b01      	subs	r3, #1
 8003620:	b29b      	uxth	r3, r3
 8003622:	687a      	ldr	r2, [r7, #4]
 8003624:	4619      	mov	r1, r3
 8003626:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8003628:	2b00      	cmp	r3, #0
 800362a:	d10f      	bne.n	800364c <UART_Transmit_IT+0x8e>
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	68da      	ldr	r2, [r3, #12]
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800363a:	60da      	str	r2, [r3, #12]
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	68da      	ldr	r2, [r3, #12]
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800364a:	60da      	str	r2, [r3, #12]
 800364c:	2300      	movs	r3, #0
 800364e:	e000      	b.n	8003652 <UART_Transmit_IT+0x94>
 8003650:	2302      	movs	r3, #2
 8003652:	4618      	mov	r0, r3
 8003654:	3714      	adds	r7, #20
 8003656:	46bd      	mov	sp, r7
 8003658:	bc80      	pop	{r7}
 800365a:	4770      	bx	lr

0800365c <UART_EndTransmit_IT>:
 800365c:	b580      	push	{r7, lr}
 800365e:	b082      	sub	sp, #8
 8003660:	af00      	add	r7, sp, #0
 8003662:	6078      	str	r0, [r7, #4]
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	68da      	ldr	r2, [r3, #12]
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003672:	60da      	str	r2, [r3, #12]
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	2220      	movs	r2, #32
 8003678:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800367c:	6878      	ldr	r0, [r7, #4]
 800367e:	f7fc fedf 	bl	8000440 <HAL_UART_TxCpltCallback>
 8003682:	2300      	movs	r3, #0
 8003684:	4618      	mov	r0, r3
 8003686:	3708      	adds	r7, #8
 8003688:	46bd      	mov	sp, r7
 800368a:	bd80      	pop	{r7, pc}

0800368c <UART_Receive_IT>:
 800368c:	b580      	push	{r7, lr}
 800368e:	b08c      	sub	sp, #48	@ 0x30
 8003690:	af00      	add	r7, sp, #0
 8003692:	6078      	str	r0, [r7, #4]
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800369a:	b2db      	uxtb	r3, r3
 800369c:	2b22      	cmp	r3, #34	@ 0x22
 800369e:	f040 80ae 	bne.w	80037fe <UART_Receive_IT+0x172>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	689b      	ldr	r3, [r3, #8]
 80036a6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80036aa:	d117      	bne.n	80036dc <UART_Receive_IT+0x50>
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	691b      	ldr	r3, [r3, #16]
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	d113      	bne.n	80036dc <UART_Receive_IT+0x50>
 80036b4:	2300      	movs	r3, #0
 80036b6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036bc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	685b      	ldr	r3, [r3, #4]
 80036c4:	b29b      	uxth	r3, r3
 80036c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80036ca:	b29a      	uxth	r2, r3
 80036cc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80036ce:	801a      	strh	r2, [r3, #0]
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036d4:	1c9a      	adds	r2, r3, #2
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	629a      	str	r2, [r3, #40]	@ 0x28
 80036da:	e026      	b.n	800372a <UART_Receive_IT+0x9e>
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80036e0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80036e2:	2300      	movs	r3, #0
 80036e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	689b      	ldr	r3, [r3, #8]
 80036ea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80036ee:	d007      	beq.n	8003700 <UART_Receive_IT+0x74>
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	689b      	ldr	r3, [r3, #8]
 80036f4:	2b00      	cmp	r3, #0
 80036f6:	d10a      	bne.n	800370e <UART_Receive_IT+0x82>
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	691b      	ldr	r3, [r3, #16]
 80036fc:	2b00      	cmp	r3, #0
 80036fe:	d106      	bne.n	800370e <UART_Receive_IT+0x82>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	685b      	ldr	r3, [r3, #4]
 8003706:	b2da      	uxtb	r2, r3
 8003708:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800370a:	701a      	strb	r2, [r3, #0]
 800370c:	e008      	b.n	8003720 <UART_Receive_IT+0x94>
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	685b      	ldr	r3, [r3, #4]
 8003714:	b2db      	uxtb	r3, r3
 8003716:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800371a:	b2da      	uxtb	r2, r3
 800371c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800371e:	701a      	strb	r2, [r3, #0]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003724:	1c5a      	adds	r2, r3, #1
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	629a      	str	r2, [r3, #40]	@ 0x28
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800372e:	b29b      	uxth	r3, r3
 8003730:	3b01      	subs	r3, #1
 8003732:	b29b      	uxth	r3, r3
 8003734:	687a      	ldr	r2, [r7, #4]
 8003736:	4619      	mov	r1, r3
 8003738:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800373a:	2b00      	cmp	r3, #0
 800373c:	d15d      	bne.n	80037fa <UART_Receive_IT+0x16e>
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	681b      	ldr	r3, [r3, #0]
 8003742:	68da      	ldr	r2, [r3, #12]
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	f022 0220 	bic.w	r2, r2, #32
 800374c:	60da      	str	r2, [r3, #12]
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	68da      	ldr	r2, [r3, #12]
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800375c:	60da      	str	r2, [r3, #12]
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	695a      	ldr	r2, [r3, #20]
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	f022 0201 	bic.w	r2, r2, #1
 800376c:	615a      	str	r2, [r3, #20]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	2220      	movs	r2, #32
 8003772:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	2200      	movs	r2, #0
 800377a:	635a      	str	r2, [r3, #52]	@ 0x34
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003780:	2b01      	cmp	r3, #1
 8003782:	d135      	bne.n	80037f0 <UART_Receive_IT+0x164>
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	2200      	movs	r2, #0
 8003788:	631a      	str	r2, [r3, #48]	@ 0x30
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	330c      	adds	r3, #12
 8003790:	617b      	str	r3, [r7, #20]
 8003792:	697b      	ldr	r3, [r7, #20]
 8003794:	e853 3f00 	ldrex	r3, [r3]
 8003798:	613b      	str	r3, [r7, #16]
 800379a:	693b      	ldr	r3, [r7, #16]
 800379c:	f023 0310 	bic.w	r3, r3, #16
 80037a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	330c      	adds	r3, #12
 80037a8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80037aa:	623a      	str	r2, [r7, #32]
 80037ac:	61fb      	str	r3, [r7, #28]
 80037ae:	69f9      	ldr	r1, [r7, #28]
 80037b0:	6a3a      	ldr	r2, [r7, #32]
 80037b2:	e841 2300 	strex	r3, r2, [r1]
 80037b6:	61bb      	str	r3, [r7, #24]
 80037b8:	69bb      	ldr	r3, [r7, #24]
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d1e5      	bne.n	800378a <UART_Receive_IT+0xfe>
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	f003 0310 	and.w	r3, r3, #16
 80037c8:	2b10      	cmp	r3, #16
 80037ca:	d10a      	bne.n	80037e2 <UART_Receive_IT+0x156>
 80037cc:	2300      	movs	r3, #0
 80037ce:	60fb      	str	r3, [r7, #12]
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	60fb      	str	r3, [r7, #12]
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	685b      	ldr	r3, [r3, #4]
 80037de:	60fb      	str	r3, [r7, #12]
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80037e6:	4619      	mov	r1, r3
 80037e8:	6878      	ldr	r0, [r7, #4]
 80037ea:	f7ff fe2e 	bl	800344a <HAL_UARTEx_RxEventCallback>
 80037ee:	e002      	b.n	80037f6 <UART_Receive_IT+0x16a>
 80037f0:	6878      	ldr	r0, [r7, #4]
 80037f2:	f7fc fdf9 	bl	80003e8 <HAL_UART_RxCpltCallback>
 80037f6:	2300      	movs	r3, #0
 80037f8:	e002      	b.n	8003800 <UART_Receive_IT+0x174>
 80037fa:	2300      	movs	r3, #0
 80037fc:	e000      	b.n	8003800 <UART_Receive_IT+0x174>
 80037fe:	2302      	movs	r3, #2
 8003800:	4618      	mov	r0, r3
 8003802:	3730      	adds	r7, #48	@ 0x30
 8003804:	46bd      	mov	sp, r7
 8003806:	bd80      	pop	{r7, pc}

08003808 <UART_SetConfig>:
 8003808:	b580      	push	{r7, lr}
 800380a:	b084      	sub	sp, #16
 800380c:	af00      	add	r7, sp, #0
 800380e:	6078      	str	r0, [r7, #4]
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	681b      	ldr	r3, [r3, #0]
 8003814:	691b      	ldr	r3, [r3, #16]
 8003816:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	68da      	ldr	r2, [r3, #12]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	430a      	orrs	r2, r1
 8003824:	611a      	str	r2, [r3, #16]
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	689a      	ldr	r2, [r3, #8]
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	691b      	ldr	r3, [r3, #16]
 800382e:	431a      	orrs	r2, r3
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	695b      	ldr	r3, [r3, #20]
 8003834:	4313      	orrs	r3, r2
 8003836:	60bb      	str	r3, [r7, #8]
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	68db      	ldr	r3, [r3, #12]
 800383e:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8003842:	f023 030c 	bic.w	r3, r3, #12
 8003846:	687a      	ldr	r2, [r7, #4]
 8003848:	6812      	ldr	r2, [r2, #0]
 800384a:	68b9      	ldr	r1, [r7, #8]
 800384c:	430b      	orrs	r3, r1
 800384e:	60d3      	str	r3, [r2, #12]
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	695b      	ldr	r3, [r3, #20]
 8003856:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	699a      	ldr	r2, [r3, #24]
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	430a      	orrs	r2, r1
 8003864:	615a      	str	r2, [r3, #20]
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	4a2c      	ldr	r2, [pc, #176]	@ (800391c <UART_SetConfig+0x114>)
 800386c:	4293      	cmp	r3, r2
 800386e:	d103      	bne.n	8003878 <UART_SetConfig+0x70>
 8003870:	f7fe fbf6 	bl	8002060 <HAL_RCC_GetPCLK2Freq>
 8003874:	60f8      	str	r0, [r7, #12]
 8003876:	e002      	b.n	800387e <UART_SetConfig+0x76>
 8003878:	f7fe fbde 	bl	8002038 <HAL_RCC_GetPCLK1Freq>
 800387c:	60f8      	str	r0, [r7, #12]
 800387e:	68fa      	ldr	r2, [r7, #12]
 8003880:	4613      	mov	r3, r2
 8003882:	009b      	lsls	r3, r3, #2
 8003884:	4413      	add	r3, r2
 8003886:	009a      	lsls	r2, r3, #2
 8003888:	441a      	add	r2, r3
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	685b      	ldr	r3, [r3, #4]
 800388e:	009b      	lsls	r3, r3, #2
 8003890:	fbb2 f3f3 	udiv	r3, r2, r3
 8003894:	4a22      	ldr	r2, [pc, #136]	@ (8003920 <UART_SetConfig+0x118>)
 8003896:	fba2 2303 	umull	r2, r3, r2, r3
 800389a:	095b      	lsrs	r3, r3, #5
 800389c:	0119      	lsls	r1, r3, #4
 800389e:	68fa      	ldr	r2, [r7, #12]
 80038a0:	4613      	mov	r3, r2
 80038a2:	009b      	lsls	r3, r3, #2
 80038a4:	4413      	add	r3, r2
 80038a6:	009a      	lsls	r2, r3, #2
 80038a8:	441a      	add	r2, r3
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	685b      	ldr	r3, [r3, #4]
 80038ae:	009b      	lsls	r3, r3, #2
 80038b0:	fbb2 f2f3 	udiv	r2, r2, r3
 80038b4:	4b1a      	ldr	r3, [pc, #104]	@ (8003920 <UART_SetConfig+0x118>)
 80038b6:	fba3 0302 	umull	r0, r3, r3, r2
 80038ba:	095b      	lsrs	r3, r3, #5
 80038bc:	2064      	movs	r0, #100	@ 0x64
 80038be:	fb00 f303 	mul.w	r3, r0, r3
 80038c2:	1ad3      	subs	r3, r2, r3
 80038c4:	011b      	lsls	r3, r3, #4
 80038c6:	3332      	adds	r3, #50	@ 0x32
 80038c8:	4a15      	ldr	r2, [pc, #84]	@ (8003920 <UART_SetConfig+0x118>)
 80038ca:	fba2 2303 	umull	r2, r3, r2, r3
 80038ce:	095b      	lsrs	r3, r3, #5
 80038d0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80038d4:	4419      	add	r1, r3
 80038d6:	68fa      	ldr	r2, [r7, #12]
 80038d8:	4613      	mov	r3, r2
 80038da:	009b      	lsls	r3, r3, #2
 80038dc:	4413      	add	r3, r2
 80038de:	009a      	lsls	r2, r3, #2
 80038e0:	441a      	add	r2, r3
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	685b      	ldr	r3, [r3, #4]
 80038e6:	009b      	lsls	r3, r3, #2
 80038e8:	fbb2 f2f3 	udiv	r2, r2, r3
 80038ec:	4b0c      	ldr	r3, [pc, #48]	@ (8003920 <UART_SetConfig+0x118>)
 80038ee:	fba3 0302 	umull	r0, r3, r3, r2
 80038f2:	095b      	lsrs	r3, r3, #5
 80038f4:	2064      	movs	r0, #100	@ 0x64
 80038f6:	fb00 f303 	mul.w	r3, r0, r3
 80038fa:	1ad3      	subs	r3, r2, r3
 80038fc:	011b      	lsls	r3, r3, #4
 80038fe:	3332      	adds	r3, #50	@ 0x32
 8003900:	4a07      	ldr	r2, [pc, #28]	@ (8003920 <UART_SetConfig+0x118>)
 8003902:	fba2 2303 	umull	r2, r3, r2, r3
 8003906:	095b      	lsrs	r3, r3, #5
 8003908:	f003 020f 	and.w	r2, r3, #15
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	440a      	add	r2, r1
 8003912:	609a      	str	r2, [r3, #8]
 8003914:	bf00      	nop
 8003916:	3710      	adds	r7, #16
 8003918:	46bd      	mov	sp, r7
 800391a:	bd80      	pop	{r7, pc}
 800391c:	40013800 	.word	0x40013800
 8003920:	51eb851f 	.word	0x51eb851f

08003924 <atoi>:
 8003924:	220a      	movs	r2, #10
 8003926:	2100      	movs	r1, #0
 8003928:	f000 b87a 	b.w	8003a20 <strtol>

0800392c <_strtol_l.constprop.0>:
 800392c:	2b24      	cmp	r3, #36	@ 0x24
 800392e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003932:	4686      	mov	lr, r0
 8003934:	4690      	mov	r8, r2
 8003936:	d801      	bhi.n	800393c <_strtol_l.constprop.0+0x10>
 8003938:	2b01      	cmp	r3, #1
 800393a:	d106      	bne.n	800394a <_strtol_l.constprop.0+0x1e>
 800393c:	f000 f8b4 	bl	8003aa8 <__errno>
 8003940:	2316      	movs	r3, #22
 8003942:	6003      	str	r3, [r0, #0]
 8003944:	2000      	movs	r0, #0
 8003946:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800394a:	460d      	mov	r5, r1
 800394c:	4833      	ldr	r0, [pc, #204]	@ (8003a1c <_strtol_l.constprop.0+0xf0>)
 800394e:	462a      	mov	r2, r5
 8003950:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003954:	5d06      	ldrb	r6, [r0, r4]
 8003956:	f016 0608 	ands.w	r6, r6, #8
 800395a:	d1f8      	bne.n	800394e <_strtol_l.constprop.0+0x22>
 800395c:	2c2d      	cmp	r4, #45	@ 0x2d
 800395e:	d12d      	bne.n	80039bc <_strtol_l.constprop.0+0x90>
 8003960:	2601      	movs	r6, #1
 8003962:	782c      	ldrb	r4, [r5, #0]
 8003964:	1c95      	adds	r5, r2, #2
 8003966:	f033 0210 	bics.w	r2, r3, #16
 800396a:	d109      	bne.n	8003980 <_strtol_l.constprop.0+0x54>
 800396c:	2c30      	cmp	r4, #48	@ 0x30
 800396e:	d12a      	bne.n	80039c6 <_strtol_l.constprop.0+0x9a>
 8003970:	782a      	ldrb	r2, [r5, #0]
 8003972:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8003976:	2a58      	cmp	r2, #88	@ 0x58
 8003978:	d125      	bne.n	80039c6 <_strtol_l.constprop.0+0x9a>
 800397a:	2310      	movs	r3, #16
 800397c:	786c      	ldrb	r4, [r5, #1]
 800397e:	3502      	adds	r5, #2
 8003980:	2200      	movs	r2, #0
 8003982:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8003986:	f10c 3cff 	add.w	ip, ip, #4294967295
 800398a:	fbbc f9f3 	udiv	r9, ip, r3
 800398e:	4610      	mov	r0, r2
 8003990:	fb03 ca19 	mls	sl, r3, r9, ip
 8003994:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8003998:	2f09      	cmp	r7, #9
 800399a:	d81b      	bhi.n	80039d4 <_strtol_l.constprop.0+0xa8>
 800399c:	463c      	mov	r4, r7
 800399e:	42a3      	cmp	r3, r4
 80039a0:	dd27      	ble.n	80039f2 <_strtol_l.constprop.0+0xc6>
 80039a2:	1c57      	adds	r7, r2, #1
 80039a4:	d007      	beq.n	80039b6 <_strtol_l.constprop.0+0x8a>
 80039a6:	4581      	cmp	r9, r0
 80039a8:	d320      	bcc.n	80039ec <_strtol_l.constprop.0+0xc0>
 80039aa:	d101      	bne.n	80039b0 <_strtol_l.constprop.0+0x84>
 80039ac:	45a2      	cmp	sl, r4
 80039ae:	db1d      	blt.n	80039ec <_strtol_l.constprop.0+0xc0>
 80039b0:	2201      	movs	r2, #1
 80039b2:	fb00 4003 	mla	r0, r0, r3, r4
 80039b6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80039ba:	e7eb      	b.n	8003994 <_strtol_l.constprop.0+0x68>
 80039bc:	2c2b      	cmp	r4, #43	@ 0x2b
 80039be:	bf04      	itt	eq
 80039c0:	782c      	ldrbeq	r4, [r5, #0]
 80039c2:	1c95      	addeq	r5, r2, #2
 80039c4:	e7cf      	b.n	8003966 <_strtol_l.constprop.0+0x3a>
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d1da      	bne.n	8003980 <_strtol_l.constprop.0+0x54>
 80039ca:	2c30      	cmp	r4, #48	@ 0x30
 80039cc:	bf0c      	ite	eq
 80039ce:	2308      	moveq	r3, #8
 80039d0:	230a      	movne	r3, #10
 80039d2:	e7d5      	b.n	8003980 <_strtol_l.constprop.0+0x54>
 80039d4:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 80039d8:	2f19      	cmp	r7, #25
 80039da:	d801      	bhi.n	80039e0 <_strtol_l.constprop.0+0xb4>
 80039dc:	3c37      	subs	r4, #55	@ 0x37
 80039de:	e7de      	b.n	800399e <_strtol_l.constprop.0+0x72>
 80039e0:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 80039e4:	2f19      	cmp	r7, #25
 80039e6:	d804      	bhi.n	80039f2 <_strtol_l.constprop.0+0xc6>
 80039e8:	3c57      	subs	r4, #87	@ 0x57
 80039ea:	e7d8      	b.n	800399e <_strtol_l.constprop.0+0x72>
 80039ec:	f04f 32ff 	mov.w	r2, #4294967295
 80039f0:	e7e1      	b.n	80039b6 <_strtol_l.constprop.0+0x8a>
 80039f2:	1c53      	adds	r3, r2, #1
 80039f4:	d108      	bne.n	8003a08 <_strtol_l.constprop.0+0xdc>
 80039f6:	2322      	movs	r3, #34	@ 0x22
 80039f8:	4660      	mov	r0, ip
 80039fa:	f8ce 3000 	str.w	r3, [lr]
 80039fe:	f1b8 0f00 	cmp.w	r8, #0
 8003a02:	d0a0      	beq.n	8003946 <_strtol_l.constprop.0+0x1a>
 8003a04:	1e69      	subs	r1, r5, #1
 8003a06:	e006      	b.n	8003a16 <_strtol_l.constprop.0+0xea>
 8003a08:	b106      	cbz	r6, 8003a0c <_strtol_l.constprop.0+0xe0>
 8003a0a:	4240      	negs	r0, r0
 8003a0c:	f1b8 0f00 	cmp.w	r8, #0
 8003a10:	d099      	beq.n	8003946 <_strtol_l.constprop.0+0x1a>
 8003a12:	2a00      	cmp	r2, #0
 8003a14:	d1f6      	bne.n	8003a04 <_strtol_l.constprop.0+0xd8>
 8003a16:	f8c8 1000 	str.w	r1, [r8]
 8003a1a:	e794      	b.n	8003946 <_strtol_l.constprop.0+0x1a>
 8003a1c:	0800449f 	.word	0x0800449f

08003a20 <strtol>:
 8003a20:	4613      	mov	r3, r2
 8003a22:	460a      	mov	r2, r1
 8003a24:	4601      	mov	r1, r0
 8003a26:	4802      	ldr	r0, [pc, #8]	@ (8003a30 <strtol+0x10>)
 8003a28:	6800      	ldr	r0, [r0, #0]
 8003a2a:	f7ff bf7f 	b.w	800392c <_strtol_l.constprop.0>
 8003a2e:	bf00      	nop
 8003a30:	2000000c 	.word	0x2000000c

08003a34 <_vsiprintf_r>:
 8003a34:	b500      	push	{lr}
 8003a36:	b09b      	sub	sp, #108	@ 0x6c
 8003a38:	9100      	str	r1, [sp, #0]
 8003a3a:	9104      	str	r1, [sp, #16]
 8003a3c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8003a40:	9105      	str	r1, [sp, #20]
 8003a42:	9102      	str	r1, [sp, #8]
 8003a44:	4905      	ldr	r1, [pc, #20]	@ (8003a5c <_vsiprintf_r+0x28>)
 8003a46:	9103      	str	r1, [sp, #12]
 8003a48:	4669      	mov	r1, sp
 8003a4a:	f000 f9ab 	bl	8003da4 <_svfiprintf_r>
 8003a4e:	2200      	movs	r2, #0
 8003a50:	9b00      	ldr	r3, [sp, #0]
 8003a52:	701a      	strb	r2, [r3, #0]
 8003a54:	b01b      	add	sp, #108	@ 0x6c
 8003a56:	f85d fb04 	ldr.w	pc, [sp], #4
 8003a5a:	bf00      	nop
 8003a5c:	ffff0208 	.word	0xffff0208

08003a60 <vsiprintf>:
 8003a60:	4613      	mov	r3, r2
 8003a62:	460a      	mov	r2, r1
 8003a64:	4601      	mov	r1, r0
 8003a66:	4802      	ldr	r0, [pc, #8]	@ (8003a70 <vsiprintf+0x10>)
 8003a68:	6800      	ldr	r0, [r0, #0]
 8003a6a:	f7ff bfe3 	b.w	8003a34 <_vsiprintf_r>
 8003a6e:	bf00      	nop
 8003a70:	2000000c 	.word	0x2000000c

08003a74 <memset>:
 8003a74:	4603      	mov	r3, r0
 8003a76:	4402      	add	r2, r0
 8003a78:	4293      	cmp	r3, r2
 8003a7a:	d100      	bne.n	8003a7e <memset+0xa>
 8003a7c:	4770      	bx	lr
 8003a7e:	f803 1b01 	strb.w	r1, [r3], #1
 8003a82:	e7f9      	b.n	8003a78 <memset+0x4>

08003a84 <strncmp>:
 8003a84:	b510      	push	{r4, lr}
 8003a86:	b16a      	cbz	r2, 8003aa4 <strncmp+0x20>
 8003a88:	3901      	subs	r1, #1
 8003a8a:	1884      	adds	r4, r0, r2
 8003a8c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003a90:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8003a94:	429a      	cmp	r2, r3
 8003a96:	d103      	bne.n	8003aa0 <strncmp+0x1c>
 8003a98:	42a0      	cmp	r0, r4
 8003a9a:	d001      	beq.n	8003aa0 <strncmp+0x1c>
 8003a9c:	2a00      	cmp	r2, #0
 8003a9e:	d1f5      	bne.n	8003a8c <strncmp+0x8>
 8003aa0:	1ad0      	subs	r0, r2, r3
 8003aa2:	bd10      	pop	{r4, pc}
 8003aa4:	4610      	mov	r0, r2
 8003aa6:	e7fc      	b.n	8003aa2 <strncmp+0x1e>

08003aa8 <__errno>:
 8003aa8:	4b01      	ldr	r3, [pc, #4]	@ (8003ab0 <__errno+0x8>)
 8003aaa:	6818      	ldr	r0, [r3, #0]
 8003aac:	4770      	bx	lr
 8003aae:	bf00      	nop
 8003ab0:	2000000c 	.word	0x2000000c

08003ab4 <__libc_init_array>:
 8003ab4:	b570      	push	{r4, r5, r6, lr}
 8003ab6:	2600      	movs	r6, #0
 8003ab8:	4d0c      	ldr	r5, [pc, #48]	@ (8003aec <__libc_init_array+0x38>)
 8003aba:	4c0d      	ldr	r4, [pc, #52]	@ (8003af0 <__libc_init_array+0x3c>)
 8003abc:	1b64      	subs	r4, r4, r5
 8003abe:	10a4      	asrs	r4, r4, #2
 8003ac0:	42a6      	cmp	r6, r4
 8003ac2:	d109      	bne.n	8003ad8 <__libc_init_array+0x24>
 8003ac4:	f000 fc78 	bl	80043b8 <_init>
 8003ac8:	2600      	movs	r6, #0
 8003aca:	4d0a      	ldr	r5, [pc, #40]	@ (8003af4 <__libc_init_array+0x40>)
 8003acc:	4c0a      	ldr	r4, [pc, #40]	@ (8003af8 <__libc_init_array+0x44>)
 8003ace:	1b64      	subs	r4, r4, r5
 8003ad0:	10a4      	asrs	r4, r4, #2
 8003ad2:	42a6      	cmp	r6, r4
 8003ad4:	d105      	bne.n	8003ae2 <__libc_init_array+0x2e>
 8003ad6:	bd70      	pop	{r4, r5, r6, pc}
 8003ad8:	f855 3b04 	ldr.w	r3, [r5], #4
 8003adc:	4798      	blx	r3
 8003ade:	3601      	adds	r6, #1
 8003ae0:	e7ee      	b.n	8003ac0 <__libc_init_array+0xc>
 8003ae2:	f855 3b04 	ldr.w	r3, [r5], #4
 8003ae6:	4798      	blx	r3
 8003ae8:	3601      	adds	r6, #1
 8003aea:	e7f2      	b.n	8003ad2 <__libc_init_array+0x1e>
 8003aec:	080045dc 	.word	0x080045dc
 8003af0:	080045dc 	.word	0x080045dc
 8003af4:	080045dc 	.word	0x080045dc
 8003af8:	080045e0 	.word	0x080045e0

08003afc <__retarget_lock_acquire_recursive>:
 8003afc:	4770      	bx	lr

08003afe <__retarget_lock_release_recursive>:
 8003afe:	4770      	bx	lr

08003b00 <_free_r>:
 8003b00:	b538      	push	{r3, r4, r5, lr}
 8003b02:	4605      	mov	r5, r0
 8003b04:	2900      	cmp	r1, #0
 8003b06:	d040      	beq.n	8003b8a <_free_r+0x8a>
 8003b08:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b0c:	1f0c      	subs	r4, r1, #4
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	bfb8      	it	lt
 8003b12:	18e4      	addlt	r4, r4, r3
 8003b14:	f000 f8de 	bl	8003cd4 <__malloc_lock>
 8003b18:	4a1c      	ldr	r2, [pc, #112]	@ (8003b8c <_free_r+0x8c>)
 8003b1a:	6813      	ldr	r3, [r2, #0]
 8003b1c:	b933      	cbnz	r3, 8003b2c <_free_r+0x2c>
 8003b1e:	6063      	str	r3, [r4, #4]
 8003b20:	6014      	str	r4, [r2, #0]
 8003b22:	4628      	mov	r0, r5
 8003b24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b28:	f000 b8da 	b.w	8003ce0 <__malloc_unlock>
 8003b2c:	42a3      	cmp	r3, r4
 8003b2e:	d908      	bls.n	8003b42 <_free_r+0x42>
 8003b30:	6820      	ldr	r0, [r4, #0]
 8003b32:	1821      	adds	r1, r4, r0
 8003b34:	428b      	cmp	r3, r1
 8003b36:	bf01      	itttt	eq
 8003b38:	6819      	ldreq	r1, [r3, #0]
 8003b3a:	685b      	ldreq	r3, [r3, #4]
 8003b3c:	1809      	addeq	r1, r1, r0
 8003b3e:	6021      	streq	r1, [r4, #0]
 8003b40:	e7ed      	b.n	8003b1e <_free_r+0x1e>
 8003b42:	461a      	mov	r2, r3
 8003b44:	685b      	ldr	r3, [r3, #4]
 8003b46:	b10b      	cbz	r3, 8003b4c <_free_r+0x4c>
 8003b48:	42a3      	cmp	r3, r4
 8003b4a:	d9fa      	bls.n	8003b42 <_free_r+0x42>
 8003b4c:	6811      	ldr	r1, [r2, #0]
 8003b4e:	1850      	adds	r0, r2, r1
 8003b50:	42a0      	cmp	r0, r4
 8003b52:	d10b      	bne.n	8003b6c <_free_r+0x6c>
 8003b54:	6820      	ldr	r0, [r4, #0]
 8003b56:	4401      	add	r1, r0
 8003b58:	1850      	adds	r0, r2, r1
 8003b5a:	4283      	cmp	r3, r0
 8003b5c:	6011      	str	r1, [r2, #0]
 8003b5e:	d1e0      	bne.n	8003b22 <_free_r+0x22>
 8003b60:	6818      	ldr	r0, [r3, #0]
 8003b62:	685b      	ldr	r3, [r3, #4]
 8003b64:	4408      	add	r0, r1
 8003b66:	6010      	str	r0, [r2, #0]
 8003b68:	6053      	str	r3, [r2, #4]
 8003b6a:	e7da      	b.n	8003b22 <_free_r+0x22>
 8003b6c:	d902      	bls.n	8003b74 <_free_r+0x74>
 8003b6e:	230c      	movs	r3, #12
 8003b70:	602b      	str	r3, [r5, #0]
 8003b72:	e7d6      	b.n	8003b22 <_free_r+0x22>
 8003b74:	6820      	ldr	r0, [r4, #0]
 8003b76:	1821      	adds	r1, r4, r0
 8003b78:	428b      	cmp	r3, r1
 8003b7a:	bf01      	itttt	eq
 8003b7c:	6819      	ldreq	r1, [r3, #0]
 8003b7e:	685b      	ldreq	r3, [r3, #4]
 8003b80:	1809      	addeq	r1, r1, r0
 8003b82:	6021      	streq	r1, [r4, #0]
 8003b84:	6063      	str	r3, [r4, #4]
 8003b86:	6054      	str	r4, [r2, #4]
 8003b88:	e7cb      	b.n	8003b22 <_free_r+0x22>
 8003b8a:	bd38      	pop	{r3, r4, r5, pc}
 8003b8c:	200007fc 	.word	0x200007fc

08003b90 <sbrk_aligned>:
 8003b90:	b570      	push	{r4, r5, r6, lr}
 8003b92:	4e0f      	ldr	r6, [pc, #60]	@ (8003bd0 <sbrk_aligned+0x40>)
 8003b94:	460c      	mov	r4, r1
 8003b96:	6831      	ldr	r1, [r6, #0]
 8003b98:	4605      	mov	r5, r0
 8003b9a:	b911      	cbnz	r1, 8003ba2 <sbrk_aligned+0x12>
 8003b9c:	f000 fbaa 	bl	80042f4 <_sbrk_r>
 8003ba0:	6030      	str	r0, [r6, #0]
 8003ba2:	4621      	mov	r1, r4
 8003ba4:	4628      	mov	r0, r5
 8003ba6:	f000 fba5 	bl	80042f4 <_sbrk_r>
 8003baa:	1c43      	adds	r3, r0, #1
 8003bac:	d103      	bne.n	8003bb6 <sbrk_aligned+0x26>
 8003bae:	f04f 34ff 	mov.w	r4, #4294967295
 8003bb2:	4620      	mov	r0, r4
 8003bb4:	bd70      	pop	{r4, r5, r6, pc}
 8003bb6:	1cc4      	adds	r4, r0, #3
 8003bb8:	f024 0403 	bic.w	r4, r4, #3
 8003bbc:	42a0      	cmp	r0, r4
 8003bbe:	d0f8      	beq.n	8003bb2 <sbrk_aligned+0x22>
 8003bc0:	1a21      	subs	r1, r4, r0
 8003bc2:	4628      	mov	r0, r5
 8003bc4:	f000 fb96 	bl	80042f4 <_sbrk_r>
 8003bc8:	3001      	adds	r0, #1
 8003bca:	d1f2      	bne.n	8003bb2 <sbrk_aligned+0x22>
 8003bcc:	e7ef      	b.n	8003bae <sbrk_aligned+0x1e>
 8003bce:	bf00      	nop
 8003bd0:	200007f8 	.word	0x200007f8

08003bd4 <_malloc_r>:
 8003bd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003bd8:	1ccd      	adds	r5, r1, #3
 8003bda:	f025 0503 	bic.w	r5, r5, #3
 8003bde:	3508      	adds	r5, #8
 8003be0:	2d0c      	cmp	r5, #12
 8003be2:	bf38      	it	cc
 8003be4:	250c      	movcc	r5, #12
 8003be6:	2d00      	cmp	r5, #0
 8003be8:	4606      	mov	r6, r0
 8003bea:	db01      	blt.n	8003bf0 <_malloc_r+0x1c>
 8003bec:	42a9      	cmp	r1, r5
 8003bee:	d904      	bls.n	8003bfa <_malloc_r+0x26>
 8003bf0:	230c      	movs	r3, #12
 8003bf2:	6033      	str	r3, [r6, #0]
 8003bf4:	2000      	movs	r0, #0
 8003bf6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003bfa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003cd0 <_malloc_r+0xfc>
 8003bfe:	f000 f869 	bl	8003cd4 <__malloc_lock>
 8003c02:	f8d8 3000 	ldr.w	r3, [r8]
 8003c06:	461c      	mov	r4, r3
 8003c08:	bb44      	cbnz	r4, 8003c5c <_malloc_r+0x88>
 8003c0a:	4629      	mov	r1, r5
 8003c0c:	4630      	mov	r0, r6
 8003c0e:	f7ff ffbf 	bl	8003b90 <sbrk_aligned>
 8003c12:	1c43      	adds	r3, r0, #1
 8003c14:	4604      	mov	r4, r0
 8003c16:	d158      	bne.n	8003cca <_malloc_r+0xf6>
 8003c18:	f8d8 4000 	ldr.w	r4, [r8]
 8003c1c:	4627      	mov	r7, r4
 8003c1e:	2f00      	cmp	r7, #0
 8003c20:	d143      	bne.n	8003caa <_malloc_r+0xd6>
 8003c22:	2c00      	cmp	r4, #0
 8003c24:	d04b      	beq.n	8003cbe <_malloc_r+0xea>
 8003c26:	6823      	ldr	r3, [r4, #0]
 8003c28:	4639      	mov	r1, r7
 8003c2a:	4630      	mov	r0, r6
 8003c2c:	eb04 0903 	add.w	r9, r4, r3
 8003c30:	f000 fb60 	bl	80042f4 <_sbrk_r>
 8003c34:	4581      	cmp	r9, r0
 8003c36:	d142      	bne.n	8003cbe <_malloc_r+0xea>
 8003c38:	6821      	ldr	r1, [r4, #0]
 8003c3a:	4630      	mov	r0, r6
 8003c3c:	1a6d      	subs	r5, r5, r1
 8003c3e:	4629      	mov	r1, r5
 8003c40:	f7ff ffa6 	bl	8003b90 <sbrk_aligned>
 8003c44:	3001      	adds	r0, #1
 8003c46:	d03a      	beq.n	8003cbe <_malloc_r+0xea>
 8003c48:	6823      	ldr	r3, [r4, #0]
 8003c4a:	442b      	add	r3, r5
 8003c4c:	6023      	str	r3, [r4, #0]
 8003c4e:	f8d8 3000 	ldr.w	r3, [r8]
 8003c52:	685a      	ldr	r2, [r3, #4]
 8003c54:	bb62      	cbnz	r2, 8003cb0 <_malloc_r+0xdc>
 8003c56:	f8c8 7000 	str.w	r7, [r8]
 8003c5a:	e00f      	b.n	8003c7c <_malloc_r+0xa8>
 8003c5c:	6822      	ldr	r2, [r4, #0]
 8003c5e:	1b52      	subs	r2, r2, r5
 8003c60:	d420      	bmi.n	8003ca4 <_malloc_r+0xd0>
 8003c62:	2a0b      	cmp	r2, #11
 8003c64:	d917      	bls.n	8003c96 <_malloc_r+0xc2>
 8003c66:	1961      	adds	r1, r4, r5
 8003c68:	42a3      	cmp	r3, r4
 8003c6a:	6025      	str	r5, [r4, #0]
 8003c6c:	bf18      	it	ne
 8003c6e:	6059      	strne	r1, [r3, #4]
 8003c70:	6863      	ldr	r3, [r4, #4]
 8003c72:	bf08      	it	eq
 8003c74:	f8c8 1000 	streq.w	r1, [r8]
 8003c78:	5162      	str	r2, [r4, r5]
 8003c7a:	604b      	str	r3, [r1, #4]
 8003c7c:	4630      	mov	r0, r6
 8003c7e:	f000 f82f 	bl	8003ce0 <__malloc_unlock>
 8003c82:	f104 000b 	add.w	r0, r4, #11
 8003c86:	1d23      	adds	r3, r4, #4
 8003c88:	f020 0007 	bic.w	r0, r0, #7
 8003c8c:	1ac2      	subs	r2, r0, r3
 8003c8e:	bf1c      	itt	ne
 8003c90:	1a1b      	subne	r3, r3, r0
 8003c92:	50a3      	strne	r3, [r4, r2]
 8003c94:	e7af      	b.n	8003bf6 <_malloc_r+0x22>
 8003c96:	6862      	ldr	r2, [r4, #4]
 8003c98:	42a3      	cmp	r3, r4
 8003c9a:	bf0c      	ite	eq
 8003c9c:	f8c8 2000 	streq.w	r2, [r8]
 8003ca0:	605a      	strne	r2, [r3, #4]
 8003ca2:	e7eb      	b.n	8003c7c <_malloc_r+0xa8>
 8003ca4:	4623      	mov	r3, r4
 8003ca6:	6864      	ldr	r4, [r4, #4]
 8003ca8:	e7ae      	b.n	8003c08 <_malloc_r+0x34>
 8003caa:	463c      	mov	r4, r7
 8003cac:	687f      	ldr	r7, [r7, #4]
 8003cae:	e7b6      	b.n	8003c1e <_malloc_r+0x4a>
 8003cb0:	461a      	mov	r2, r3
 8003cb2:	685b      	ldr	r3, [r3, #4]
 8003cb4:	42a3      	cmp	r3, r4
 8003cb6:	d1fb      	bne.n	8003cb0 <_malloc_r+0xdc>
 8003cb8:	2300      	movs	r3, #0
 8003cba:	6053      	str	r3, [r2, #4]
 8003cbc:	e7de      	b.n	8003c7c <_malloc_r+0xa8>
 8003cbe:	230c      	movs	r3, #12
 8003cc0:	4630      	mov	r0, r6
 8003cc2:	6033      	str	r3, [r6, #0]
 8003cc4:	f000 f80c 	bl	8003ce0 <__malloc_unlock>
 8003cc8:	e794      	b.n	8003bf4 <_malloc_r+0x20>
 8003cca:	6005      	str	r5, [r0, #0]
 8003ccc:	e7d6      	b.n	8003c7c <_malloc_r+0xa8>
 8003cce:	bf00      	nop
 8003cd0:	200007fc 	.word	0x200007fc

08003cd4 <__malloc_lock>:
 8003cd4:	4801      	ldr	r0, [pc, #4]	@ (8003cdc <__malloc_lock+0x8>)
 8003cd6:	f7ff bf11 	b.w	8003afc <__retarget_lock_acquire_recursive>
 8003cda:	bf00      	nop
 8003cdc:	200007f4 	.word	0x200007f4

08003ce0 <__malloc_unlock>:
 8003ce0:	4801      	ldr	r0, [pc, #4]	@ (8003ce8 <__malloc_unlock+0x8>)
 8003ce2:	f7ff bf0c 	b.w	8003afe <__retarget_lock_release_recursive>
 8003ce6:	bf00      	nop
 8003ce8:	200007f4 	.word	0x200007f4

08003cec <__ssputs_r>:
 8003cec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cf0:	461f      	mov	r7, r3
 8003cf2:	688e      	ldr	r6, [r1, #8]
 8003cf4:	4682      	mov	sl, r0
 8003cf6:	42be      	cmp	r6, r7
 8003cf8:	460c      	mov	r4, r1
 8003cfa:	4690      	mov	r8, r2
 8003cfc:	680b      	ldr	r3, [r1, #0]
 8003cfe:	d82d      	bhi.n	8003d5c <__ssputs_r+0x70>
 8003d00:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003d04:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003d08:	d026      	beq.n	8003d58 <__ssputs_r+0x6c>
 8003d0a:	6965      	ldr	r5, [r4, #20]
 8003d0c:	6909      	ldr	r1, [r1, #16]
 8003d0e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003d12:	eba3 0901 	sub.w	r9, r3, r1
 8003d16:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003d1a:	1c7b      	adds	r3, r7, #1
 8003d1c:	444b      	add	r3, r9
 8003d1e:	106d      	asrs	r5, r5, #1
 8003d20:	429d      	cmp	r5, r3
 8003d22:	bf38      	it	cc
 8003d24:	461d      	movcc	r5, r3
 8003d26:	0553      	lsls	r3, r2, #21
 8003d28:	d527      	bpl.n	8003d7a <__ssputs_r+0x8e>
 8003d2a:	4629      	mov	r1, r5
 8003d2c:	f7ff ff52 	bl	8003bd4 <_malloc_r>
 8003d30:	4606      	mov	r6, r0
 8003d32:	b360      	cbz	r0, 8003d8e <__ssputs_r+0xa2>
 8003d34:	464a      	mov	r2, r9
 8003d36:	6921      	ldr	r1, [r4, #16]
 8003d38:	f000 fafa 	bl	8004330 <memcpy>
 8003d3c:	89a3      	ldrh	r3, [r4, #12]
 8003d3e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003d42:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003d46:	81a3      	strh	r3, [r4, #12]
 8003d48:	6126      	str	r6, [r4, #16]
 8003d4a:	444e      	add	r6, r9
 8003d4c:	6026      	str	r6, [r4, #0]
 8003d4e:	463e      	mov	r6, r7
 8003d50:	6165      	str	r5, [r4, #20]
 8003d52:	eba5 0509 	sub.w	r5, r5, r9
 8003d56:	60a5      	str	r5, [r4, #8]
 8003d58:	42be      	cmp	r6, r7
 8003d5a:	d900      	bls.n	8003d5e <__ssputs_r+0x72>
 8003d5c:	463e      	mov	r6, r7
 8003d5e:	4632      	mov	r2, r6
 8003d60:	4641      	mov	r1, r8
 8003d62:	6820      	ldr	r0, [r4, #0]
 8003d64:	f000 faac 	bl	80042c0 <memmove>
 8003d68:	2000      	movs	r0, #0
 8003d6a:	68a3      	ldr	r3, [r4, #8]
 8003d6c:	1b9b      	subs	r3, r3, r6
 8003d6e:	60a3      	str	r3, [r4, #8]
 8003d70:	6823      	ldr	r3, [r4, #0]
 8003d72:	4433      	add	r3, r6
 8003d74:	6023      	str	r3, [r4, #0]
 8003d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d7a:	462a      	mov	r2, r5
 8003d7c:	f000 fae6 	bl	800434c <_realloc_r>
 8003d80:	4606      	mov	r6, r0
 8003d82:	2800      	cmp	r0, #0
 8003d84:	d1e0      	bne.n	8003d48 <__ssputs_r+0x5c>
 8003d86:	4650      	mov	r0, sl
 8003d88:	6921      	ldr	r1, [r4, #16]
 8003d8a:	f7ff feb9 	bl	8003b00 <_free_r>
 8003d8e:	230c      	movs	r3, #12
 8003d90:	f8ca 3000 	str.w	r3, [sl]
 8003d94:	89a3      	ldrh	r3, [r4, #12]
 8003d96:	f04f 30ff 	mov.w	r0, #4294967295
 8003d9a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003d9e:	81a3      	strh	r3, [r4, #12]
 8003da0:	e7e9      	b.n	8003d76 <__ssputs_r+0x8a>
	...

08003da4 <_svfiprintf_r>:
 8003da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003da8:	4698      	mov	r8, r3
 8003daa:	898b      	ldrh	r3, [r1, #12]
 8003dac:	4607      	mov	r7, r0
 8003dae:	061b      	lsls	r3, r3, #24
 8003db0:	460d      	mov	r5, r1
 8003db2:	4614      	mov	r4, r2
 8003db4:	b09d      	sub	sp, #116	@ 0x74
 8003db6:	d510      	bpl.n	8003dda <_svfiprintf_r+0x36>
 8003db8:	690b      	ldr	r3, [r1, #16]
 8003dba:	b973      	cbnz	r3, 8003dda <_svfiprintf_r+0x36>
 8003dbc:	2140      	movs	r1, #64	@ 0x40
 8003dbe:	f7ff ff09 	bl	8003bd4 <_malloc_r>
 8003dc2:	6028      	str	r0, [r5, #0]
 8003dc4:	6128      	str	r0, [r5, #16]
 8003dc6:	b930      	cbnz	r0, 8003dd6 <_svfiprintf_r+0x32>
 8003dc8:	230c      	movs	r3, #12
 8003dca:	603b      	str	r3, [r7, #0]
 8003dcc:	f04f 30ff 	mov.w	r0, #4294967295
 8003dd0:	b01d      	add	sp, #116	@ 0x74
 8003dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003dd6:	2340      	movs	r3, #64	@ 0x40
 8003dd8:	616b      	str	r3, [r5, #20]
 8003dda:	2300      	movs	r3, #0
 8003ddc:	9309      	str	r3, [sp, #36]	@ 0x24
 8003dde:	2320      	movs	r3, #32
 8003de0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003de4:	2330      	movs	r3, #48	@ 0x30
 8003de6:	f04f 0901 	mov.w	r9, #1
 8003dea:	f8cd 800c 	str.w	r8, [sp, #12]
 8003dee:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8003f88 <_svfiprintf_r+0x1e4>
 8003df2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003df6:	4623      	mov	r3, r4
 8003df8:	469a      	mov	sl, r3
 8003dfa:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003dfe:	b10a      	cbz	r2, 8003e04 <_svfiprintf_r+0x60>
 8003e00:	2a25      	cmp	r2, #37	@ 0x25
 8003e02:	d1f9      	bne.n	8003df8 <_svfiprintf_r+0x54>
 8003e04:	ebba 0b04 	subs.w	fp, sl, r4
 8003e08:	d00b      	beq.n	8003e22 <_svfiprintf_r+0x7e>
 8003e0a:	465b      	mov	r3, fp
 8003e0c:	4622      	mov	r2, r4
 8003e0e:	4629      	mov	r1, r5
 8003e10:	4638      	mov	r0, r7
 8003e12:	f7ff ff6b 	bl	8003cec <__ssputs_r>
 8003e16:	3001      	adds	r0, #1
 8003e18:	f000 80a7 	beq.w	8003f6a <_svfiprintf_r+0x1c6>
 8003e1c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003e1e:	445a      	add	r2, fp
 8003e20:	9209      	str	r2, [sp, #36]	@ 0x24
 8003e22:	f89a 3000 	ldrb.w	r3, [sl]
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	f000 809f 	beq.w	8003f6a <_svfiprintf_r+0x1c6>
 8003e2c:	2300      	movs	r3, #0
 8003e2e:	f04f 32ff 	mov.w	r2, #4294967295
 8003e32:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003e36:	f10a 0a01 	add.w	sl, sl, #1
 8003e3a:	9304      	str	r3, [sp, #16]
 8003e3c:	9307      	str	r3, [sp, #28]
 8003e3e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003e42:	931a      	str	r3, [sp, #104]	@ 0x68
 8003e44:	4654      	mov	r4, sl
 8003e46:	2205      	movs	r2, #5
 8003e48:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e4c:	484e      	ldr	r0, [pc, #312]	@ (8003f88 <_svfiprintf_r+0x1e4>)
 8003e4e:	f000 fa61 	bl	8004314 <memchr>
 8003e52:	9a04      	ldr	r2, [sp, #16]
 8003e54:	b9d8      	cbnz	r0, 8003e8e <_svfiprintf_r+0xea>
 8003e56:	06d0      	lsls	r0, r2, #27
 8003e58:	bf44      	itt	mi
 8003e5a:	2320      	movmi	r3, #32
 8003e5c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003e60:	0711      	lsls	r1, r2, #28
 8003e62:	bf44      	itt	mi
 8003e64:	232b      	movmi	r3, #43	@ 0x2b
 8003e66:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003e6a:	f89a 3000 	ldrb.w	r3, [sl]
 8003e6e:	2b2a      	cmp	r3, #42	@ 0x2a
 8003e70:	d015      	beq.n	8003e9e <_svfiprintf_r+0xfa>
 8003e72:	4654      	mov	r4, sl
 8003e74:	2000      	movs	r0, #0
 8003e76:	f04f 0c0a 	mov.w	ip, #10
 8003e7a:	9a07      	ldr	r2, [sp, #28]
 8003e7c:	4621      	mov	r1, r4
 8003e7e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003e82:	3b30      	subs	r3, #48	@ 0x30
 8003e84:	2b09      	cmp	r3, #9
 8003e86:	d94b      	bls.n	8003f20 <_svfiprintf_r+0x17c>
 8003e88:	b1b0      	cbz	r0, 8003eb8 <_svfiprintf_r+0x114>
 8003e8a:	9207      	str	r2, [sp, #28]
 8003e8c:	e014      	b.n	8003eb8 <_svfiprintf_r+0x114>
 8003e8e:	eba0 0308 	sub.w	r3, r0, r8
 8003e92:	fa09 f303 	lsl.w	r3, r9, r3
 8003e96:	4313      	orrs	r3, r2
 8003e98:	46a2      	mov	sl, r4
 8003e9a:	9304      	str	r3, [sp, #16]
 8003e9c:	e7d2      	b.n	8003e44 <_svfiprintf_r+0xa0>
 8003e9e:	9b03      	ldr	r3, [sp, #12]
 8003ea0:	1d19      	adds	r1, r3, #4
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	9103      	str	r1, [sp, #12]
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	bfbb      	ittet	lt
 8003eaa:	425b      	neglt	r3, r3
 8003eac:	f042 0202 	orrlt.w	r2, r2, #2
 8003eb0:	9307      	strge	r3, [sp, #28]
 8003eb2:	9307      	strlt	r3, [sp, #28]
 8003eb4:	bfb8      	it	lt
 8003eb6:	9204      	strlt	r2, [sp, #16]
 8003eb8:	7823      	ldrb	r3, [r4, #0]
 8003eba:	2b2e      	cmp	r3, #46	@ 0x2e
 8003ebc:	d10a      	bne.n	8003ed4 <_svfiprintf_r+0x130>
 8003ebe:	7863      	ldrb	r3, [r4, #1]
 8003ec0:	2b2a      	cmp	r3, #42	@ 0x2a
 8003ec2:	d132      	bne.n	8003f2a <_svfiprintf_r+0x186>
 8003ec4:	9b03      	ldr	r3, [sp, #12]
 8003ec6:	3402      	adds	r4, #2
 8003ec8:	1d1a      	adds	r2, r3, #4
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	9203      	str	r2, [sp, #12]
 8003ece:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003ed2:	9305      	str	r3, [sp, #20]
 8003ed4:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8003f8c <_svfiprintf_r+0x1e8>
 8003ed8:	2203      	movs	r2, #3
 8003eda:	4650      	mov	r0, sl
 8003edc:	7821      	ldrb	r1, [r4, #0]
 8003ede:	f000 fa19 	bl	8004314 <memchr>
 8003ee2:	b138      	cbz	r0, 8003ef4 <_svfiprintf_r+0x150>
 8003ee4:	2240      	movs	r2, #64	@ 0x40
 8003ee6:	9b04      	ldr	r3, [sp, #16]
 8003ee8:	eba0 000a 	sub.w	r0, r0, sl
 8003eec:	4082      	lsls	r2, r0
 8003eee:	4313      	orrs	r3, r2
 8003ef0:	3401      	adds	r4, #1
 8003ef2:	9304      	str	r3, [sp, #16]
 8003ef4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ef8:	2206      	movs	r2, #6
 8003efa:	4825      	ldr	r0, [pc, #148]	@ (8003f90 <_svfiprintf_r+0x1ec>)
 8003efc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003f00:	f000 fa08 	bl	8004314 <memchr>
 8003f04:	2800      	cmp	r0, #0
 8003f06:	d036      	beq.n	8003f76 <_svfiprintf_r+0x1d2>
 8003f08:	4b22      	ldr	r3, [pc, #136]	@ (8003f94 <_svfiprintf_r+0x1f0>)
 8003f0a:	bb1b      	cbnz	r3, 8003f54 <_svfiprintf_r+0x1b0>
 8003f0c:	9b03      	ldr	r3, [sp, #12]
 8003f0e:	3307      	adds	r3, #7
 8003f10:	f023 0307 	bic.w	r3, r3, #7
 8003f14:	3308      	adds	r3, #8
 8003f16:	9303      	str	r3, [sp, #12]
 8003f18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003f1a:	4433      	add	r3, r6
 8003f1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003f1e:	e76a      	b.n	8003df6 <_svfiprintf_r+0x52>
 8003f20:	460c      	mov	r4, r1
 8003f22:	2001      	movs	r0, #1
 8003f24:	fb0c 3202 	mla	r2, ip, r2, r3
 8003f28:	e7a8      	b.n	8003e7c <_svfiprintf_r+0xd8>
 8003f2a:	2300      	movs	r3, #0
 8003f2c:	f04f 0c0a 	mov.w	ip, #10
 8003f30:	4619      	mov	r1, r3
 8003f32:	3401      	adds	r4, #1
 8003f34:	9305      	str	r3, [sp, #20]
 8003f36:	4620      	mov	r0, r4
 8003f38:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003f3c:	3a30      	subs	r2, #48	@ 0x30
 8003f3e:	2a09      	cmp	r2, #9
 8003f40:	d903      	bls.n	8003f4a <_svfiprintf_r+0x1a6>
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d0c6      	beq.n	8003ed4 <_svfiprintf_r+0x130>
 8003f46:	9105      	str	r1, [sp, #20]
 8003f48:	e7c4      	b.n	8003ed4 <_svfiprintf_r+0x130>
 8003f4a:	4604      	mov	r4, r0
 8003f4c:	2301      	movs	r3, #1
 8003f4e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003f52:	e7f0      	b.n	8003f36 <_svfiprintf_r+0x192>
 8003f54:	ab03      	add	r3, sp, #12
 8003f56:	9300      	str	r3, [sp, #0]
 8003f58:	462a      	mov	r2, r5
 8003f5a:	4638      	mov	r0, r7
 8003f5c:	4b0e      	ldr	r3, [pc, #56]	@ (8003f98 <_svfiprintf_r+0x1f4>)
 8003f5e:	a904      	add	r1, sp, #16
 8003f60:	f3af 8000 	nop.w
 8003f64:	1c42      	adds	r2, r0, #1
 8003f66:	4606      	mov	r6, r0
 8003f68:	d1d6      	bne.n	8003f18 <_svfiprintf_r+0x174>
 8003f6a:	89ab      	ldrh	r3, [r5, #12]
 8003f6c:	065b      	lsls	r3, r3, #25
 8003f6e:	f53f af2d 	bmi.w	8003dcc <_svfiprintf_r+0x28>
 8003f72:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003f74:	e72c      	b.n	8003dd0 <_svfiprintf_r+0x2c>
 8003f76:	ab03      	add	r3, sp, #12
 8003f78:	9300      	str	r3, [sp, #0]
 8003f7a:	462a      	mov	r2, r5
 8003f7c:	4638      	mov	r0, r7
 8003f7e:	4b06      	ldr	r3, [pc, #24]	@ (8003f98 <_svfiprintf_r+0x1f4>)
 8003f80:	a904      	add	r1, sp, #16
 8003f82:	f000 f87d 	bl	8004080 <_printf_i>
 8003f86:	e7ed      	b.n	8003f64 <_svfiprintf_r+0x1c0>
 8003f88:	0800459f 	.word	0x0800459f
 8003f8c:	080045a5 	.word	0x080045a5
 8003f90:	080045a9 	.word	0x080045a9
 8003f94:	00000000 	.word	0x00000000
 8003f98:	08003ced 	.word	0x08003ced

08003f9c <_printf_common>:
 8003f9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fa0:	4616      	mov	r6, r2
 8003fa2:	4698      	mov	r8, r3
 8003fa4:	688a      	ldr	r2, [r1, #8]
 8003fa6:	690b      	ldr	r3, [r1, #16]
 8003fa8:	4607      	mov	r7, r0
 8003faa:	4293      	cmp	r3, r2
 8003fac:	bfb8      	it	lt
 8003fae:	4613      	movlt	r3, r2
 8003fb0:	6033      	str	r3, [r6, #0]
 8003fb2:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003fb6:	460c      	mov	r4, r1
 8003fb8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003fbc:	b10a      	cbz	r2, 8003fc2 <_printf_common+0x26>
 8003fbe:	3301      	adds	r3, #1
 8003fc0:	6033      	str	r3, [r6, #0]
 8003fc2:	6823      	ldr	r3, [r4, #0]
 8003fc4:	0699      	lsls	r1, r3, #26
 8003fc6:	bf42      	ittt	mi
 8003fc8:	6833      	ldrmi	r3, [r6, #0]
 8003fca:	3302      	addmi	r3, #2
 8003fcc:	6033      	strmi	r3, [r6, #0]
 8003fce:	6825      	ldr	r5, [r4, #0]
 8003fd0:	f015 0506 	ands.w	r5, r5, #6
 8003fd4:	d106      	bne.n	8003fe4 <_printf_common+0x48>
 8003fd6:	f104 0a19 	add.w	sl, r4, #25
 8003fda:	68e3      	ldr	r3, [r4, #12]
 8003fdc:	6832      	ldr	r2, [r6, #0]
 8003fde:	1a9b      	subs	r3, r3, r2
 8003fe0:	42ab      	cmp	r3, r5
 8003fe2:	dc2b      	bgt.n	800403c <_printf_common+0xa0>
 8003fe4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003fe8:	6822      	ldr	r2, [r4, #0]
 8003fea:	3b00      	subs	r3, #0
 8003fec:	bf18      	it	ne
 8003fee:	2301      	movne	r3, #1
 8003ff0:	0692      	lsls	r2, r2, #26
 8003ff2:	d430      	bmi.n	8004056 <_printf_common+0xba>
 8003ff4:	4641      	mov	r1, r8
 8003ff6:	4638      	mov	r0, r7
 8003ff8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8003ffc:	47c8      	blx	r9
 8003ffe:	3001      	adds	r0, #1
 8004000:	d023      	beq.n	800404a <_printf_common+0xae>
 8004002:	6823      	ldr	r3, [r4, #0]
 8004004:	6922      	ldr	r2, [r4, #16]
 8004006:	f003 0306 	and.w	r3, r3, #6
 800400a:	2b04      	cmp	r3, #4
 800400c:	bf14      	ite	ne
 800400e:	2500      	movne	r5, #0
 8004010:	6833      	ldreq	r3, [r6, #0]
 8004012:	f04f 0600 	mov.w	r6, #0
 8004016:	bf08      	it	eq
 8004018:	68e5      	ldreq	r5, [r4, #12]
 800401a:	f104 041a 	add.w	r4, r4, #26
 800401e:	bf08      	it	eq
 8004020:	1aed      	subeq	r5, r5, r3
 8004022:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8004026:	bf08      	it	eq
 8004028:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800402c:	4293      	cmp	r3, r2
 800402e:	bfc4      	itt	gt
 8004030:	1a9b      	subgt	r3, r3, r2
 8004032:	18ed      	addgt	r5, r5, r3
 8004034:	42b5      	cmp	r5, r6
 8004036:	d11a      	bne.n	800406e <_printf_common+0xd2>
 8004038:	2000      	movs	r0, #0
 800403a:	e008      	b.n	800404e <_printf_common+0xb2>
 800403c:	2301      	movs	r3, #1
 800403e:	4652      	mov	r2, sl
 8004040:	4641      	mov	r1, r8
 8004042:	4638      	mov	r0, r7
 8004044:	47c8      	blx	r9
 8004046:	3001      	adds	r0, #1
 8004048:	d103      	bne.n	8004052 <_printf_common+0xb6>
 800404a:	f04f 30ff 	mov.w	r0, #4294967295
 800404e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004052:	3501      	adds	r5, #1
 8004054:	e7c1      	b.n	8003fda <_printf_common+0x3e>
 8004056:	2030      	movs	r0, #48	@ 0x30
 8004058:	18e1      	adds	r1, r4, r3
 800405a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800405e:	1c5a      	adds	r2, r3, #1
 8004060:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8004064:	4422      	add	r2, r4
 8004066:	3302      	adds	r3, #2
 8004068:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800406c:	e7c2      	b.n	8003ff4 <_printf_common+0x58>
 800406e:	2301      	movs	r3, #1
 8004070:	4622      	mov	r2, r4
 8004072:	4641      	mov	r1, r8
 8004074:	4638      	mov	r0, r7
 8004076:	47c8      	blx	r9
 8004078:	3001      	adds	r0, #1
 800407a:	d0e6      	beq.n	800404a <_printf_common+0xae>
 800407c:	3601      	adds	r6, #1
 800407e:	e7d9      	b.n	8004034 <_printf_common+0x98>

08004080 <_printf_i>:
 8004080:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004084:	7e0f      	ldrb	r7, [r1, #24]
 8004086:	4691      	mov	r9, r2
 8004088:	2f78      	cmp	r7, #120	@ 0x78
 800408a:	4680      	mov	r8, r0
 800408c:	460c      	mov	r4, r1
 800408e:	469a      	mov	sl, r3
 8004090:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004092:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8004096:	d807      	bhi.n	80040a8 <_printf_i+0x28>
 8004098:	2f62      	cmp	r7, #98	@ 0x62
 800409a:	d80a      	bhi.n	80040b2 <_printf_i+0x32>
 800409c:	2f00      	cmp	r7, #0
 800409e:	f000 80d3 	beq.w	8004248 <_printf_i+0x1c8>
 80040a2:	2f58      	cmp	r7, #88	@ 0x58
 80040a4:	f000 80ba 	beq.w	800421c <_printf_i+0x19c>
 80040a8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80040ac:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80040b0:	e03a      	b.n	8004128 <_printf_i+0xa8>
 80040b2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80040b6:	2b15      	cmp	r3, #21
 80040b8:	d8f6      	bhi.n	80040a8 <_printf_i+0x28>
 80040ba:	a101      	add	r1, pc, #4	@ (adr r1, 80040c0 <_printf_i+0x40>)
 80040bc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80040c0:	08004119 	.word	0x08004119
 80040c4:	0800412d 	.word	0x0800412d
 80040c8:	080040a9 	.word	0x080040a9
 80040cc:	080040a9 	.word	0x080040a9
 80040d0:	080040a9 	.word	0x080040a9
 80040d4:	080040a9 	.word	0x080040a9
 80040d8:	0800412d 	.word	0x0800412d
 80040dc:	080040a9 	.word	0x080040a9
 80040e0:	080040a9 	.word	0x080040a9
 80040e4:	080040a9 	.word	0x080040a9
 80040e8:	080040a9 	.word	0x080040a9
 80040ec:	0800422f 	.word	0x0800422f
 80040f0:	08004157 	.word	0x08004157
 80040f4:	080041e9 	.word	0x080041e9
 80040f8:	080040a9 	.word	0x080040a9
 80040fc:	080040a9 	.word	0x080040a9
 8004100:	08004251 	.word	0x08004251
 8004104:	080040a9 	.word	0x080040a9
 8004108:	08004157 	.word	0x08004157
 800410c:	080040a9 	.word	0x080040a9
 8004110:	080040a9 	.word	0x080040a9
 8004114:	080041f1 	.word	0x080041f1
 8004118:	6833      	ldr	r3, [r6, #0]
 800411a:	1d1a      	adds	r2, r3, #4
 800411c:	681b      	ldr	r3, [r3, #0]
 800411e:	6032      	str	r2, [r6, #0]
 8004120:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004124:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004128:	2301      	movs	r3, #1
 800412a:	e09e      	b.n	800426a <_printf_i+0x1ea>
 800412c:	6833      	ldr	r3, [r6, #0]
 800412e:	6820      	ldr	r0, [r4, #0]
 8004130:	1d19      	adds	r1, r3, #4
 8004132:	6031      	str	r1, [r6, #0]
 8004134:	0606      	lsls	r6, r0, #24
 8004136:	d501      	bpl.n	800413c <_printf_i+0xbc>
 8004138:	681d      	ldr	r5, [r3, #0]
 800413a:	e003      	b.n	8004144 <_printf_i+0xc4>
 800413c:	0645      	lsls	r5, r0, #25
 800413e:	d5fb      	bpl.n	8004138 <_printf_i+0xb8>
 8004140:	f9b3 5000 	ldrsh.w	r5, [r3]
 8004144:	2d00      	cmp	r5, #0
 8004146:	da03      	bge.n	8004150 <_printf_i+0xd0>
 8004148:	232d      	movs	r3, #45	@ 0x2d
 800414a:	426d      	negs	r5, r5
 800414c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004150:	230a      	movs	r3, #10
 8004152:	4859      	ldr	r0, [pc, #356]	@ (80042b8 <_printf_i+0x238>)
 8004154:	e011      	b.n	800417a <_printf_i+0xfa>
 8004156:	6821      	ldr	r1, [r4, #0]
 8004158:	6833      	ldr	r3, [r6, #0]
 800415a:	0608      	lsls	r0, r1, #24
 800415c:	f853 5b04 	ldr.w	r5, [r3], #4
 8004160:	d402      	bmi.n	8004168 <_printf_i+0xe8>
 8004162:	0649      	lsls	r1, r1, #25
 8004164:	bf48      	it	mi
 8004166:	b2ad      	uxthmi	r5, r5
 8004168:	2f6f      	cmp	r7, #111	@ 0x6f
 800416a:	6033      	str	r3, [r6, #0]
 800416c:	bf14      	ite	ne
 800416e:	230a      	movne	r3, #10
 8004170:	2308      	moveq	r3, #8
 8004172:	4851      	ldr	r0, [pc, #324]	@ (80042b8 <_printf_i+0x238>)
 8004174:	2100      	movs	r1, #0
 8004176:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800417a:	6866      	ldr	r6, [r4, #4]
 800417c:	2e00      	cmp	r6, #0
 800417e:	bfa8      	it	ge
 8004180:	6821      	ldrge	r1, [r4, #0]
 8004182:	60a6      	str	r6, [r4, #8]
 8004184:	bfa4      	itt	ge
 8004186:	f021 0104 	bicge.w	r1, r1, #4
 800418a:	6021      	strge	r1, [r4, #0]
 800418c:	b90d      	cbnz	r5, 8004192 <_printf_i+0x112>
 800418e:	2e00      	cmp	r6, #0
 8004190:	d04b      	beq.n	800422a <_printf_i+0x1aa>
 8004192:	4616      	mov	r6, r2
 8004194:	fbb5 f1f3 	udiv	r1, r5, r3
 8004198:	fb03 5711 	mls	r7, r3, r1, r5
 800419c:	5dc7      	ldrb	r7, [r0, r7]
 800419e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80041a2:	462f      	mov	r7, r5
 80041a4:	42bb      	cmp	r3, r7
 80041a6:	460d      	mov	r5, r1
 80041a8:	d9f4      	bls.n	8004194 <_printf_i+0x114>
 80041aa:	2b08      	cmp	r3, #8
 80041ac:	d10b      	bne.n	80041c6 <_printf_i+0x146>
 80041ae:	6823      	ldr	r3, [r4, #0]
 80041b0:	07df      	lsls	r7, r3, #31
 80041b2:	d508      	bpl.n	80041c6 <_printf_i+0x146>
 80041b4:	6923      	ldr	r3, [r4, #16]
 80041b6:	6861      	ldr	r1, [r4, #4]
 80041b8:	4299      	cmp	r1, r3
 80041ba:	bfde      	ittt	le
 80041bc:	2330      	movle	r3, #48	@ 0x30
 80041be:	f806 3c01 	strble.w	r3, [r6, #-1]
 80041c2:	f106 36ff 	addle.w	r6, r6, #4294967295
 80041c6:	1b92      	subs	r2, r2, r6
 80041c8:	6122      	str	r2, [r4, #16]
 80041ca:	464b      	mov	r3, r9
 80041cc:	4621      	mov	r1, r4
 80041ce:	4640      	mov	r0, r8
 80041d0:	f8cd a000 	str.w	sl, [sp]
 80041d4:	aa03      	add	r2, sp, #12
 80041d6:	f7ff fee1 	bl	8003f9c <_printf_common>
 80041da:	3001      	adds	r0, #1
 80041dc:	d14a      	bne.n	8004274 <_printf_i+0x1f4>
 80041de:	f04f 30ff 	mov.w	r0, #4294967295
 80041e2:	b004      	add	sp, #16
 80041e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80041e8:	6823      	ldr	r3, [r4, #0]
 80041ea:	f043 0320 	orr.w	r3, r3, #32
 80041ee:	6023      	str	r3, [r4, #0]
 80041f0:	2778      	movs	r7, #120	@ 0x78
 80041f2:	4832      	ldr	r0, [pc, #200]	@ (80042bc <_printf_i+0x23c>)
 80041f4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80041f8:	6823      	ldr	r3, [r4, #0]
 80041fa:	6831      	ldr	r1, [r6, #0]
 80041fc:	061f      	lsls	r7, r3, #24
 80041fe:	f851 5b04 	ldr.w	r5, [r1], #4
 8004202:	d402      	bmi.n	800420a <_printf_i+0x18a>
 8004204:	065f      	lsls	r7, r3, #25
 8004206:	bf48      	it	mi
 8004208:	b2ad      	uxthmi	r5, r5
 800420a:	6031      	str	r1, [r6, #0]
 800420c:	07d9      	lsls	r1, r3, #31
 800420e:	bf44      	itt	mi
 8004210:	f043 0320 	orrmi.w	r3, r3, #32
 8004214:	6023      	strmi	r3, [r4, #0]
 8004216:	b11d      	cbz	r5, 8004220 <_printf_i+0x1a0>
 8004218:	2310      	movs	r3, #16
 800421a:	e7ab      	b.n	8004174 <_printf_i+0xf4>
 800421c:	4826      	ldr	r0, [pc, #152]	@ (80042b8 <_printf_i+0x238>)
 800421e:	e7e9      	b.n	80041f4 <_printf_i+0x174>
 8004220:	6823      	ldr	r3, [r4, #0]
 8004222:	f023 0320 	bic.w	r3, r3, #32
 8004226:	6023      	str	r3, [r4, #0]
 8004228:	e7f6      	b.n	8004218 <_printf_i+0x198>
 800422a:	4616      	mov	r6, r2
 800422c:	e7bd      	b.n	80041aa <_printf_i+0x12a>
 800422e:	6833      	ldr	r3, [r6, #0]
 8004230:	6825      	ldr	r5, [r4, #0]
 8004232:	1d18      	adds	r0, r3, #4
 8004234:	6961      	ldr	r1, [r4, #20]
 8004236:	6030      	str	r0, [r6, #0]
 8004238:	062e      	lsls	r6, r5, #24
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	d501      	bpl.n	8004242 <_printf_i+0x1c2>
 800423e:	6019      	str	r1, [r3, #0]
 8004240:	e002      	b.n	8004248 <_printf_i+0x1c8>
 8004242:	0668      	lsls	r0, r5, #25
 8004244:	d5fb      	bpl.n	800423e <_printf_i+0x1be>
 8004246:	8019      	strh	r1, [r3, #0]
 8004248:	2300      	movs	r3, #0
 800424a:	4616      	mov	r6, r2
 800424c:	6123      	str	r3, [r4, #16]
 800424e:	e7bc      	b.n	80041ca <_printf_i+0x14a>
 8004250:	6833      	ldr	r3, [r6, #0]
 8004252:	2100      	movs	r1, #0
 8004254:	1d1a      	adds	r2, r3, #4
 8004256:	6032      	str	r2, [r6, #0]
 8004258:	681e      	ldr	r6, [r3, #0]
 800425a:	6862      	ldr	r2, [r4, #4]
 800425c:	4630      	mov	r0, r6
 800425e:	f000 f859 	bl	8004314 <memchr>
 8004262:	b108      	cbz	r0, 8004268 <_printf_i+0x1e8>
 8004264:	1b80      	subs	r0, r0, r6
 8004266:	6060      	str	r0, [r4, #4]
 8004268:	6863      	ldr	r3, [r4, #4]
 800426a:	6123      	str	r3, [r4, #16]
 800426c:	2300      	movs	r3, #0
 800426e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004272:	e7aa      	b.n	80041ca <_printf_i+0x14a>
 8004274:	4632      	mov	r2, r6
 8004276:	4649      	mov	r1, r9
 8004278:	4640      	mov	r0, r8
 800427a:	6923      	ldr	r3, [r4, #16]
 800427c:	47d0      	blx	sl
 800427e:	3001      	adds	r0, #1
 8004280:	d0ad      	beq.n	80041de <_printf_i+0x15e>
 8004282:	6823      	ldr	r3, [r4, #0]
 8004284:	079b      	lsls	r3, r3, #30
 8004286:	d413      	bmi.n	80042b0 <_printf_i+0x230>
 8004288:	68e0      	ldr	r0, [r4, #12]
 800428a:	9b03      	ldr	r3, [sp, #12]
 800428c:	4298      	cmp	r0, r3
 800428e:	bfb8      	it	lt
 8004290:	4618      	movlt	r0, r3
 8004292:	e7a6      	b.n	80041e2 <_printf_i+0x162>
 8004294:	2301      	movs	r3, #1
 8004296:	4632      	mov	r2, r6
 8004298:	4649      	mov	r1, r9
 800429a:	4640      	mov	r0, r8
 800429c:	47d0      	blx	sl
 800429e:	3001      	adds	r0, #1
 80042a0:	d09d      	beq.n	80041de <_printf_i+0x15e>
 80042a2:	3501      	adds	r5, #1
 80042a4:	68e3      	ldr	r3, [r4, #12]
 80042a6:	9903      	ldr	r1, [sp, #12]
 80042a8:	1a5b      	subs	r3, r3, r1
 80042aa:	42ab      	cmp	r3, r5
 80042ac:	dcf2      	bgt.n	8004294 <_printf_i+0x214>
 80042ae:	e7eb      	b.n	8004288 <_printf_i+0x208>
 80042b0:	2500      	movs	r5, #0
 80042b2:	f104 0619 	add.w	r6, r4, #25
 80042b6:	e7f5      	b.n	80042a4 <_printf_i+0x224>
 80042b8:	080045b0 	.word	0x080045b0
 80042bc:	080045c1 	.word	0x080045c1

080042c0 <memmove>:
 80042c0:	4288      	cmp	r0, r1
 80042c2:	b510      	push	{r4, lr}
 80042c4:	eb01 0402 	add.w	r4, r1, r2
 80042c8:	d902      	bls.n	80042d0 <memmove+0x10>
 80042ca:	4284      	cmp	r4, r0
 80042cc:	4623      	mov	r3, r4
 80042ce:	d807      	bhi.n	80042e0 <memmove+0x20>
 80042d0:	1e43      	subs	r3, r0, #1
 80042d2:	42a1      	cmp	r1, r4
 80042d4:	d008      	beq.n	80042e8 <memmove+0x28>
 80042d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80042da:	f803 2f01 	strb.w	r2, [r3, #1]!
 80042de:	e7f8      	b.n	80042d2 <memmove+0x12>
 80042e0:	4601      	mov	r1, r0
 80042e2:	4402      	add	r2, r0
 80042e4:	428a      	cmp	r2, r1
 80042e6:	d100      	bne.n	80042ea <memmove+0x2a>
 80042e8:	bd10      	pop	{r4, pc}
 80042ea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80042ee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80042f2:	e7f7      	b.n	80042e4 <memmove+0x24>

080042f4 <_sbrk_r>:
 80042f4:	b538      	push	{r3, r4, r5, lr}
 80042f6:	2300      	movs	r3, #0
 80042f8:	4d05      	ldr	r5, [pc, #20]	@ (8004310 <_sbrk_r+0x1c>)
 80042fa:	4604      	mov	r4, r0
 80042fc:	4608      	mov	r0, r1
 80042fe:	602b      	str	r3, [r5, #0]
 8004300:	f7fc fd3e 	bl	8000d80 <_sbrk>
 8004304:	1c43      	adds	r3, r0, #1
 8004306:	d102      	bne.n	800430e <_sbrk_r+0x1a>
 8004308:	682b      	ldr	r3, [r5, #0]
 800430a:	b103      	cbz	r3, 800430e <_sbrk_r+0x1a>
 800430c:	6023      	str	r3, [r4, #0]
 800430e:	bd38      	pop	{r3, r4, r5, pc}
 8004310:	200007f0 	.word	0x200007f0

08004314 <memchr>:
 8004314:	4603      	mov	r3, r0
 8004316:	b510      	push	{r4, lr}
 8004318:	b2c9      	uxtb	r1, r1
 800431a:	4402      	add	r2, r0
 800431c:	4293      	cmp	r3, r2
 800431e:	4618      	mov	r0, r3
 8004320:	d101      	bne.n	8004326 <memchr+0x12>
 8004322:	2000      	movs	r0, #0
 8004324:	e003      	b.n	800432e <memchr+0x1a>
 8004326:	7804      	ldrb	r4, [r0, #0]
 8004328:	3301      	adds	r3, #1
 800432a:	428c      	cmp	r4, r1
 800432c:	d1f6      	bne.n	800431c <memchr+0x8>
 800432e:	bd10      	pop	{r4, pc}

08004330 <memcpy>:
 8004330:	440a      	add	r2, r1
 8004332:	4291      	cmp	r1, r2
 8004334:	f100 33ff 	add.w	r3, r0, #4294967295
 8004338:	d100      	bne.n	800433c <memcpy+0xc>
 800433a:	4770      	bx	lr
 800433c:	b510      	push	{r4, lr}
 800433e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004342:	4291      	cmp	r1, r2
 8004344:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004348:	d1f9      	bne.n	800433e <memcpy+0xe>
 800434a:	bd10      	pop	{r4, pc}

0800434c <_realloc_r>:
 800434c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004350:	4680      	mov	r8, r0
 8004352:	4615      	mov	r5, r2
 8004354:	460c      	mov	r4, r1
 8004356:	b921      	cbnz	r1, 8004362 <_realloc_r+0x16>
 8004358:	4611      	mov	r1, r2
 800435a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800435e:	f7ff bc39 	b.w	8003bd4 <_malloc_r>
 8004362:	b92a      	cbnz	r2, 8004370 <_realloc_r+0x24>
 8004364:	f7ff fbcc 	bl	8003b00 <_free_r>
 8004368:	2400      	movs	r4, #0
 800436a:	4620      	mov	r0, r4
 800436c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004370:	f000 f81a 	bl	80043a8 <_malloc_usable_size_r>
 8004374:	4285      	cmp	r5, r0
 8004376:	4606      	mov	r6, r0
 8004378:	d802      	bhi.n	8004380 <_realloc_r+0x34>
 800437a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800437e:	d8f4      	bhi.n	800436a <_realloc_r+0x1e>
 8004380:	4629      	mov	r1, r5
 8004382:	4640      	mov	r0, r8
 8004384:	f7ff fc26 	bl	8003bd4 <_malloc_r>
 8004388:	4607      	mov	r7, r0
 800438a:	2800      	cmp	r0, #0
 800438c:	d0ec      	beq.n	8004368 <_realloc_r+0x1c>
 800438e:	42b5      	cmp	r5, r6
 8004390:	462a      	mov	r2, r5
 8004392:	4621      	mov	r1, r4
 8004394:	bf28      	it	cs
 8004396:	4632      	movcs	r2, r6
 8004398:	f7ff ffca 	bl	8004330 <memcpy>
 800439c:	4621      	mov	r1, r4
 800439e:	4640      	mov	r0, r8
 80043a0:	f7ff fbae 	bl	8003b00 <_free_r>
 80043a4:	463c      	mov	r4, r7
 80043a6:	e7e0      	b.n	800436a <_realloc_r+0x1e>

080043a8 <_malloc_usable_size_r>:
 80043a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80043ac:	1f18      	subs	r0, r3, #4
 80043ae:	2b00      	cmp	r3, #0
 80043b0:	bfbc      	itt	lt
 80043b2:	580b      	ldrlt	r3, [r1, r0]
 80043b4:	18c0      	addlt	r0, r0, r3
 80043b6:	4770      	bx	lr

080043b8 <_init>:
 80043b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043ba:	bf00      	nop
 80043bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80043be:	bc08      	pop	{r3}
 80043c0:	469e      	mov	lr, r3
 80043c2:	4770      	bx	lr

080043c4 <_fini>:
 80043c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043c6:	bf00      	nop
 80043c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80043ca:	bc08      	pop	{r3}
 80043cc:	469e      	mov	lr, r3
 80043ce:	4770      	bx	lr
